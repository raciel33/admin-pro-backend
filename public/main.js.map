{"version":3,"sources":["./src/app/pages/mantenimientos/hospitales/hospitales.component.ts","./src/app/pages/mantenimientos/hospitales/hospitales.component.html","./src/app/pipes/imagen.pipe.ts","./src/app/models/usuario.model.ts","./src/app/shared/header/header.component.ts","./src/app/shared/header/header.component.html","./src/app/pages/pages.component.ts","./src/app/pages/pages.component.html","./src/environments/environment.ts","./src/app/pages/progress/progress.component.ts","./src/app/pages/progress/progress.component.html","./src/app/auth/auth.routing.ts","./src/app/services/file-upload.service.ts","./src/app/pages/rxjs/rxjs.component.ts","./src/app/pages/rxjs/rxjs.component.html","./src/app/nopagesfound/nopagesfound.component.ts","./src/app/nopagesfound/nopagesfound.component.html","./src/app/components/modal-imagen/modal-imagen.component.ts","./src/app/components/modal-imagen/modal-imagen.component.html","./src/app/services/medicos.service.ts","./src/app/pages/account-setting/account-setting.component.ts","./src/app/pages/account-setting/account-setting.component.html","./src/app/shared/shared.module.ts","./src/app/pages/perfil/perfil.component.ts","./src/app/pages/perfil/perfil.component.html","./node_modules/moment/locale sync ^\\.\\/.*$","./src/app/services/busquedas.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/pages/dashboard/dashboard.component.ts","./src/app/pages/dashboard/dashboard.component.html","./src/app/pages/mantenimientos/usuarios/usuarios.component.ts","./src/app/pages/mantenimientos/usuarios/usuarios.component.html","./src/app/guards/auth.guard.ts","./src/app/pages/grafica1/grafica1.component.ts","./src/app/pages/grafica1/grafica1.component.html","./src/app/services/modal-imagen.service.ts","./src/app/pages/mantenimientos/medicos/medico.component.ts","./src/app/pages/mantenimientos/medicos/medico.component.html","./src/app/auth/auth.module.ts","./src/app/app.module.ts","./src/app/auth/register/register.component.ts","./src/app/auth/register/register.component.html","./src/app/auth/login/login.component.ts","./src/app/auth/login/login.component.html","./src/environments/environment.prod.ts","./src/app/services/settingd.service.ts","./src/app/pages/pages.module.ts","./src/app/components/incrementador/incrementador.component.ts","./src/app/components/incrementador/incrementador.component.html","./src/app/pages/busquedas/busquedas.component.html","./src/app/pages/busquedas/busquedas.component.ts","./src/app/pipes/pipes.module.ts","./src/app/components/components.module.ts","./src/app/pages/pages.routing.ts","./src/app/shared/breadcrumbs/breadcrumbs.component.ts","./src/app/shared/breadcrumbs/breadcrumbs.component.html","./src/app/pages/mantenimientos/medicos/medicos.component.ts","./src/app/pages/mantenimientos/medicos/medicos.component.html","./src/app/components/dona/dona.component.ts","./src/app/components/dona/dona.component.html","./src/app/services/usuario.service.ts","./src/app/services/hospital-service.service.ts","./src/app/shared/sidebar/sidebar.component.html","./src/app/shared/sidebar/sidebar.component.ts","./src/app/app-routing.module.ts","./src/app/services/sidebar.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAG+B;AAEQ;;;;;;;;;ICMvC,yEAAuD;IACnD,yEAAoB;IAChB,yEAAuD;IACnD,wEAA0B;IAAA,mEAAQ;IAAA,4DAAK;IACvC,mEAA2C;IAC3C,wEAAgB;IAAA,2EAAgB;IAAA,4DAAI;IACxC,4DAAM;IACV,4DAAM;IACV,4DAAM;;;;IAiCsB,qEAAwC;IAIpC,yEAAwB;IACpB,0EAAkI;IAA7H,0WAA8B;;IAAnC,4DAAkI;IACtI,4DAAK;IACL,qEAAI;IACA,4EAAwG;IAA9B,8OAA6B;IAAvG,4DAAwG;IAC5G,4DAAK;IAEL,yEAAyC;IACrC,wEAAiH;IAA9G,4WAAkC;IAA6E,mEAAgD;IAAC,4DAAI;IACvK,wEAA0G;IAAvG,8WAAoC;IAAoE,oEAAuC;IAAC,4DAAI;IAC3J,4DAAK;IACT,4DAAK;;;IAViE,0DAA6C;IAA7C,4NAA6C;IAGjC,0DAA6B;IAA7B,uFAA6B;;;;IAxC3I,0EAAmC;IAC/B,yEAAoB;IAChB,yEAAkB;IACd,yEAAuB;IACnB,0EAAiB;IACb,0EAAmB;IACf,yEAAuB;IAAA,sEACnB;IACJ,4DAAK;IACL,yEAA0B;IAAA,kGAAuC;IAAA,4DAAK;IAC1E,4DAAM;IACN,2EAAiB;IACb,2EAAwB;IACpB,8EAA2D;IAA3B,gUAA0B;IAClE,oEAAgC;IAAA,2EAClC;IAAA,4DAAS;IACH,4DAAM;IACV,4DAAM;IACV,4DAAM;IAGN,2EAA8B;IAC1B,6EAAoC;IAChC,yEAAO;IACH,sEAAI;IACA,0EAAiB;IAAA,kEAAM;IAAA,4DAAK;IAC5B,sEAAI;IAAA,kEAAM;IAAA,4DAAK;IAEf,0EAAoC;IAAA,oEAAQ;IAAA,4DAAK;IACrD,4DAAK;IACT,4DAAQ;IACR,yEAAO;IACH,uHAeK;IACT,4DAAQ;IACZ,4DAAQ;IACZ,4DAAM;IAEV,4DAAM;IACV,4DAAM;IACV,4DAAM;IACV,4DAAM;;;IAvB+C,2DAAa;IAAb,sFAAa;;ADrC3D,MAAM,mBAAmB;IAQ9B,YAAqB,eAAsC,EACjD,kBAAsC,EACtC,eAAgC;QAFrB,oBAAe,GAAf,eAAe,CAAuB;QACjD,uBAAkB,GAAlB,kBAAkB,CAAoB;QACtC,oBAAe,GAAf,eAAe,CAAiB;QARnC,eAAU,GAAgB,EAAE,CAAC;QAC7B,aAAQ,GAAY,IAAI,CAAC,CAAI,wBAAwB;QAC5D,mBAAc,GAAe,EAAE,CAAC;IAO1B,CAAC;IAEP,WAAW;QACP,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE;IACf,CAAC;IAEhB,QAAQ;QAEN,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,2DAA2D;QAC3D,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,kBAAkB,CAAC,WAAW;YACjE,IAAI,CACF,4DAAK,CAAC,GAAG,CAAC,+CAA8C;SACzD;aACA,SAAS,CAAC,GAAG,GAAE,CAAC,IAAI,CAAC,gBAAgB,EAAE,CAAC;IAC3C,CAAC;IAED,gBAAgB;QACd,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QAErB,IAAI,CAAC,eAAe,CAAC,gBAAgB,EAAE,CAAC,SAAS,CAAE,IAAI,GAAE;YAEvD,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;YAEtB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,qEAAoE;QAG7F,CAAC,CAAC;IACJ,CAAC;IAED,cAAc,CAAE,QAAkB;QAEhC,IAAI,CAAC,eAAe,CAAC,oBAAoB,CAAE,QAAQ,CAAC,GAAG,EAAE,QAAQ,CAAC,MAAM,CAAE,CAAC,SAAS,CAClF,IAAI,GAAE;YACJ,kDAAI,CAAC,IAAI,CAAC,aAAa,EAAE,QAAQ,CAAC,MAAM,EAAC,SAAS,CAAC;QACrD,CAAC,CACF;IAEH,CAAC;IAGH,gBAAgB,CAAE,QAAiB;QAEnC,8DAA8D;QAC1D,kDAAI,CAAC,IAAI,CAAC;YACR,KAAK,EAAE,mBAAmB;YAC1B,IAAI,EAAE,8BAA+B,QAAQ,CAAC,MAAM,EAAE;YACtD,IAAI,EAAE,UAAU;YAChB,gBAAgB,EAAE,IAAI;YACtB,kBAAkB,EAAE,SAAS;YAC7B,iBAAiB,EAAE,MAAM;YACzB,iBAAiB,EAAE,YAAY;SAChC,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;YACjB,IAAI,MAAM,CAAC,WAAW,EAAE;gBACtB,IAAI,CAAC,eAAe,CAAC,kBAAkB,CAAE,QAAQ,CAAC,GAAG,CAAC,CAAC,SAAS,CAC9D,IAAI,GAAE;oBACJ,IAAI,CAAC,gBAAgB,EAAE,CAAC;oBACxB,kDAAI,CAAC,IAAI,CAAC,SAAS,EAAE,QAAQ,CAAC,MAAM,EAAC,SAAS,CAAC;gBACjD,CAAC,CACF;gBACC,kDAAI,CAAC,IAAI,CACP,UAAU,EACV,GAAI,QAAQ,CAAC,MAAO,8BAA8B,EAClD,SAAS,CACV;aACF;QACH,CAAC,CAAC;IACJ,CAAC;IAGC,cAAc;;YAEX,MAAM,EAAE,KAAK,GAAG,EAAE,EAAE,GAAG,MAAM,kDAAI,CAAC,IAAI,CAAS;gBAC7C,KAAK,EAAE,gBAAgB;gBACvB,IAAI,EAAE,sCAAsC;gBAC5C,KAAK,EAAE,MAAM;gBACb,gBAAgB,EAAE,qBAAqB;gBACxC,gBAAgB,EAAC,IAAI;aACrB,CAAC,CAAC;YAEH,IAAI,KAAK,CAAC,IAAI,EAAE,CAAC,MAAM,GAAG,CAAC,EAAE;gBAC1B,IAAI,CAAC,eAAe,CAAC,eAAe,CAAE,KAAK,CAAE;oBAC7C,SAAS,CAAE,CAAC,IAAS,EAAE,EAAE;oBACtB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAG,IAAI,CAAC,QAAQ,CAAE,qBAAmB;gBAC5D,CAAC,CAAC;aACJ;QAER,CAAC;KAAA;IAED,UAAU,CAAE,QAAiB;QAC3B,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,YAAY,EAAC,QAAQ,CAAC,GAAG,EAAE,QAAQ,CAAC,GAAG,CAAC,CAAC;IAE9E,CAAC;IAED,MAAM,CAAG,OAAe;QACtB,IAAI,OAAO,CAAC,MAAM,KAAK,CAAC,EAAC;YACvB,IAAI,CAAC,gBAAgB,EAAE,CAAC;YACxB,OAAO,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,cAAc;SAE7C;QACD,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,YAAY,EAAE,OAAO,CAAE,CAAC,SAAS,CAC7D,IAAI,GAAE,CACF,IAAI,CAAC,UAAU,GAAG,IAAI,CACvB;IAIL,CAAC;;sFAtHU,mBAAmB;mGAAnB,mBAAmB;;QCfhC,yEAAsC;QAClC,yEAAoB;QAChB,yEAAkB;QACd,yEAAuB;QAEnB,8EAAuH;QAAjD,uRAAS,qBAA0B,IAAC;QAA1G,4DAAuH;QAE3H,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,+GAQM;QACN,gHAuDM;;QAhEiC,0DAAc;QAAd,8EAAc;QASnC,0DAAe;QAAf,+EAAe;;;;;;;;;;;;;;;;;;;;;;;;;;ACnBjC;AAAA;AAAA;AAAA;AAA6D;;AAE7D,MAAM,QAAQ,GAAG,qEAAW,CAAC,QAAQ;AAK9B,MAAM,UAAU;IAErB,SAAS,CAAC,GAAW,EAAE,IAA2C;QAE1D,wBAAwB;QACxB,IAAI,CAAC,GAAG,EAAG;YACT,OAAO,GAAI,QAAS,YAAY,IAAI,YAAY,CAAC;SACnD;QACT,4CAA4C;aAC/B,IAAG,GAAG,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAC;YACzB,OAAO,GAAG,CAAC;SACf;QACV,kCAAkC;aACpB,IAAI,GAAG,EAAG;YACX,OAAO,GAAI,QAAS,YAAY,IAAI,IAAK,GAAI,EAAE,CAAC;SACjD;aAAM;YACL,OAAO,GAAI,QAAS,YAAY,IAAI,YAAY,CAAC;SAClD;IAAE,CAAC;;oEAjBF,UAAU;sGAAV,UAAU;;;;;;;;;;;;;ACRvB;AAAA;AAAA;AAA+D;AAE/D,MAAQ,QAAQ,GAAG,qEAAW,CAAC,QAAQ,CAAC;AAGjC,MAAM,OAAO;IAEd,YACQ,MAAc,EACd,KAAY,EACZ,QAAgB,EAChB,GAAW,EACX,IAAgC,EAAC,eAAe;IAChD,MAAe,EACf,GAAW;QANX,WAAM,GAAN,MAAM,CAAQ;QACd,UAAK,GAAL,KAAK,CAAO;QACZ,aAAQ,GAAR,QAAQ,CAAQ;QAChB,QAAG,GAAH,GAAG,CAAQ;QACX,SAAI,GAAJ,IAAI,CAA4B;QAChC,WAAM,GAAN,MAAM,CAAS;QACf,QAAG,GAAH,GAAG,CAAQ;IAGnB,CAAC;IAED,oEAAoE;IACtE,IAAI,SAAS;QAEX,wBAAwB;QACxB,IAAI,CAAC,IAAI,CAAC,GAAG,EAAC;YACZ,OAAO,GAAI,QAAS,6BAA6B,CAAC;SACnD;QACA,4CAA4C;aACzC,IAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAC;YAChC,OAAO,IAAI,CAAC,GAAG,CAAC;SACjB;QACD,kCAAkC;aAC9B,IAAI,IAAI,CAAC,GAAG,EAAG;YACf,OAAO,GAAI,QAAS,qBAAsB,IAAI,CAAC,GAAI,EAAE,CAAC;SACvD;aAAM;YACL,OAAO,GAAI,QAAS,6BAA6B,CAAC;SACnD;IAEH,CAAC;CACN;;;;;;;;;;;;;;;;;;;;;;;;;ACvBM,MAAM,eAAe;IAM1B,YAAqB,cAA8B,EAC3B,MAAa;QADhB,mBAAc,GAAd,cAAc,CAAgB;QAC3B,WAAM,GAAN,MAAM,CAAO;QAE/B,IAAI,CAAC,OAAO,GAAG,cAAc,CAAC,OAAO,CAAC;IAG3C,CAAC;IAEF,oBAAoB;IACpB,MAAM;QACF,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC,cAAc,CAAC,gBAAgB,CAAC,CAAC;QACxD,IAAI,CAAC,MAAM,CAAC,OAAO,GAAG,GAAG,EAAE;YAC3B,MAAM,CAAC,QAAQ,CAAC,EAAE,CAAC,iBAAiB,EAAE,CAAC;QACzC,CAAC;QACA,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE,CAAC;IAChC,CAAC;IAEF,uDAAuD;IACvD,MAAM,CAAE,OAAe;QAEtB,+DAA+D;QAC/D,IAAI,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE;YACzB,OAAO;SACP;QACC,uBAAuB;QACvB,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,qBAAsB,OAAQ,EAAE,CAAC,CAAC;IAC/D,CAAC;;8EAhCW,eAAe;+FAAf,eAAe;;QCb5B,4EAAuB;QACnB,yEAA6D;QAIzD,yEAA2B;QACvB,uEAA0C;QACpB,oEAAG;QAGT,oEAA4E;QAE5E,oEAAmF;QACvF,4DAAI;QAEM,uEAAM;QAEf,oEAA4E;QAE5E,oEAAmF;QAAA,4DAAO;QAAC,4DAAI;QAChH,4DAAM;QAIN,0EAA6B;QAIzB,yEAA+B;QAE3B,0EAAqB;QAAC,yEAA+F;QAAA,oEAAuB;QAAA,4DAAI;QAAC,4DAAK;QACtJ,0EAAqB;QAAC,yEAAoG;QAAA,oEAAuB;QAAA,4DAAI;QAAC,4DAAK;QAC3J,qEAAyC;QAC7C,4DAAK;QAIL,0EAA+B;QAI3B,0EAA+C;QAAC,yEAAqF;QAAA,oEAAyB;QAAA,4DAAI;QAC9J,4EAA6D;QAApC,qRAAU,qBAAwB,IAAC;QACxD,4EAAoG;QACpG,yEAAmB;QAAA,oEAAwB;QAAA,4DAAI;QACnD,4DAAO;QACX,4DAAK;QAIL,0EAA8B;QAC1B,yEAAsI;QAAC,oEAA+B;QAClK,2EAAoB;QAAC,uEAA8B;QAAC,uEAA2B;QAAC,4DAAM;QAC1F,4DAAI;QACJ,2EAAuE;QACnE,sEAAI;QACA,sEAAI;QACA,2EAAwB;QAAA,yEAAa;QAAA,4DAAM;QAC/C,4DAAK;QACL,sEAAI;QACA,2EAA4B;QAExB,yEAAY;QACR,2EAAuC;QAAA,oEAA0B;QAAA,4DAAM;QACvE,2EAA0B;QACtB,sEAAI;QAAA,wEAAY;QAAA,4DAAK;QAAC,4EAAwB;QAAA,sFAA0B;QAAA,4DAAO;QAAC,4EAAmB;QAAA,mEAAO;QAAA,4DAAO;QAAC,4DAAM;QAChI,4DAAI;QAEJ,yEAAY;QACR,2EAAwC;QAAA,oEAA2B;QAAA,4DAAM;QACzE,2EAA0B;QACtB,sEAAI;QAAA,uEAAW;QAAA,4DAAK;QAAC,4EAAwB;QAAA,+FAAmC;QAAA,4DAAO;QAAC,4EAAmB;QAAA,mEAAO;QAAA,4DAAO;QAAC,4DAAM;QACxI,4DAAI;QAEJ,yEAAY;QACR,2EAAqC;QAAA,oEAA2B;QAAA,4DAAM;QACtE,2EAA0B;QACtB,sEAAI;QAAA,oEAAQ;QAAA,4DAAK;QAAC,4EAAwB;QAAA,uGAA2C;QAAA,4DAAO;QAAC,4EAAmB;QAAA,mEAAO;QAAA,4DAAO;QAAC,4DAAM;QAC7I,4DAAI;QAEJ,yEAAY;QACR,2EAAwC;QAAA,oEAAuB;QAAA,4DAAM;QACrE,2EAA0B;QACtB,sEAAI;QAAA,uEAAW;QAAA,4DAAK;QAAC,4EAAwB;QAAA,kFAAsB;QAAA,4DAAO;QAAC,4EAAmB;QAAA,mEAAO;QAAA,4DAAO;QAAC,4DAAM;QAC3H,4DAAI;QACR,4DAAM;QACV,4DAAK;QACL,sEAAI;QACA,yEAA2D;QAAC,0EAAQ;QAAA,mFAAuB;QAAA,4DAAS;QAAC,oEAAiC;QAAC,4DAAI;QAC/I,4DAAK;QACT,4DAAK;QACT,4DAAM;QACV,4DAAK;QAOL,0EAA8B;QAC1B,yEAA6I;QAAC,oEAA6B;QACvK,2EAAoB;QAAC,uEAA8B;QAAC,uEAA2B;QAAC,4DAAM;QAC1F,4DAAI;QACJ,2EAA2F;QACvF,sEAAI;QACA,sEAAI;QACA,2EAAwB;QAAA,mFAAuB;QAAA,4DAAM;QACzD,4DAAK;QACL,sEAAI;QACA,2EAA4B;QAExB,yEAAY;QACR,4EAAsB;QAAC,uEAAqE;QAAC,wEAAsD;QAAC,4DAAM;QAC1J,4EAA0B;QACtB,uEAAI;QAAA,wEAAW;QAAA,4DAAK;QAAC,6EAAwB;QAAA,mFAAsB;QAAA,4DAAO;QAAC,6EAAmB;QAAA,oEAAO;QAAA,4DAAO;QAAC,4DAAM;QAC3H,4DAAI;QAEJ,0EAAY;QACR,4EAAsB;QAAC,uEAAqE;QAAC,wEAAoD;QAAC,4DAAM;QACxJ,4EAA0B;QACtB,uEAAI;QAAA,uEAAU;QAAA,4DAAK;QAAC,6EAAwB;QAAA,yFAA4B;QAAA,4DAAO;QAAC,6EAAmB;QAAA,oEAAO;QAAA,4DAAO;QAAC,4DAAM;QAChI,4DAAI;QAEJ,0EAAY;QACR,4EAAsB;QAAC,uEAAqE;QAAC,wEAAoD;QAAC,4DAAM;QACxJ,4EAA0B;QACtB,uEAAI;QAAA,wEAAW;QAAA,4DAAK;QAAC,6EAAwB;QAAA,2EAAc;QAAA,4DAAO;QAAC,6EAAmB;QAAA,oEAAO;QAAA,4DAAO;QAAC,4DAAM;QACnH,4DAAI;QAEJ,0EAAY;QACR,4EAAsB;QAAC,uEAAqE;QAAC,wEAAuD;QAAC,4DAAM;QAC3J,4EAA0B;QACtB,uEAAI;QAAA,wEAAW;QAAA,4DAAK;QAAC,6EAAwB;QAAA,mFAAsB;QAAA,4DAAO;QAAC,6EAAmB;QAAA,oEAAO;QAAA,4DAAO;QAAC,4DAAM;QAC3H,4DAAI;QACR,4DAAM;QACV,4DAAK;QACL,uEAAI;QACA,0EAA2D;QAAC,2EAAQ;QAAA,4EAAe;QAAA,4DAAS;QAAC,qEAAiC;QAAC,4DAAI;QACvI,4DAAK;QACT,4DAAK;QACT,4DAAM;QACV,4DAAK;QAYL,2EAA8B;QAC1B,0EAAsI;QAAC,qEAAsC;QAAA,4DAAI;QACjL,4EAA+D;QAAC,0EAAkC;QAAA,qEAAsC;QAAC,mEAAK;QAAA,4DAAI;QAAC,0EAAkC;QAAA,qEAAsC;QAAC,oEAAM;QAAA,4DAAI;QAAC,0EAAkC;QAAA,qEAAsC;QAAC,mEAAK;QAAA,4DAAI;QAAwB,0EAAkC;QAAA,qEAAsC;QAAC,mEAAK;QAAA,4DAAI;QAAC,4DAAM;QAC9a,4DAAK;QAIL,2EAA8B;QAC1B,0EAAsI;QAClI,uEAAgE;QAAA,4DAAI;QACxE,4EAAgE;QAC5D,2EAA0B;QACtB,uEAAI;QACA,4EAAyB;QAIrB,4EAAmB;QAAA,uEAA2F;QAAA,4DAAM;QACpH,4EAAoB;QAChB,uEAAI;QAAA,yDAAmB;QAAA,4DAAK;QAC5B,0EAAsB;QAElB,yDACA;;QACO,yDAEX;QAAA,4DAAI;QAAA,0EAAuE;QAAA,yEAAY;QAAA,4DAAI;QAAA,4DAAM;QACzG,4DAAM;QACV,4DAAK;QACL,sEAA0C;QAC1C,uEAAI;QAAA,0EAAmD;QAAA,qEAAuB;QAAC,wEAAU;QAAA,4DAAI;QAAA,4DAAK;QAClG,uEAAI;QAAA,0EAAY;QAAA,qEAAyB;QAAC,wEAAU;QAAA,4DAAI;QAAA,4DAAK;QAC7D,uEAAI;QAAA,0EAAY;QAAA,qEAAwB;QAAC,mEAAK;QAAA,4DAAI;QAAA,4DAAK;QACvD,sEAA0C;QAC1C,uEAAI;QAAA,0EAAY;QAAA,qEAA2B;QAAC,6EAAe;QAAA,4DAAI;QAAA,4DAAK;QACpE,sEAA0C;QAC1C,uEAAI;QACA,0EAAsE;QAAnE,oIAAS,YAAQ,IAAC;QACjB,qEAA+B;QAAC,qEACpC;QAAA,4DAAI;QACR,4DAAK;QACT,4DAAK;QACT,4DAAM;QACV,4DAAK;QACT,4DAAK;QACT,4DAAM;QACV,4DAAM;QACV,4DAAS;;QAtCoB,4DAAyB;QAAzB,mJAAyB;QAQM,0DAAyB;QAAzB,mJAAyB;QAEzC,0DAAmB;QAAnB,6FAAmB;QAGnB,0DACA;QADA,uKACA;QACO,0DAEX;QAFW,qHAEX;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClKjC,MAAM,cAAc;IAIzB,YAAqB,eAAgC,EACjC,WAA2B;QAD1B,oBAAe,GAAf,eAAe,CAAiB;QACjC,gBAAW,GAAX,WAAW,CAAgB;IAAI,CAAC;IAEpD,QAAQ;QACH,kBAAkB,EAAE,CAAC;QACrB,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC,wDAAuD;IAE5F,CAAC;;4EAXY,cAAc;8FAAd,cAAc;QCnB3B,yEAAuB;QAEnB,wEAAyB;QAEzB,yEAA2B;QAE3B,yEAA0B;QAEtB,yEAA6B;QAEzB,6EAAmC;QAKnC,2EAA+B;QAYnC,4DAAM;QAGN,4EAAuB;QACnB,mGACJ;QAAA,4DAAS;QAGb,4DAAM;QACV,4DAAM;QACN,8EAAqC;;;;;;;;;;;;;;ACrCrC;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;IACjB,QAAQ,EAAC,2BAA2B;CACrC,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;;;;;;;ACR5D,MAAM,iBAAiB;IAN9B;QASC,cAAS,GAAW,EAAE,CAAC;QACvB,cAAS,GAAW,EAAE,CAAC;KAYvB;IAVA,4FAA4F;IAC5F,IAAI,YAAY;QACf,OAAO,GAAI,IAAI,CAAC,SAAS,GAAG;IAC9B,CAAC;IACD,4FAA4F;IAC5F,IAAI,YAAY;QACd,OAAO,GAAI,IAAI,CAAC,SAAS,GAAG;IAC9B,CAAC;;kFAbY,iBAAiB;iGAAjB,iBAAiB;QCR9B,yEAAiB;QACb,yEAAoB;QAChB,yEAAkB;QACd,yEAAuB;QAEnB,wEAAuB;QAAA,uDAAmC;QAAA,4DAAK;QAG/D,yEAA8B;QAC1B,oEAEM;QACV,4DAAM;QAIN,yEAA8B;QAC1B,oEAEM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,0EAAiB;QACb,0EAAmB;QACf,0EAAkB;QACd,0EAAuB;QAInB,wFAA6E;QAA1D,iMAAkC;QAAwB,4DAAoB;QACrG,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,0EAAmB;QACf,0EAAkB;QACd,0EAAuB;QAKnB,yFAAqG;QAAlF,iMAAkC;QAAgD,4DAAoB;QAC7H,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;;QA1CiC,0DAAmC;QAAnC,6GAAmC;QAIkC,0DAA4B;QAA5B,oFAA4B;QAQ/B,0DAA4B;QAA5B,oFAA4B;QAe/D,0DAAsB;QAAtB,mFAAsB;QAWtB,0DAAsB;QAAtB,mFAAsB;;;;;;;;;;;;;;AC3C5F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuD;AAEW;AACT;;;AAGzD,MAAM,MAAM,GAAW;IAEtB,yDAAyD;IAEzD,EAAE,IAAI,EAAE,OAAO,EAAC,SAAS,EAAE,qEAAc,EAAE;IAC3C,EAAE,IAAI,EAAE,UAAU,EAAC,SAAS,EAAE,8EAAiB,EAAE;CAEjD,CAAC;AAMK,MAAM,iBAAiB;;kFAAjB,iBAAiB;gGAAjB,iBAAiB;oGAHnB,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAC9B,4DAAY;mIAEX,iBAAiB,uFAFlB,4DAAY;;;;;;;;;;;;;;;;;;;AChBqC;;AAE7D,MAAM,QAAQ,GAAG,qEAAW,CAAC,QAAQ,CAAC;AAK/B,MAAM,iBAAiB;IAG5B,gBAAgB,CAAC;IAEX,cAAc,CAClB,OAAY,EACZ,IAAuC,EACvC,EAAS;;YAIT,IAAI;gBAEF,MAAM,GAAG,GAAG,GAAI,QAAS,YAAa,IAAK,IAAK,EAAG,EAAE,CAAC;gBAEtD,MAAM,QAAQ,GAAG,IAAI,QAAQ,EAAE,kDAAgD;gBAC/E,QAAQ,CAAC,MAAM,CAAC,QAAQ,EAAE,OAAO,CAAC,8DAA4D;gBAE9F,4BAA4B;gBAC5B,MAAM,IAAI,GAAG,MAAM,KAAK,CAAE,GAAG,EAAC;oBAC5B,MAAM,EAAE,KAAK;oBACb,OAAO,EAAC;wBACN,SAAS,EAAC,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,IAAE,EAAE;qBAC5C;oBACD,IAAI,EAAE,QAAQ;iBACf,CAAC;gBAEF,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,IAAI,EAAE,CAAC,oCAAmC;gBAClE,kBAAkB;gBACjB,IAAI,IAAI,CAAC,EAAE,EAAE;oBACZ,OAAO,IAAI,CAAC,aAAa,CAAC,yBAAwB;iBAClD;qBAAM;oBACN,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;oBACtB,OAAO,KAAK,CAAC;iBACb;aAGH;YAAC,OAAO,KAAK,EAAE;gBACd,OAAO,CAAC,GAAG,CAAE,KAAK,CAAC;gBACnB,OAAO,KAAK,CAAC;aACd;QACH,CAAC;KAAA;;kFA1CU,iBAAiB;oGAAjB,iBAAiB,WAAjB,iBAAiB,mBAFhB,MAAM;;;;;;;;;;;;;ACLpB;AAAA;AAAA;AAAA;AAAA;AAA0D;AACA;;AASnD,MAAM,aAAa;IAKxB;QAEC;;;;;;;;OAQD;QACE,IAAI,CAAC,YAAY,GAAI,IAAI,CAAC,gBAAgB,EAAE,CAAC,SAAS,CACpD,OAAO,CAAC,GAAG,CACX;IACJ,CAAC;IAEF,uDAAuD;IACvD,WAAW;QAEP,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE;IACnC,CAAC;IAGF,gBAAgB;QAEd,wDAAwD;QAEvD,MAAM,SAAS,GAAG,qDAAQ,CAAE,GAAG,CAAE;aAEhC,IAAI,CAAE,2DAA2D;QAEjE,2DAAI,CAAC,EAAE,CAAC,EAAE,yBAAyB;QAEnC,0DAAG,CAAE,KAAK,GAAE,GAAG,OAAO,KAAK,GAAG,CAAC,EAAC,CAAC,CAAC,EAAE,iCAAiC;QAErE,6DAAM,CAAE,KAAK,CAAC,EAAE,EAAE,KAAK,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,EAAC,CAAC,KAAK,CAAE,CAGjD,CAAC;QAEH,OAAO,SAAS;IACnB,CAAC;IAKC,iBAAiB;QAEf,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;QAGX,MAAM,IAAI,GAAG,IAAI,+CAAU,CAAU,OAAO,CAAC,EAAE;YAG9C,MAAM,SAAS,GAAG,WAAW,CAAE,GAAE,EAAE;gBAEhC,CAAC,EAAE,CAAC;gBACH,OAAO,CAAC,IAAI,CAAG,CAAC,CAAE,CAAC,qCAAoC;gBAEvD,IAAI,CAAC,KAAK,CAAC,EAAE;oBAEZ,aAAa,CAAG,SAAS,CAAE,CAAC;oBAE5B,OAAO,CAAC,QAAQ,EAAE,oCAAkC;iBACpD;gBAED,IAAI,CAAC,KAAK,CAAC,EAAC;oBACX,OAAO,CAAC,GAAG,CAAE,iBAAiB,CAAC;oBAC/B,OAAO,CAAC,KAAK,CAAE,sBAAsB,CAAC,CAAC,CAAC,sBAAsB;iBAC9D;YAEJ,CAAC,EAAC,IAAI,CAAC;QACT,CAAC,CAAC,CAAC;QAEH,OAAO,IAAI;IAEb,CAAC;;0EAjFU,aAAa;6FAAb,aAAa;QCX1B,oEAAG;QAAA,sEAAW;QAAA,4DAAI;;;;;;;;;;;;;;;;;;ACQX,MAAM,qBAAqB;IANlC;QAQE,SAAI,GAAG,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;KAGjC;;0FALY,qBAAqB;qGAArB,qBAAqB;QCLlC,6EAAyC;QACrC,yEAAuB;QACnB,yEAAoC;QAChC,qEAAI;QAAA,8DAAG;QAAA,4DAAK;QACZ,wEAA2B;QAAA,2EAAgB;QAAA,4DAAK;QAChD,uEAAoC;QAAA,qGAA0C;QAAA,4DAAI;QAClF,uEAAsF;QAAA,wEAAY;QAAA,4DAAI;QAAC,4DAAM;QACjH,6EAAmC;QAAA,wDAAqB;QAAA,4DAAS;QACrE,4DAAM;QACV,4DAAU;;QAFiC,2DAAqB;QAArB,oGAAqB;;;;;;;;;;;;;;ACPhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+B;;;;;;;ICWP,qEAA2E;;;IAAlD,2JAA8B;;;IACvD,qEAA8D;;;IAAtC,+IAAkB;;ADH3D,MAAM,oBAAoB;IAK/B,YAAmB,kBAAqC,EACpC,iBAAmC,EACnC,cAA6B;QAF9B,uBAAkB,GAAlB,kBAAkB,CAAmB;QACpC,sBAAiB,GAAjB,iBAAiB,CAAkB;QACnC,mBAAc,GAAd,cAAc,CAAe;IAAI,CAAC;IAEtD,QAAQ;IACR,CAAC;IAED,WAAW;QACT,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,IAAI,CAAC,kBAAkB,CAAC,WAAW,EAAE,CAAC;IACxC,CAAC;IAED,uGAAuG;IACvG,aAAa,CAAC,IAAS;QAErB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,wBAAuB;QAE/C,IAAK,CAAC,IAAI,EAAC,gCAAgC;SAC3C;YACE,OAAO,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;SAC/B;QAED,MAAM,MAAM,GAAG,IAAI,UAAU,EAAE,CAAC,8BAA6B;QAC7D,MAAM,CAAC,aAAa,CAAE,IAAI,CAAE,CAAC;QAC7B,MAAM,CAAC,SAAS,GAAC,GAAE,EAAE;YACnB,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,MAAM;QACjC,CAAC;IACH,CAAC;IAED,WAAW;QACT,MAAM,EAAE,GAAG,IAAI,CAAC,kBAAkB,CAAC,EAAE,CAAC;QACtC,MAAM,IAAI,GAAG,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC;QAE1C,iFAAiF;QACjF,IAAI,CAAC,iBAAiB,CAAC,cAAc,CAAE,IAAI,CAAC,WAAW,EAAE,IAAI,EAAG,EAAE,CAAC;YAEnE,qHAAqH;YACrH,IAAI,CAAE,GAAG,CAAC,EAAE;YACT,IAAI,EAAE,KAAK,IAAI,CAAC,cAAc,CAAC,GAAG,EAAE;gBACnC,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,GAAG,GAAG,GAAG;aAErC;YACF,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;YAChB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC;YAEnC,kBAAkB;YAClB,kDAAI,CAAC,IAAI,CAAC,UAAU,EAAG,oBAAoB,EAAE,SAAS,CAAC,yBAAuB;YAC9E,6EAA6E;YAC7E,IAAI,CAAC,kBAAkB,CAAC,WAAW,CAAC,IAAI,CAAE,GAAG,CAAE,CAAC;YAEhD,IAAI,CAAC,WAAW,EAAE,CAAC;QACtB,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,GAAE;YAEb,kDAAI,CAAC,IAAI,CAAC,OAAO,EAAG,GAAG,CAAC,KAAK,CAAC,GAAG,EAAE,OAAO,CAAC,yBAAuB;QAEnE,CAAC,CAAC;IAEL,CAAC;;wFA9DU,oBAAoB;oGAApB,oBAAoB;QCZjC,yEAAmG;QAE/F,yEAAsI;QAElI,yEAA0B;QACtB,yEAA2B;QACvB,yEAA0B;QACtB,wEAAwB;QAAA,wEAAa;QAAA,4DAAK;QAC1C,4EAAoG;QAA9E,4IAAS,iBAAa,IAAC;QAAuD,iEAAC;QAAA,4DAAS;QAClH,4DAAM;QACN,yEAAwB;QACpB,sEAAI;QAAA,iFAAqB;QAAA,4DAAK;QAE9B,0EAAyB;QACrB,kHAA2E;QAC3E,kHAA8D;QAElE,4DAAM;QACN,iEAAI;QAIJ,6EAAoE;QAAjD,oJAAU,sCAAkC,CAAC,EAAE,IAAC;QAAnE,4DAAoE;QACxE,4DAAM;QACN,2EAA0B;QACtB,8EAAwG;QAAlF,6IAAS,iBAAa,IAAC;QAA2D,oEAAQ;QAAA,4DAAS;QACzH,8EAA8F;QAAxE,6IAAS,iBAAa,IAAC;QAAiD,2EAAe;QAAA,4DAAS;QAC1H,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;;QA/B4C,wGAAgD;QAcpE,2DAAiB;QAAjB,iFAAiB;QACjB,0DAAgB;QAAhB,gFAAgB;;;;;;;;;;;;;;ACd9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6D;AAExB;;;AAGrC,MAAM,QAAQ,GAAG,qEAAW,CAAC,QAAQ;AAK9B,MAAM,cAAc;IAkBzB,YAAqB,IAAe;QAAf,SAAI,GAAJ,IAAI,CAAW;IAAI,CAAC;IAfvC,uBAAuB;IAC3B,IAAI,KAAK;QACP,OAAO,YAAY,CAAC,OAAO,CAAE,OAAO,CAAC,IAAI,EAAE,CAAC;IAC9C,CAAC;IAGC,iCAAiC;IACnC,IAAI,OAAO;QACT,OAAO;YACL,OAAO,EAAE;gBACP,SAAS,EAAC,IAAI,CAAC,KAAK,CAAC,8CAA8C;aACnE;SACF;IACJ,CAAC;IAIC,aAAa;QAEX,MAAM,GAAG,GAAG,GAAI,QAAQ,UAAU,wCAAsC;QAExE,yCAAyC;QACzC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAE,GAAG,EAAE,IAAI,CAAC,OAAO,CAAC;aACvC,IAAI;QACH,2FAA2F;QAC3F,0DAAG,CAAC,CAAC,IAAsC,EAAE,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,CAC9D;IACC,CAAC;IAEN,iBAAiB,CAAE,EAAE;QAEpB,MAAM,GAAG,GAAG,GAAI,QAAS,YAAa,EAAG,EAAE,CAAC,uCAAsC;QAEjF,mDAAmD;QACnD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAE,GAAG,EAAG,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI;QAC7C,2FAA2F;QAC3F,0DAAG,CAAC,CAAC,IAAmC,EAAE,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,CAC1D;IAEF,CAAC;IAED,WAAW,CAAE,MAA0C;QAEhD,MAAM,GAAG,GAAG,GAAI,QAAS,UAAU,CAAC,uCAAsC;QAE1E,mDAAmD;QACnD,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAE,GAAG,EAAI,MAAM,EAAG,IAAI,CAAC,OAAO,CAAC;IAGtD,CAAC;IAGP,gBAAgB,CAAE,MAAc;QAExB,MAAM,GAAG,GAAG,GAAI,QAAS,YAAa,MAAM,CAAC,GAAI,EAAE,CAAC,uCAAsC;QAE1F,mDAAmD;QACnD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAE,GAAG,EAAI,MAAM,EAAG,IAAI,CAAC,OAAO,CAAC;IAGrD,CAAC;IAEP,cAAc,CAAE,GAAU;QAElB,MAAM,GAAG,GAAG,GAAI,QAAS,YAAY,GAAG,EAAE,CAAC,uCAAsC;QAEjF,0CAA0C;QAC1C,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAE,GAAG,EAAG,IAAI,CAAC,OAAO,CAAC;IAG9C,CAAC;;4EAzEM,cAAc;iGAAd,cAAc,WAAd,cAAc,mBAFb,MAAM;;;;;;;;;;;;;;;;;;;ACAb,MAAM,uBAAuB;IAUlC,YAAqB,cAA8B;QAA9B,mBAAc,GAAd,cAAc,CAAgB;QARnD,6CAA6C;QAEtC,cAAS,GAAG,QAAQ,CAAC,aAAa,CAAE,QAAQ,CAAE,CAAC;IAOrD,CAAC;IAEF,QAAQ;QAEN,IAAI,CAAC,cAAc,CAAC,iBAAiB,EAAE;IACzC,CAAC;IAGD,WAAW,CAAE,KAAY;QAEvB,IAAI,CAAC,cAAc,CAAC,WAAW,CAAE,KAAK,CAAC;IAGzC,CAAC;;8FAxBU,uBAAuB;uGAAvB,uBAAuB;QCTpC,yEAAiB;QACb,yEAAmB;QACf,yEAAkB;QACd,yEAAuB;QAEnB,qEAAI;QAAA,4EAAiB;QAAA,4DAAK;QAC1B,yEAA0B;QACtB,wEAAoC;QAChC,qEAAI;QAAA,oEAAG;QAAA,gFAAoB;QAAA,4DAAI;QAAA,4DAAK;QACpC,sEAAI;QAAA,wEAAgG;QAA7F,2IAAS,gBAAY,SAAS,CAAC,IAAC;QAA6D,6DAAC;QAAA,4DAAI;QAAA,4DAAK;QAC9G,sEAAI;QAAA,wEAAkF;QAA/E,2IAAS,gBAAY,OAAO,CAAC,IAAC;QAAiD,6DAAC;QAAA,4DAAI;QAAA,4DAAK;QAChG,sEAAI;QAAA,wEAA4E;QAAzE,2IAAS,gBAAY,KAAK,CAAC,IAAC;QAA6C,6DAAC;QAAA,4DAAI;QAAA,4DAAK;QAC1F,sEAAI;QAAA,wEAA+E;QAA5E,2IAAS,gBAAY,MAAM,CAAC,IAAC;QAA+C,6DAAC;QAAA,4DAAI;QAAA,4DAAK;QAC7F,sEAAI;QAAA,yEAAqF;QAAlF,2IAAS,gBAAY,QAAQ,CAAC,IAAC;QAAmD,6DAAC;QAAA,4DAAI;QAAA,4DAAK;QACnG,sEAAI;QAAA,yEAAkF;QAA/E,2IAAS,gBAAY,OAAO,CAAC,IAAC;QAAiD,6DAAC;QAAA,4DAAI;QAAA,4DAAK;QAEhG,0EAA2B;QAAA,qEAAG;QAAA,iFAAqB;QAAA,4DAAI;QAAA,4DAAK;QAC5D,sEAAI;QAAA,yEAAuG;QAApG,2IAAS,gBAAY,cAAc,CAAC,IAAC;QAA+D,6DAAC;QAAA,4DAAI;QAAA,4DAAK;QACrH,sEAAI;QAAA,yEAAiG;QAA9F,2IAAS,gBAAY,YAAY,CAAC,IAAC;QAA2D,6DAAC;QAAA,4DAAI;QAAA,4DAAK;QAC/G,sEAAI;QAAA,yEAA2F;QAAxF,2IAAS,gBAAY,UAAU,CAAC,IAAC;QAAuD,6DAAC;QAAA,4DAAI;QAAA,4DAAK;QACzG,sEAAI;QAAA,yEAA8F;QAA3F,2IAAS,gBAAY,WAAW,CAAC,IAAC;QAAyD,6DAAC;QAAA,4DAAI;QAAA,4DAAK;QAC5G,sEAAI;QAAA,yEAAoG;QAAjG,2IAAS,gBAAY,aAAa,CAAC,IAAC;QAA6D,6DAAC;QAAA,4DAAI;QAAA,4DAAK;QAClH,sEAAI;QAAA,yEAAiG;QAA9F,2IAAS,gBAAY,YAAY,CAAC,IAAC;QAA2D,6DAAC;QAAA,4DAAI;QAAA,4DAAK;QACnH,4DAAK;QAET,4DAAM;QAEV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;;;;;;;;;;;;;;AC7BN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AACZ;AACH;AAEb;AACF;;AAuBtC,MAAM,YAAY;;wEAAZ,YAAY;2FAAZ,YAAY;+FAZd;YACP,4DAAY;YACZ,4DAAY;YACZ,0DAAW;SACZ;mIAQU,YAAY,mBAjBrB,uFAAoB;QACpB,2EAAgB;QAChB,wEAAe,aAIf,4DAAY;QACZ,4DAAY;QACZ,0DAAW,aAGX,uFAAoB;QACpB,2EAAgB;QAChB,wEAAe;;;;;;;;;;;;;ACzBnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoE;AAIrC;;;;;;;ICgCX,qEAAsE;;;IAA7C,sJAAyB;;;IAClD,qEAA8D;;;IAAtC,+IAAkB;;ADzBvD,MAAM,eAAe;IAO1B,YAAqB,EAAe,EAC1B,cAA8B,EAC9B,iBAAoC;QAFzB,OAAE,GAAF,EAAE,CAAa;QAC1B,mBAAc,GAAd,cAAc,CAAgB;QAC9B,sBAAiB,GAAjB,iBAAiB,CAAmB;QAG1C,IAAI,CAAC,OAAO,GAAG,cAAc,CAAC,OAAO,CAAC;IAEvC,CAAC;IAEJ,QAAQ;QAEN,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC5B,MAAM,EAAC,CAAE,IAAI,CAAC,OAAO,CAAC,MAAM,EAAG,yDAAU,CAAC,QAAQ,CAAC;YACnD,KAAK,EAAC,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,EAAG,CAAE,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,KAAK,CAAE,CAAC;SACzE,CAAC;IACJ,CAAC;IAED,gBAAgB;QAEd,yDAAyD;QACzD,IAAI,CAAC,cAAc,CAAC,gBAAgB,CAAE,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,IAAI,GAAE;YAE3E,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,0CAA0C;YAE3F,oGAAoG;YACnG,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,MAAM,CAAC;YAC7B,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,KAAK,CAAC;YAE5B,kBAAkB;YACjB,kDAAI,CAAC,IAAI,CAAC,UAAU,EAAG,mBAAmB,EAAE,SAAS,CAAC,yBAAuB;QAEhF,CAAC,EAAC,CAAC,GAAG,EAAC,EAAE;YAEP,kDAAI,CAAC,IAAI,CAAC,OAAO,EAAG,GAAG,CAAC,KAAK,CAAC,GAAG,EAAE,OAAO,CAAC,yBAAuB;QAEpE,CAAC,CAAC;IAEJ,CAAC;IAGD,uGAAuG;IACvG,aAAa,CAAC,IAAS;QAErB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,wBAAuB;QAE/C,IAAK,CAAC,IAAI,EAAC,gCAAgC;SAC3C;YACE,OAAO,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;SAC/B;QAED,MAAM,MAAM,GAAG,IAAI,UAAU,EAAE,CAAC,8BAA6B;QAC7D,MAAM,CAAC,aAAa,CAAE,IAAI,CAAE,CAAC;QAC7B,MAAM,CAAC,SAAS,GAAC,GAAE,EAAE;YACnB,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,MAAM;QACjC,CAAC;IACH,CAAC;IAED,WAAW;QACT,iFAAiF;QACjF,IAAI,CAAC,iBAAiB,CAAC,cAAc,CAAC,IAAI,CAAC,WAAW,EAAC,UAAU,EAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC;YACnF,IAAI,CAAE,GAAG,CAAC,EAAE;YACV,IAAI,CAAC,OAAO,CAAC,GAAG,GAAG,GAAG;YACpB,kBAAkB;YAClB,kDAAI,CAAC,IAAI,CAAC,UAAU,EAAG,oBAAoB,EAAE,SAAS,CAAC,yBAAuB;QACjF,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,GAAE;YAEb,kDAAI,CAAC,IAAI,CAAC,OAAO,EAAG,GAAG,CAAC,KAAK,CAAC,GAAG,EAAE,OAAO,CAAC,yBAAuB;QAEnE,CAAC,CAAC;IAEL,CAAC;;8EA7EU,eAAe;+FAAf,eAAe;QCb5B,yEAAiB;QACb,yEAAsB;QAClB,yEAAkB;QACd,yEAAuB;QACnB,wEAAuB;QAAA,+EAAoB;QAAA,4DAAK;QAChD,wEAA0B;QAAA,kEAAO;QAAA,4DAAK;QACtC,0EAAmF;QAAhC,2IAAY,sBAAkB,IAAC;QAC9E,yEAAwB;QACpB,4EAA+B;QAAA,qEAAS;QAAA,4DAAQ;QAChD,0EAAyB;QACrB,2EAA+B;QAAA,oEAAuB;QAAA,4DAAM;QAC5D,wEAAyH;QAC7H,4DAAM;QACV,4DAAM;QACN,0EAAwB;QACpB,6EAAgC;QAAA,yEAAa;QAAA,4DAAQ;QACrD,0EAAyB;QACrB,2EAA+B;QAAA,oEAAwB;QAAA,4DAAM;QAE7D,wEAAyI;QAC7I,4DAAM;QACV,4DAAM;QAEN,8EAAwH;QACxH,oEAA0B;QAC1B,6EACF;QAAA,4DAAS;QACX,4DAAO;QACX,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,0EAAsB;QAClB,0EAAkB;QACd,0EAAuB;QACnB,yEAAuB;QAAA,kEAAM;QAAA,4DAAK;QAClC,yEAA0B;QAAA,8EAAkB;QAAA,4DAAK;QACjD,2EAAyB;QACrB,8GAAsE;QACtE,8GAA8D;QAElE,4DAAM;QACN,iEAAI;QAIJ,6EAAoE;QAAjD,+IAAU,sCAAkC,CAAC,EAAE,IAAC;QAAnE,4DAAoE;QAEpE,iEAAI;QAAA,iEAAI;QAER,8EAA0I;QAA1F,wIAAS,iBAAa,IAAC;QACrE,oEAA0B;QAC1B,4EACF;QAAA,4DAAS;QAEb,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;;QAnDoC,0DAAwB;QAAxB,qFAAwB;QAauE,2DAA2B;QAA3B,wFAA2B;QAI1H,0DAA+B;QAA/B,4FAA+B;QAc/C,2DAAiB;QAAjB,iFAAiB;QACjB,0DAAgB;QAAhB,gFAAgB;QAWJ,0DAAyB;QAAzB,sFAAyB;;;;;;;;;;;;;ACjjSA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6D;AACxB;AACa;;;AAIlD,MAAM,QAAQ,GAAG,qEAAW,CAAC,QAAQ,CAAC;AAK/B,MAAM,gBAAgB;IAE3B,YAAqB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAI,CAAC;IAE1C,IAAI,KAAK;QACP,OAAO,YAAY,CAAC,OAAO,CAAE,OAAO,CAAC,IAAI,EAAE,CAAC;IAC9C,CAAC;IACD,iCAAiC;IACnC,IAAI,OAAO;QACT,OAAO;YACL,OAAO,EAAE;gBACP,SAAS,EAAC,IAAI,CAAC,KAAK,CAAC,8CAA8C;aACnE;SACF;IACJ,CAAC;IAEO,mBAAmB,CAAE,UAAiB;QAE5C,OAAO,UAAU,CAAC,GAAG,CAEnB,IAAI,GAAE,CAAC,IAAI,6DAAO,CAAE,IAAI,CAAC,MAAM,EAAC,IAAI,CAAC,KAAK,EAAC,EAAE,EAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,IAAI,EAAC,IAAI,CAAC,MAAM,CAAC,CAC7E,CAAC;IAEN,CAAC;IACO,qBAAqB,CAAE,UAAiB;QAE9C,OAAO,UAAU;IAEnB,CAAC;IAEO,kBAAkB,CAAE,UAAiB;QAE3C,OAAO,UAAU;IAEnB,CAAC;IAED,eAAe,CAAE,OAAc;QAC7B,MAAM,GAAG,GAAG,GAAI,QAAS,SAAU,OAAQ,EAAE,wCAAsC;QAEjF,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAE,GAAG,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;IAE7C,CAAC;IAED,wDAAwD;IACxD,MAAM,CAAE,IAA0C,EAAE,OAAe;QAEjE,MAAM,GAAG,GAAG,GAAI,QAAS,mBAAoB,IAAK,IAAK,OAAQ,EAAE,wCAAsC;QAEvG,yCAAyC;QACzC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAS,GAAG,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,CAClD,0DAAG,CAAC,CAAC,IAAS,EAAG,EAAE;YAEjB,QAAQ,IAAI,EAAE;gBACZ,KAAK,UAAU;oBACb,OAAO,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,SAAS,CAAC,iDAA+C;oBAC9F,MAAM;gBACN,KAAK,YAAY;oBACf,OAAO,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,SAAS,CAAC,iDAA+C;oBAChG,MAAM;gBACN,KAAK,SAAS;oBACZ,OAAO,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,SAAS,CAAC,iDAA+C;oBAC7F,MAAM;gBAEZ;oBACE,MAAM;aACT;QACH,CAAC,CAAC,CACH;IACH,CAAC;;gFApEY,gBAAgB;mGAAhB,gBAAgB,WAAhB,gBAAgB,mBAFf,MAAM;;;;;;;;;;;;;;;;;;;ACJb,MAAM,YAAY;IALzB;QAME,UAAK,GAAG,UAAU,CAAC;KACpB;;wEAFY,YAAY;4FAAZ,YAAY;QCPzB,2EAA+B;;;;;;;;;;;;;;;;;;ACQxB,MAAM,kBAAkB;IAE7B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;oFALU,kBAAkB;kGAAlB,kBAAkB;QCR/B,oEAAG;QAAA,2EAAgB;QAAA,4DAAI;;;;;;;;;;;;;;ACIvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+B;AAEQ;;;;;;;;;ICIvC,yEAAuD;IACnD,yEAAoB;IAChB,yEAAuD;IACnD,wEAA0B;IAAA,mEAAQ;IAAA,4DAAK;IACvC,kEAA2C;IAC3C,wEAAgB;IAAA,2EAAgB;IAAA,4DAAI;IACxC,4DAAM;IACV,4DAAM;IACV,4DAAM;;;IAuC8B,2EAAwD;IAAA,iEAAM;IAAA,4DAAO;;;IACrE,2EAAuD;IAAA,gEAAK;IAAA,4DAAO;;;;IAf3E,qEAAqC;IACjC,yEAAwB;IACpB,0EAAmG;IAApD,sWAA6B;;IAA5E,4DAAmG;IACvG,4DAAK;IACL,qEAAI;IAAA,uDAAiB;IAAA,4DAAK;IAC1B,qEAAI;IAAA,uDAAkB;IAAA,4DAAK;IAC3B,qEAAI;IACA,6EAA6F;IAA3D,yOAA0B;IAC5D,8EAA2B;IAAA,iEAAK;IAAA,4DAAS;IACzC,8EAA0B;IAAA,gEAAI;IAAA,4DAAS;IAEzC,4DAAS;IACX,4DAAK;IACL,sEAAI;IACA,8HAAqE;IACrE,8HAAmE;IAEvE,4DAAK;IAEL,0EAAwB;IACpB,oEAEI;IACJ,yEAAwG;IAAhE,4WAAkC;IACtE,oEAAmD;IAAC,4DAAI;IAChE,4DAAK;IACT,4DAAK;;;IAxBQ,0DAAyC;IAAzC,yNAAyC;IAE9C,0DAAiB;IAAjB,iFAAiB;IACjB,0DAAkB;IAAlB,kFAAkB;IAEgB,0DAA0B;IAA1B,oFAA0B;IAOrD,0DAAoB;IAApB,mFAAoB;IACpB,0DAAqB;IAArB,oFAAqB;;;;IAehD,sEAA2C;IACvC,6EAA8D;IAAtD,gUAAwB,CAAC,KAAE;IAA2B,qEAAU;IAAA,4DAAS;IAAC,mEAClF;IAAA,6EAA6D;IAArD,+TAAuB,CAAC,KAAE;IAA2B,oEAAS;IAAA,4DAAS;IACnF,4DAAM;;;IAzDtB,yEAAwD;IACpD,yEAAoB;IAChB,yEAAkB;IACd,yEAAuB;IACnB,yEAAuB;IAAA,6EACnB;IACJ,4DAAK;IAIL,yEAA0B;IAAA,gGAAqC;IAAA,4DAAK;IACpE,0EAA8B;IAC1B,4EAAoC;IAChC,yEAAO;IACH,sEAAI;IACA,qEAAsB;IACtB,sEAAI;IAAA,kEAAM;IAAA,4DAAK;IACf,sEAAI;IAAA,kEAAM;IAAA,4DAAK;IACf,sEAAI;IAAA,gEAAI;IAAA,4DAAK;IACb,sEAAI;IAAA,gEAAI;IAAA,4DAAK;IACb,0EAAwB;IAAA,kEAAM;IAAA,4DAAK;IACvC,4DAAK;IACT,4DAAQ;IACR,yEAAO;IACH,qHA0BK;IACT,4DAAQ;IACZ,4DAAQ;IACZ,4DAAM;IACN,sHAGM;IAEV,4DAAM;IACV,4DAAM;IACV,4DAAM;IACV,4DAAM;;;;IAtC8C,2DAAW;IAAX,oFAAW;IA8BzC,0DAAmC;IAAnC,wFAAmC;;AD1DlD,MAAM,iBAAiB;IAW5B,YAAoB,eAA8B,EACzC,eAAgC,EAChC,kBAAsC;QAF3B,oBAAe,GAAf,eAAe,CAAe;QACzC,oBAAe,GAAf,eAAe,CAAiB;QAChC,uBAAkB,GAAlB,kBAAkB,CAAoB;QAXxC,kBAAa,GAAU,CAAC,CAAC;QACzB,aAAQ,GAAc,EAAE,CAAC;QACzB,iBAAY,GAAc,EAAE,CAAC;QAE7B,UAAK,GAAU,CAAC,CAAC,qBAAoB;QACrC,aAAQ,GAAY,IAAI,CAAC;IAO3B,CAAC;IAGN,WAAW;QACT,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC;IAE/B,CAAC;IAGC,QAAQ;QACN,IAAI,CAAC,cAAc,EAAE,CAAC;QAEtB,2DAA2D;QAC3D,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,GAAI,IAAI,CAAC,kBAAkB,CAAC,WAAW;YAClE,IAAI,CACF,4DAAK,CAAC,GAAG,CAAC,+CAA8C;SACzD;aACA,SAAS,CAAC,GAAG,GAAE,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC;IACzC,CAAC;IAED,aAAa,CAAE,KAAY;QAExB,IAAI,CAAC,KAAK,IAAI,KAAK,CAAC;QAEpB,IAAK,IAAI,CAAC,KAAK,GAAG,CAAC,EAAC;YACf,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;SAEnB;aAAK,IAAI,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,aAAa,EAAE;YACtC,IAAI,CAAC,KAAK,IAAI,KAAK;SACxB;QAED,IAAI,CAAC,cAAc,EAAE,CAAC;IACzB,CAAC;IAED,cAAc;QACZ,2BAA2B;QACtB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACvB,+BAA+B;QAC/B,IAAI,CAAC,eAAe,CAAC,cAAc,CAAE,IAAI,CAAC,KAAK,CAAE,CAAC,SAAS,CAC1D,CAAC,EAAC,KAAK,EAAC,QAAQ,EAAC,EAAC,EAAE;YACnB,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;YAC3B,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;YACzB,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC;YAE7B,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QAExB,CAAC,CAAC;IACP,CAAC;IAED,MAAM,CAAG,OAAe;QACtB,IAAI,OAAO,CAAC,MAAM,KAAK,CAAC,EAAC;YACvB,OAAO,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY;SAEzC;QACD,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,UAAU,EAAE,OAAO,CAAE,CAAC,SAAS,CAC3D,CAAC,IAAgB,EAAC,EAAE,CAChB,IAAI,CAAC,QAAQ,GAAG,IAAI,CACrB;IAIL,CAAC;IAED,eAAe,CAAE,OAAe;QAC9B,mCAAmC;QACnC,IAAK,OAAO,CAAC,GAAG,KAAK,IAAI,CAAC,eAAe,CAAC,GAAG,EAAG;YAC9C,OAAO,kDAAI,CAAC,IAAI,CAAE,OAAO,EAAC,+BAA+B,EAAC,OAAO,CAAC;SACnE;QAEL,8DAA8D;QAC1D,kDAAI,CAAC,IAAI,CAAC;YACR,KAAK,EAAE,kBAAkB;YACzB,IAAI,EAAE,8BAA+B,OAAO,CAAC,MAAM,EAAE;YACrD,IAAI,EAAE,UAAU;YAChB,gBAAgB,EAAE,IAAI;YACtB,kBAAkB,EAAE,SAAS;YAC7B,iBAAiB,EAAE,MAAM;YACzB,iBAAiB,EAAE,YAAY;SAChC,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;YACjB,IAAI,MAAM,CAAC,WAAW,EAAE;gBACtB,IAAI,CAAC,eAAe,CAAC,eAAe,CAAE,OAAO,CAAE,CAAC,SAAS,CAAC,IAAI,GAAE;oBAC9D,IAAI,CAAC,cAAc,EAAE,CAAC,4DAA2D;oBACjF,kDAAI,CAAC,IAAI,CACP,UAAU,EACV,GAAI,OAAO,CAAC,MAAO,8BAA8B,EACjD,SAAS,CACV;gBACH,CAAC,CAAC,CAAC;aACJ;QACH,CAAC,CAAC;IAAE,CAAC;IAEP,WAAW,CAAC,OAAe;QACtB,IAAI,CAAC,eAAe,CAAC,cAAc,CAAE,OAAO,CAAE,CAAC,SAAS,CAAC,IAAI,GAAE;QAE/D,CAAC,CAAC;IACL,CAAC;IAEL,uEAAuE;IACrE,UAAU,CAAC,OAAe;QAExB,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,UAAU,EAAC,OAAO,CAAC,GAAG,EAAC,OAAO,CAAC,GAAG,CAAC,CAAC;IAEvE,CAAC;;kFApHQ,iBAAiB;iGAAjB,iBAAiB;;QCf9B,yEAAsC;QAClC,yEAAoB;QAChB,yEAAkB;QACd,yEAAuB;QACnB,8EAAsH;QAAjD,qRAAS,qBAA0B,IAAC;QAAzG,4DAAsH;QAE1H,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,6GAQM;QACN,8GA8DM;;QAvEiC,0DAAc;QAAd,8EAAc;QASd,0DAAe;QAAf,+EAAe;;;;;;;;;;;;;;ACftD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAqC;;;;AAK9B,MAAM,SAAS;IAGpB,YAAoB,cAA8B,EACxC,MAAc;QADJ,mBAAc,GAAd,cAAc,CAAgB;QACxC,WAAM,GAAN,MAAM,CAAQ;IAExB,CAAC;IAGD,OAAO,CAAC,KAAY,EAAE,QAAsB;QAC1C,OAAO,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC,IAAI,CAC5C,0DAAG,CAAE,eAAe,CAAC,EAAE;YACrB,IAAI,CAAC,eAAe,EAAE;gBACpB,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;aACrC;QACH,CAAC,CAAC,CACF,CAAC;IAAE,CAAC;IAGR,yBAAyB;IACzB,WAAW,CACT,KAA6B,EAC7B,KAA0B;QAEvB,OAAO,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC,IAAI,CAC7C,0DAAG,CAAE,eAAe,CAAC,EAAE;YACrB,IAAI,CAAC,eAAe,EAAE;gBACpB,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;aACrC;QACH,CAAC,CAAC,CACF,CAAC;IACP,CAAC;;kEA/BU,SAAS;4FAAT,SAAS,WAAT,SAAS,mBAFR,MAAM;;;;;;;;;;;;;;;;;;;ACIb,MAAM,iBAAiB;IAP9B;QASS,YAAO,GAAa,CAAC,gBAAgB,EAAE,gBAAgB,EAAE,kBAAkB,CAAC,CAAC;QAC7E,YAAO,GAAa,CAAC,SAAS,EAAE,gBAAgB,EAAE,kBAAkB,CAAC,CAAC;QAEtE,UAAK,GAAI;YACd,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;SAEhB,CAAC;QACK,UAAK,GAAI;YACd,CAAC,GAAG,EAAE,EAAE,EAAE,GAAG,CAAC;SAEf,CAAC;KACH;;kFAbY,iBAAiB;iGAAjB,iBAAiB;QCX9B,yEAAiB;QACb,yEAAmB;QACf,yEAAwC;QAC5C,4DAAM;QACN,yEAAmB;QACf,yEACW;QACf,4DAAM;QACV,4DAAM;QACN,yEAAiB;QACb,yEAAmB;QACf,yEAAuD;QAE3D,4DAAM;QACN,yEAAmB;QACf,yEAAoC;QAExC,4DAAM;QACV,4DAAM;;QAhBY,0DAAkB;QAAlB,2EAAkB;QAGlB,0DAAkB;QAAlB,+EAAkB;QAMlB,0DAAc;QAAd,2EAAc;QAId,0DAAc;QAAd,2EAAc;;;;;;;;;;;;;;ACfhC;AAAA;AAAA;AAAA;AAAyD;AACI;;AAG7D,MAAM,QAAQ,GAAG,qEAAW,CAAC,QAAQ,CAAC;AAK/B,MAAM,kBAAkB;IAmC7B;QAjCQ,kBAAa,GAAY,IAAI,CAAC;QAK/B,gBAAW,GAA2B,IAAI,0DAAY,EAAU,CAAC,6DAA4D;IA4BpH,CAAC;IA1BjB,IAAI,YAAY;QACd,OAAO,IAAI,CAAC,aAAa,CAAC;IAC5B,CAAC;IAEA,UAAU,CACT,IAAyC,EACzC,EAAU,EACV,MAAc,QAAQ;QAGrB,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QAC3B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QACd,kBAAkB;QAEjB,IAAI,GAAG,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE;YACvB,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;SAClB;aAAM;YACH,IAAI,CAAC,GAAG,GAAG,GAAI,QAAS,YAAa,IAAK,IAAK,GAAI,EAAE;SACxD;IACJ,CAAC;IACA,WAAW;QACT,IAAI,CAAC,aAAa,GAAG,IAAI;IAC5B,CAAC;;oFAhCU,kBAAkB;qGAAlB,kBAAkB,WAAlB,kBAAkB,mBAFjB,MAAM;;;;;;;;;;;;;ACJpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoE;AAGrC;AAIQ;;;;;;;;;;;ICGnB,yEAAuD;IACnD,2EAA+B;IAAA,+DAAI;IAAA,4DAAQ;IAE3C,0EAA0B;IACtB,0EAAoH;IAA3F,0UAAwC;;IAAjE,4DAAoH;IACxH,4DAAM;IACV,4DAAM;;;IAFoE,0DAAiD;IAAjD,uOAAiD;;;IAoBjH,6EACuB;IAAA,uDAAmB;IAAA,4DAAS;;;IAAnD,kFAAsB;IAAC,0DAAmB;IAAnB,mFAAmB;;;IAoBpE,0EAAwE;IACpE,yEAAkB;IACd,yEAAuB;IACnB,wEAAuB;IAAA,mEAAQ;IAAA,4DAAK;IACpC,wEAA0B;IAAA,uDAA+B;IAAA,4DAAK;IAE9D,qEAAkF;;IAEtF,4DAAM;IACV,4DAAM;IACV,4DAAM;;;IANgC,0DAA+B;IAA/B,mGAA+B;IAE9B,0DAAsD;IAAtD,4OAAsD;;AD9C1F,MAAM,eAAe;IAO1B,YAAqB,EAAe,EAC1B,eAAsC,EACtC,aAA6B,EAC7B,MAAc,EACd,aAA6B,EAC7B,kBAAqC;QAL1B,OAAE,GAAF,EAAE,CAAa;QAC1B,oBAAe,GAAf,eAAe,CAAuB;QACtC,kBAAa,GAAb,aAAa,CAAgB;QAC7B,WAAM,GAAN,MAAM,CAAQ;QACd,kBAAa,GAAb,aAAa,CAAgB;QAC7B,uBAAkB,GAAlB,kBAAkB,CAAmB;QATxC,eAAU,GAAiB,EAAE,CAAC,6DAA4D;IAS9C,CAAC;IAGnD,WAAW;QACR,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE;IACf,CAAC;IAIhB,QAAQ;QACN,yCAAyC;QACvC,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,SAAS,CAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE;YAE5C,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC;YAEzB,+EAA+E;YAC5E,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,kBAAkB,CAAC,WAAW;gBACxD,IAAI,CACF,4DAAK,CAAC,GAAG,CAAC,+CAA8C;aACzD;iBACA,SAAS,CAAC,GAAG,GAAE,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC;QAEpD,CAAC,CAAC;QAEL,4CAA4C;QAC3C,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC9B,MAAM,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAE;YAClC,QAAQ,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAE;SACrC,CAAC,CAAC;QACH,6BAA6B;QAC7B,IAAI,CAAC,gBAAgB,EAAE,CAAC;QAExB,iDAAiD;QACjD;;;;;UAKE;QACF,IAAI,CAAC,UAAU,CAAC,GAAG,CAAE,UAAU,CAAE,CAAC,YAAY,CAAC,SAAS,CAAE,WAAW,CAAC,EAAE;YAErE,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,KAAK,WAAW,CAAC,CAAC;YAC9E,yCAAyC;QAE5C,CAAC,CAAC;QAGF,0EAA0E;IAE5E,CAAC;IAED,sFAAsF;IACtF,YAAY,CAAE,EAAU;QAEtB,kGAAkG;QAClG,IAAI,EAAE,KAAG,OAAO,EAAC;YACf,OAAM;SACP;QAED,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAE,EAAE,CAAE;YAC1C,+FAA+F;YAC5F,IAAI,CACF,4DAAK,CAAC,GAAG,CAAC,CACd,CAAC,SAAS,CAAE,MAAM,GAAE;YAEnB,qEAAqE;YACrE,IAAG,CAAC,MAAM,EAAC;gBACT,OAAO,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,mBAAmB,CAAC;aAEtD;YACA,4EAA4E;YAC7E,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAC,EAAE,GAAG,EAAC,EAAE,GAAG,MAAM,CAAC;YAE3C,2BAA2B;YAE1B,IAAI,CAAC,kBAAkB,GAAG,MAAM,CAAC;YAEjC;;eAEG;YACH,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,EAAE,MAAM,EAAE,QAAQ,EAAE,GAAG,EAAC,CAAC;QACrD,CAAC,CAAC;IAEJ,CAAC;IAED,oCAAoC;IACpC,gBAAgB;QACd,IAAI,CAAC,eAAe,CAAC,gBAAgB,EAAE,CAAC,SAAS,CAAE,CAAC,UAAuB,EAAE,EAAE;YAC9E,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC9B,CAAC,CAAC;IACJ,CAAC;IAGD,UAAU,CAAC,MAAa;QAEtB,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,SAAS,EAAE,MAAM,CAAC,GAAG,EAAE,MAAM,CAAC,GAAG,CAAC;IAEvE,CAAC;IAED,aAAa;QAEX,MAAM,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC;QAEzC,IAAK,IAAI,CAAC,kBAAkB,EAAG;YAC7B,qDAAqD;YAErD,gEAAgE;YAChE,MAAM,IAAI,mCACL,IAAI,CAAC,UAAU,CAAC,KAAK,KACxB,GAAG,EAAE,IAAI,CAAC,kBAAkB,CAAC,GAAG,GAEjC;YACD,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAE,IAAI,CAAE,CAAC,SAAS,CAAC,IAAI,GAAE;gBAC1D,kDAAI,CAAC,IAAI,CAAC,eAAe,EAAE,GAAI,MAAO,4BAA4B,EAAE,SAAS,CAAC,CAAC;YAEjF,CAAC,CAAC;SAEH;aAAM;YACL,qDAAqD;YAErD,IAAI,CAAC,aAAa,CAAC,WAAW,CAAE,IAAI,CAAC,UAAU,CAAC,KAAK,CAAE,CAAC,SAAS,CAAE,CAAC,IAAS,EAAC,EAAE;gBAC7E,kDAAI,CAAC,IAAI,CAAC,UAAU,EAAE,GAAI,MAAO,uBAAuB,EAAE,SAAS,CAAC,CAAC;gBACrE,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,oBAAoB,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC;YAClE,CAAC,CAAC;SACJ;IAGH,CAAC;;8EA3IU,eAAe;+FAAf,eAAe;QClB5B,yEAAiB;QACb,yEAAsB;QAClB,yEAAkB;QACd,yEAAuB;QACnB,wEAAuB;QAAA,iEAAM;QAAA,4DAAK;QAClC,wEAA0B;QAAA,iFAAsB;QAAA,4DAAK;QAKrD,0EAA8E;QAA3B,uIAAU,mBAAe,IAAC;QAGzE,2GAMM;QACN,0EAA4B;QACxB,4EAA+B;QAAA,kEAAM;QAAA,4DAAQ;QAC7C,2EAAyB;QACrB,2EAA+B;QAAA,oEAAuB;QAAA,4DAAM;QAE5D,wEAAwH;QAE5H,4DAAM;QACV,4DAAM;QACN,0EAA4B;QACxB,6EAAgC;QAAA,oEAAQ;QAAA,4DAAQ;QAChD,2EAAyB;QACrB,8EAAsE;QACpE,8EAAiB;QAAA,+EAAmB;QAAA,4DAAS;QAI7C,oHACmD;QACrD,4DAAS;QACb,4DAAM;QACV,4DAAM;QAGN,2EAAkC;QAG9B,8EAA8G;QAC5G,oEAA0B;QAC1B,4EAAe;QAAA,4DAAS;QAC1B,yEAAoF;QAAA,kEAAM;QAAA,4DAAI;QAElG,4DAAM;QACV,4DAAO;QACX,4DAAM;QAEV,4DAAM;QACV,4DAAM;QACN,8GAUM;QACV,4DAAM;;QA3DoC,0DAAwB;QAAxB,qFAAwB;QAGjB,0DAAwB;QAAxB,wFAAwB;QAwBd,2DAAa;QAAb,mFAAa;QAU1B,0DAA+B;QAA/B,4FAA+B;QAW7B,0DAA0B;QAA1B,0FAA0B;;;;;;;;;;;;;;ACzD1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AACmB;AACT;AACV;AACmB;AACV;;AAqBjD,MAAM,UAAU;;oEAAV,UAAU;yFAAV,UAAU;6FAZZ;YACP,4DAAY;YACZ,4DAAY;YACZ,0DAAW;YACX,kEAAmB;YACnB,qEAAgB;SACjB;mIAMU,UAAU,mBAfnB,qEAAc;QACd,8EAAiB,aAGjB,4DAAY;QACZ,4DAAY;QACZ,0DAAW;QACX,kEAAmB;QACnB,qEAAgB,aAGhB,qEAAc;QACd,8EAAiB;;;;;;;;;;;;;ACvBrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AAE1D,SAAS;AAC+C;AACL;AACH;AAED;AAC+B;;AAmBvE,MAAM,SAAS;;kEAAT,SAAS;wFAAT,SAAS,cAFR,2DAAY;6FADb,EAAE,YANJ;YACP,uEAAa;YACb,oEAAgB;YAChB,+DAAW;YACX,4DAAU;SACX;mIAIU,SAAS,mBAblB,2DAAY;QACZ,0FAAqB,aAIrB,uEAAa;QACb,oEAAgB;QAChB,+DAAW;QACX,4DAAU;;;;;;;;;;;;;ACtBd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoE;AACtC;;;;;;;IC2CN,oEAAmC;IAAA,mFAAwB;IAAA,4DAAI;;;IAC/D,oEAAkC;IAAA,yGAA8C;IAAA,4DAAI;;;IACpF,oEAAmC;IAAA,oGAAoC;IAAA,4DAAI;;;IAE3E,oEAA2B;IAAA,2FAAgC;IAAA,4DAAI;;ADpChF,MAAM,iBAAiB;IAgB5B,YAAqB,EAAe,EAAU,cAA6B,EACjE,MAAa;QADF,OAAE,GAAF,EAAE,CAAa;QAAU,mBAAc,GAAd,cAAc,CAAe;QACjE,WAAM,GAAN,MAAM,CAAO;QAfvB,0CAA0C;QACnC,kBAAa,GAAG,KAAK,CAAC;QAE7B,qEAAqE;QAC9D,iBAAY,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAClC,MAAM,EAAE,CAAC,EAAE,EAAC,CAAE,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;YAC5D,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,KAAK,CAAC,CAAC;YACpD,QAAQ,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACnC,SAAS,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACpC,QAAQ,EAAE,CAAC,KAAK,EAAE,yDAAU,CAAC,QAAQ,CAAC;SACvC,EAAC;YACA,UAAU,EAAE,IAAI,CAAC,eAAe,CAAE,UAAU,EAAE,WAAW,CAAC;SAC3D,CAAC;IAIC,CAAC;IACN,gFAAgF;IAC9E,YAAY;QAEV,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC1B,OAAO,CAAC,GAAG,CAAE,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;QAErC,8BAA8B;QAC/B,IAAI,IAAI,CAAC,YAAY,CAAC,OAAO,EAAC;YAC5B,OAAO;SACR;QACD,8EAA8E;QAC9E,IAAI,CAAC,cAAc,CAAC,YAAY,CAAE,IAAI,CAAC,YAAY,CAAC,KAAK,CAAE,CAAC,SAAS,CAAE,IAAI,CAAC,EAAE;YAC5E,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;YAC9B,OAAO,CAAC,GAAG,CAAE,IAAI,CAAE,CAAC;YACpB,iDAAiD;YACjD,IAAI,CAAC,MAAM,CAAC,aAAa,CAAE,GAAG,CAAC;QAEjC,CAAC,EAAC,CAAC,GAAG,EAAE,EAAE;YAEV,sDAAsD;YAEtD,kDAAI,CAAC,IAAI,CAAE,OAAO,EAAG,GAAG,CAAC,KAAK,CAAC,GAAG,EAAE,OAAO,CAAC;QAE9C,CAAC,CAAC;IACF,CAAC;IAED,aAAa,CAAE,KAAa;QAC1B;;WAEG;QACJ,IAAK,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,OAAO,IAAI,IAAI,CAAC,aAAa,EAAC;YAC/D,OAAO,IAAI,CAAC;SACZ;aAAI;YACJ,OAAO,KAAK,CAAC;SACb;IACF,CAAC;IACD,iFAAiF;IACjF,6BAA6B;IAC7B,qBAAqB;QAEnB,0CAA0C;QAC1C,MAAM,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC;QACtD,MAAM,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,KAAK,CAAC;QAEvD,4EAA4E;QAC5E,IAAI,CAAC,KAAK,KAAK,KAAK,CAAC,IAAI,IAAI,CAAC,aAAa,EAAE;YACzC,OAAO,IAAI,CAAC;SACf;aAAM;YACL,OAAO,KAAK,CAAC;SACd;IAEH,CAAC;IACH,kFAAkF;IACjF,kDAAkD;IACnD,eAAe,CAAC,SAAS,EAAE,SAAS;QAE5B,OAAM,CAAE,SAAoB,EAAE,EAAE;YAC9B,MAAM,YAAY,GAAI,SAAS,CAAC,GAAG,CAAE,SAAS,CAAE,CAAC;YACjD,MAAM,YAAY,GAAI,SAAS,CAAC,GAAG,CAAE,SAAS,CAAE,CAAC;YAEjD,IAAK,YAAY,CAAC,KAAK,KAAK,YAAY,CAAC,KAAK,EAAG;gBAC/C,YAAY,CAAC,SAAS,CAAE,IAAI,CAAC;aAC9B;iBAAI;gBACH,YAAY,CAAC,SAAS,CAAC,EAAC,SAAS,EAAE,IAAI,EAAC,CAAC;aAC1C;QAEH,CAAC;IACP,CAAC;IACH,yEAAyE;IACvE,sBAAsB;IACtB,aAAa;QACX,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK,IAAI,IAAI,CAAC,aAAa,CAAC;IACxE,CAAC;IAED,QAAQ;IACR,CAAC;;kFA9FU,iBAAiB;iGAAjB,iBAAiB;QCb9B,6EAAyI;QACrI,yEAA4B;QACxB,yEAAuB;QAEnB,0EAAqI;QAA5B,6IAAY,kBAAc,IAAC;QAEhI,uEAAoD;QAAA,oEAAuD;QAAA,gEAAK;QAAA,oEAAuD;QAAA,4DAAI;QAC3K,wEAAmC;QAAA,uEAAY;QAAA,4DAAK;QAAA,yEAAO;QAAA,yFAA6B;QAAA,4DAAQ;QAChG,0EAA+B;QAG3B,0EAAuB;QACnB,wEAAoF;QACxF,4DAAM;QACV,4DAAM;QAEN,2EAAyB;QACrB,0EAAuB;QACnB,wEAAoF;QACxF,4DAAM;QACV,4DAAM;QAEN,2EAAyB;QACrB,0EAAuB;QACnB,wEAA8F;QAClG,4DAAM;QACV,4DAAM;QAEN,2EAAwB;QACpB,0EAAuB;QACnB,wEAAmH;QACvH,4DAAM;QACV,4DAAM;QAEN,2EAA4B;QACxB,2EAAuB;QACnB,2EAA6C;QACzC,wEAAuE;QACvE,6EAA6B;QAAC,4EAAe;QAAA,yEAAY;QAAA,iEAAK;QAAA,4DAAI;QAAA,4DAAQ;QAC9E,4DAAM;QACV,4DAAM;QACV,4DAAM;QAEN,2EAAiB;QACb,2EAA6B;QACzB,4GAA+D;QAC/D,4GAAoF;QACpF,4GAA2E;QAE3E,4GAA+D;QACnE,4DAAM;QAEV,4DAAM;QACN,2EAA2C;QACvC,0EAAuB;QACnB,8EAAoG;QAAA,mEAAO;QAAA,4DAAS;QACxH,4DAAM;QACV,4DAAM;QACN,2EAA8B;QAC1B,2EAAmC;QAC/B,qEAAG;QAAA,qFAAyB;QAAA,yEAA+C;QAAA,qEAAG;QAAA,mEAAO;QAAA,4DAAI;QAAA,4DAAI;QAAA,4DAAI;QACrG,4DAAM;QACV,4DAAM;QACV,4DAAO;QACX,4DAAM;QACV,4DAAM;QACV,4DAAU;;QA9DgF,0DAA0B;QAA1B,uFAA0B;QAyCxF,2DAA6B;QAA7B,6FAA6B;QAC7B,0DAA4B;QAA5B,4FAA4B;QAC5B,0DAA6B;QAA7B,6FAA6B;QAE7B,0DAAqB;QAArB,qFAAqB;;;;;;;;;;;;;;AC9CjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyD;AAC1B;;;;;;AAUxB,MAAM,cAAc;IAoBzB,YAAqB,MAAc,EAAS,EAAc,EACrC,cAA6B,EAAU,MAAa;QADpD,WAAM,GAAN,MAAM,CAAQ;QAAS,OAAE,GAAF,EAAE,CAAY;QACrC,mBAAc,GAAd,cAAc,CAAe;QAAU,WAAM,GAAN,MAAM,CAAO;QAjB1E,0CAA0C;QAE/B,kBAAa,GAAG,KAAK,CAAC;QAE7B,qEAAqE;QAC9D,cAAS,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAEhC;oFACwE;YAEvE,KAAK,EAAE,CAAC,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,EAAE,EAAC,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,KAAK,CAAC,CAAC;YACpF,QAAQ,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACnC,QAAQ,EAAC,CAAC,KAAK,CAAC;SAEjB,CAAC;IAIU,CAAC;IAGjB,0BAA0B;IAC1B,0EAA0E;IAC1E,eAAe;QACb,IAAI,CAAC,UAAU,EAAE,CAAC;IACN,CAAC;IAEd,UAAU;QACR,sBAAsB;QACtB,MAAM,CAAC,QAAQ,CAAC,EAAE,CAAC,UAAU,CAAC;YAC5B,+CAA+C;YAC/C,SAAS,EAAE,2EAA2E;YACtF,QAAQ,EAAE,CAAC,QAAQ,EAAE,EAAE,CAAC,IAAI,CAAC,wBAAwB,CAAC,QAAQ,CAAC;SAClE,CAAC,CAAC;QAEH,MAAM,CAAC,QAAQ,CAAC,EAAE,CAAC,YAAY,CAC3B,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE;YAC1B,KAAK,EAAE,SAAS;YAChB,IAAI,EAAE,OAAO;SACd,CACN;IACG,CAAC;IACD,oDAAoD;IACpD,wBAAwB,CAAE,QAAa;QAClC,OAAO,CAAC,GAAG,CAAC,wBAAwB,GAAG,QAAQ,CAAC,UAAU,CAAC,CAAC;QAC7D,IAAI,CAAC,cAAc,CAAC,WAAW,CAAG,QAAQ,CAAC,UAAU,CAAE,CAAC,SAAS,CAAE,IAAI,GAAE;YACvE,8BAA8B;YAC9B,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,GAAE,EAAE;gBAClB,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;YACjC,CAAC,CAAC;QACJ,CAAC,CAAC;IACV,CAAC;IAGA,0EAA0E;IAC7E,uCAAuC;IAErC,KAAK;QAEJ,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,IAAI,GAAE;YAC/D;;iBAEK;YACH,IAAK,IAAI,CAAC,SAAS,CAAC,GAAG,CAAE,UAAU,CAAE,CAAC,KAAK,EAAG;gBAC5C,YAAY,CAAC,OAAO,CAAE,OAAO,EAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,KAAK,CAAE,CAAC;aACrE;iBAAM;gBACL,0EAA0E;gBAC1E,YAAY,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;aAClC;YACE,uBAAuB;YACvB,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;YAEpC,oBAAoB;QACtB,CAAC,EAAC,CAAC,GAAG,EAAC,EAAE;YACP,kDAAI,CAAC,IAAI,CAAC,OAAO,EAAC,GAAG,CAAC,KAAK,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC;QAE5C,CAAC,CAAC,CAAC;IAEH,CAAC;;4EAlFU,cAAc;8FAAd,cAAc;;;;;;QCX3B,6EAAoJ;QAChJ,yEAA4B;QACxB,yEAAuB;QAEnB,0EAA2H;QAArB,0IAAY,WAAO,IAAC;QAEtH,uEAAoD;QAAA,oEAAuD;QAAA,gEAAK;QAAA,oEAAuD;QAAA,4DAAI;QAC3K,yEAA+B;QAC3B,yEAAuB;QACnB,uEAAqF;QACzF,4DAAM;QACV,4DAAM;QACN,2EAAwB;QACpB,0EAAuB;QACnB,wEAA8F;QAClG,4DAAM;QACV,4DAAM;QACN,2EAA4B;QACxB,2EAAuB;QACnB,2EAAuD;QACnD,wEAA4G;QAC5G,6EAA6B;QAAC,yEAAY;QAAA,4DAAQ;QACtD,4DAAM;QACN,yEAA0E;QAAA,oEAAgC;QAAC,wEAAW;QAAA,4DAAI;QAAC,4DAAM;QACzI,4DAAM;QACN,2EAA2C;QACvC,0EAAuB;QACnB,8EAAuF;QAAA,kEAAM;QAAA,4DAAS;QAC1G,4DAAM;QACV,4DAAM;QACN,2EAAiB;QACb,2EAA8D;QAC1D,2EAAoB;QAChB,0EAAqC;QAEzC,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,2EAA8B;QAC1B,2EAAmC;QAC/B,oFAAuB;QAAA,yEAAqD;QAAA,qEAAG;QAAA,mEAAO;QAAA,4DAAI;QAAA,4DAAI;QAClG,4DAAM;QACV,4DAAM;QACV,4DAAO;QACP,4EAAmE;QAC/D,2EAAyB;QACrB,0EAAuB;QACnB,sEAAI;QAAA,4EAAgB;QAAA,4DAAK;QACzB,yEAAsB;QAAA,mHAAuD;QAAA,4DAAI;QACrF,4DAAM;QACV,4DAAM;QACN,2EAAyB;QACrB,0EAAuB;QACnB,wEAAwE;QAC5E,4DAAM;QACV,4DAAM;QACN,2EAA2C;QACvC,0EAAuB;QACnB,8EAAuG;QAAA,iEAAK;QAAA,4DAAS;QACzH,4DAAM;QACV,4DAAM;QACV,4DAAO;QACX,4DAAM;QACV,4DAAM;QACV,4DAAU;;QA5DgF,0DAAuB;QAAvB,oFAAuB;;;;;;;;;;;;;;ACPjH;AAAA;AAAO,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,IAAI;IAChB,4CAA4C;IAC3C,QAAQ,EAAC,qDAAqD;CAEhE,CAAC;;;;;;;;;;;;;;;;;ACAK,MAAM,eAAe;IAM1B;QAEE,wGAAwG;QACxG,uDAAuD;QAPzD,6CAA6C;QAErC,cAAS,GAAG,QAAQ,CAAC,aAAa,CAAG,QAAQ,CAAE,CAAC;QAOtD,MAAM,GAAG,GAAG,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,sCAAsC,CAAE;QAErF,mGAAmG;QACnG,IAAI,CAAC,SAAS,CAAC,YAAY,CAAE,MAAM,EAAE,GAAG,CAAC;IAE3C,CAAC;IAID,WAAW,CAAE,KAAY;QAEvB,wDAAwD;QACxD,MAAM,GAAG,GAAG,uBAAwB,KAAM,OAAO;QAEjD,mGAAmG;QACnG,IAAI,CAAC,SAAS,CAAC,YAAY,CAAE,MAAM,EAAE,GAAG,CAAE;QAE1C,2GAA2G;QAC5G,YAAY,CAAC,OAAO,CAAG,OAAO,EAAE,GAAG,CAAE;QAErC,8CAA8C;QAC/C,IAAI,CAAC,iBAAiB,EAAE,CAAC;IACxB,CAAC;IAMJ,8CAA8C;IAC5C,iBAAiB;QAEb,4EAA4E;QAC3E,MAAM,KAAK,GAAG,QAAQ,CAAC,gBAAgB,CAAC,WAAW,CAAC;QAEpD,+DAA+D;QAC7D,KAAK,CAAC,OAAO,CAAG,IAAI,CAAC,EAAE;YAEnB,8DAA8D;YAC7D,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC;YAEhC,2EAA2E;YAC1E,MAAM,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC;YAEhD,4CAA4C;YAC7C,MAAM,WAAW,GAAG,uBAAwB,QAAS,OAAO;YAC3D,oEAAoE;YACnE,MAAM,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,YAAY,CAAE,MAAM,CAAC;YAE1D,yGAAyG;YACzG,IAAI,WAAW,KAAK,YAAY,EAAE;gBAChC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,SAAS,CAAC;aAC9B;QACZ,CAAC,CAAC;IACN,CAAC;;8EAhEY,eAAe;kGAAf,eAAe,WAAf,eAAe,mBAFd,MAAM;;;;;;;;;;;;;ACHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAsD;AAGP;AACU;AACU;AAIA;AACZ;AAEvD,aAAa;AACqD;AACA;AACf;AACkB;AACiB;AAChC;AACM;AACqB;AACM;AACT;AACF;AACP;;AAwC9D,MAAM,WAAW;;sEAAX,WAAW;2FAAX,WAAW;+FAnBb;YACP,4DAAY;YACZ,kEAAY;YACZ,oEAAgB;YAChB,0DAAW;YACX,8EAAgB;YAChB,kEAAmB;YACnB,+DAAW;SACZ;oIAWU,WAAW,mBAjCpB,8EAAiB;QACjB,8EAAiB;QACjB,+DAAc;QACd,iFAAkB;QAClB,mGAAuB;QACvB,mEAAa;QACb,yEAAe;QACf,8FAAiB;QACjB,oGAAmB;QACnB,2FAAgB;QAChB,yFAAe;QACf,kFAAkB,aAIlB,4DAAY;QACZ,kEAAY;QACZ,oEAAgB;QAChB,0DAAW;QACX,8EAAgB;QAChB,kEAAmB;QACnB,+DAAW,aAGX,8EAAiB;QACjB,8EAAiB;QACjB,+DAAc;QACd,iFAAkB;QAClB,mGAAuB;QACvB,8EAAiB;QACjB,mEAAa;;;;;;;;;;;;;AC7DjB;AAAA;AAAA;AAAA;AAAA;AAA0E;;;;;AASnE,MAAM,sBAAsB;IANnC;QAQU,aAAQ,GAAW,EAAE,CAAE;QACvB,aAAQ,GAAW,aAAa,CAAE;QAEjC,gBAAW,GAAyB,IAAI,0DAAY,EAAE,CAAC;KAyCjE;IApCC,YAAY,CAAE,KAAY;QAExB,IAAK,IAAI,CAAC,QAAQ,IAAI,GAAG,IAAI,IAAI,CAAC,QAAQ,IAAI,CAAC,EAAC;YAC9C,IAAI,CAAC,WAAW,CAAC,IAAI,CAAG,GAAG,CAAE,CAAC;YAC9B,OAAO,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC;SAC5B;QAED,IAAK,IAAI,CAAC,QAAQ,IAAI,CAAC,IAAI,IAAI,CAAC,QAAQ,GAAG,CAAC,EAAC;YAC3C,IAAI,CAAC,WAAW,CAAC,IAAI,CAAG,CAAC,CAAE,CAAC;YAC5B,OAAO,IAAI,CAAC,QAAQ,GAAG,CAAC;SACzB;QAGD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAG,IAAI,CAAC,QAAQ,CAAE,CAAC;IAE1C,CAAC;IAED,4DAA4D;IAC5D,QAAQ,CAAC,KAAY;QAEnB,IAAI,KAAK,IAAI,GAAG,EAAC;YACf,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC;SACrB;aAAK,IAAI,KAAK,IAAI,CAAC,EAAE;YACpB,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;SACnB;aAAI;YACH,IAAI,CAAC,QAAQ,GAAG,KAAK;SACtB;QAED,IAAI,CAAC,WAAW,CAAC,IAAI,CAAG,IAAI,CAAC,QAAQ,CAAE;IACzC,CAAC;IAED,QAAQ;QACJ,IAAI,CAAC,QAAQ,GAAG,QAAS,IAAI,CAAC,QAAS,EAAE;IAC7C,CAAC;;4FA5CU,sBAAsB;sGAAtB,sBAAsB;QCTnC,yEAAyB;QACrB,0EAA8B;QAC/B,4EAAsE;QAAzC,8IAAS,kBAAc,CAAC,CAAC,IAAC;QACrD,kEAA2B;QAC7B,4DAAS;QACZ,4DAAO;QAQH,2EAAwM;QAA1D,mKAAiB,oBAAgB,IAAC;QAAhL,4DAAwM;QAExM,0EAA8B;QAC9B,4EAAsE;QAAzC,8IAAS,kBAAc,CAAC,CAAC,IAAC;QACrD,kEAA0B;QAC5B,4DAAS;QACb,4DAAO;QACP,4DAAM;;QAlBK,0DAAoB;QAApB,iFAAoB;QAWe,0DAA0D;QAA1D,kLAA0D;QAG5F,0DAAoB;QAApB,iFAAoB;;;;;;;;;;;;;;;;;;;;;;;;;;;ICXhB,yEAAiF;IAC7E,uEAAgB;IACZ,4FACJ;IAAA,4DAAI;IACR,4DAAM;;;IAWM,yEAAkE;IAC9D,qEAAI;IACA,qEAA6D;;IACjE,4DAAK;IACL,qEAAI;IAAA,uDAAkB;IAAA,4DAAK;IAE/B,4DAAK;;;IAJwB,0DAAuC;IAAvC,yNAAuC;IAE5D,0DAAkB;IAAlB,kFAAkB;;;IAdtC,yEAA0D;IACtD,2EAAqB;IACjB,wEAAO;IACH,qEAAI;IACA,qEAAI;IAAA,+DAAI;IAAA,4DAAK;IACb,qEAAI;IAAA,iEAAM;IAAA,4DAAK;IAEnB,4DAAK;IACT,4DAAQ;IACR,wEAAO;IACH,mHAMK;IAET,4DAAQ;IACZ,4DAAQ;IACZ,4DAAM;;;IAV8B,0DAAW;IAAX,oFAAW;;;IAoB/C,yEAAgF;IAC5E,uEAAgB;IACZ,+FACJ;IAAA,4DAAI;IACR,4DAAM;;;;IAWM,yEAAgE;IAC5D,qEAAI;IACA,qEAA2D;;IAE/D,4DAAK;IACL,qEAAI;IACA,wEAAoD;IAAA,uDAAiB;IAAA,4DAAI;IAC7E,4DAAK;IAET,4DAAK;;;IAPwB,0DAAqC;IAArC,uNAAqC;IAIvD,0DAAgD;IAAhD,4JAAgD;IAAC,0DAAiB;IAAjB,iFAAiB;;;IAhBzF,yEAAyD;IACrD,2EAAqB;IACjB,wEAAO;IACH,qEAAI;IACA,qEAAI;IAAA,+DAAI;IAAA,4DAAK;IACb,qEAAI;IAAA,iEAAM;IAAA,4DAAK;IAEnB,4DAAK;IACT,4DAAQ;IACR,wEAAO;IACH,oHASK;IAET,4DAAQ;IACZ,4DAAQ;IACZ,4DAAM;;;IAb6B,0DAAU;IAAV,mFAAU;;;IAuB7C,yEAAmF;IAC/E,uEAAgB;IACZ,8FACJ;IAAA,4DAAI;IACR,4DAAM;;;IAWM,yEAAsE;IAClE,qEAAI;IACA,qEAAgE;;IAEpE,4DAAK;IACL,qEAAI;IAAA,uDAAmB;IAAA,4DAAK;IAEhC,4DAAK;;;IALwB,0DAA0C;IAA1C,6NAA0C;IAG/D,0DAAmB;IAAnB,oFAAmB;;;IAfvC,yEAA4D;IACxD,2EAAqB;IACjB,wEAAO;IACH,qEAAI;IACA,qEAAI;IAAA,+DAAI;IAAA,4DAAK;IACb,qEAAI;IAAA,iEAAM;IAAA,4DAAK;IAEnB,4DAAK;IACT,4DAAQ;IACR,wEAAO;IACH,oHAOK;IAET,4DAAQ;IACZ,4DAAQ;IACZ,4DAAM;;;IAX+B,0DAAa;IAAb,sFAAa;;AChF3D,MAAM,kBAAkB;IAO7B,YAAqB,aAA4B,EACzB,eAAiC;QADpC,kBAAa,GAAb,aAAa,CAAe;QACzB,oBAAe,GAAf,eAAe,CAAkB;QANlD,aAAQ,GAAY,EAAE,CAAC;QACvB,YAAO,GAAW,EAAE,CAAC;QACrB,eAAU,GAAa,EAAE,CAAC;IAI4B,CAAC;IAE9D,QAAQ;QACN,+DAA+D;QAC/D,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,EAAE,OAAO,EAAE,EAAC,EAAE;YACjD,IAAI,CAAC,cAAc,CAAE,OAAO,CAAE;QAC1B,CAAC,CAAC;IACV,CAAC;IAGA,cAAc,CAAE,OAAe;QAE3B,IAAI,CAAC,eAAe,CAAC,eAAe,CAAE,OAAO,CAAE,CAAC,SAAS,CAAE,CAAC,IAAQ,EAAC,EAAE;YACnE,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;YAC9B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;YAC5B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU;QACtC,CAAC,CAAC;IACL,CAAC;;oFAzBS,kBAAkB;kGAAlB,kBAAkB;QDb/B,yEAAsC;QAClC,yEAAmB;QACf,yEAAkB;QACd,yEAAuB;QACnB,qEAAI;QAAA,mEAAQ;QAAA,4DAAK;QACjB,8GAIM;QACN,+GAoBM;QAGV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,yEAAmB;QACf,yEAAkB;QACd,0EAAuB;QACnB,sEAAI;QAAA,wEAAO;QAAA,4DAAK;QAChB,gHAIM;QACN,iHAuBM;QAGV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,0EAAmB;QACf,0EAAkB;QACd,0EAAuB;QACnB,sEAAI;QAAA,sEAAU;QAAA,4DAAK;QACnB,gHAIM;QACN,iHAqBM;QAGV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;;QAzGgB,0DAA2B;QAA3B,2FAA2B;QAK3B,0DAAyB;QAAzB,yFAAyB;QA8BzB,0DAA0B;QAA1B,0FAA0B;QAK1B,0DAAwB;QAAxB,wFAAwB;QAiCxB,0DAA6B;QAA7B,6FAA6B;QAKJ,0DAA2B;QAA3B,2FAA2B;;;;;;;;;;;;;;AEjF1E;AAAA;AAAA;AAAA;AAA2C;;AASpC,MAAM,WAAW;;sEAAX,WAAW;0FAAX,WAAW;;mIAAX,WAAW,mBAJN,uDAAU,aACf,uDAAU;;;;;;;;;;;;;ACPvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AACkC;AACpC;AACS;AACZ;AACmC;;AAuBtE,MAAM,gBAAgB;;gFAAhB,gBAAgB;+FAAhB,gBAAgB;mGAXlB;YACP,4DAAY;YACZ,0DAAW;YACX,uDAAY;SACb;mIAOU,gBAAgB,mBAhBzB,6FAAsB;QACtB,kEAAa;QACb,yFAAoB,aAIpB,4DAAY;QACZ,0DAAW;QACX,uDAAY,aAGZ,6FAAsB;QACtB,kEAAa;QACb,yFAAoB;;;;;;;;;;;;;AC1BxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuD;AAGvD,aAAa;AACsC;AAGF;;;AAGjD,MAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,WAAW;QACnB,SAAS,EAAE,+DAAc;QACzB,WAAW,EAAE,CAAE,4DAAS,CAAE;QAC1B,OAAO,EAAE,CAAC,4DAAS,CAAC;QACpB,YAAY,EAAE,GAAE,EAAE,CAAC,4JAA+B,CAAC,IAAI,CAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,iBAAiB,CAAE,0BAAyB;KAC7G;CAGA,CAAC;AAMK,MAAM,kBAAkB;;oFAAlB,kBAAkB;iGAAlB,kBAAkB;qGAHpB,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAC9B,4DAAY;mIAEX,kBAAkB,uFAFnB,4DAAY;;;;;;;;;;;;;ACvBxB;AAAA;AAAA;AAAA;AAAA;AAA6C;AAEW;;;AASjD,MAAM,oBAAoB;IAK/B,YAAqB,MAAc;QAAd,WAAM,GAAN,MAAM,CAAQ;QAC/B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,gBAAgB,EAAE;YAClB,SAAS,CAAG,IAAI,CAAC,EAAE;YAEhB,OAAO,CAAC,GAAG,CAAG,IAAI,CAAE;YAEpB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,EAAC,sCAAsC;YAChE,QAAQ,CAAC,KAAK,GAAG,cAAc,IAAI,CAAC,MAAM,EAAE,6CAA2C;YAErF;;;;;;aAMC;QACN,CAAC,CAGtB,CAAC;IACP,CAAC;IAID,gBAAgB;QAEf,yHAAyH;QAC1H,OAAO,IAAI,CAAC,MAAM,CAAC,MAAM;YACf,IAAI,CACF,6DAAM,CAAE,KAAK,CAAC,EAAE,CAAC,KAAK,YAAY,6DAAa,CAAC,EAAC,6GAA6G;QAC9J,6DAAM,CAAE,CAAE,KAAoB,EAAG,EAAE,CAAC,KAAK,CAAC,QAAQ,CAAC,UAAU,KAAK,IAAI,CAAE,EAAE,8DAA8D;QACxI,0DAAG,CAAE,CAAE,KAAoB,EAAG,EAAE,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAE,CACvD;IAEX,CAAC;IAEF,WAAW;QAET,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC;IAEjC,CAAC;;wFA7CU,oBAAoB;oGAApB,oBAAoB;QCRjC,yEAA6B;QACzB,yEAAwC;QACpC,wEAA4B;QAAA,uDAAY;QAAA,4DAAK;QACjD,4DAAM;QACN,yEAAwC;QACpC,wEAAuB;QACnB,wEAA4B;QACxB,uEAA6B;QAAA,+DAAI;QAAA,4DAAI;QACzC,4DAAK;QACL,wEAA4B;QAAA,iEAAK;QAAA,4DAAK;QACtC,yEAAmC;QAAA,wDAAY;QAAA,4DAAK;QACxD,4DAAK;QACT,4DAAM;QAEV,4DAAM;;QAZ8B,0DAAY;QAAZ,2EAAY;QAQD,0DAAY;QAAZ,2EAAY;;;;;;;;;;;;;;ACT3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuC;AAGR;;;;;;;;;ICI/B,yEAAuD;IACnD,yEAAoB;IAChB,yEAAuD;IACnD,wEAA0B;IAAA,mEAAQ;IAAA,4DAAK;IACvC,mEAA2C;IAC3C,wEAAgB;IAAA,2EAAgB;IAAA,4DAAI;IACxC,4DAAM;IACV,4DAAM;IACV,4DAAM;;;;;IA8BsB,qEAAmC;IAC/B,yEAAwB;IACpB,0EAAqH;IAAhH,mWAA4B;;IAAjC,4DAAqH;IACzH,4DAAK;IACL,qEAAI;IAAA,uDAAiB;IAAA,4DAAK;IAC1B,qEAAI;IAAA,uDAA0B;IAAA,4DAAK;IAInC,yEAAoC;IAChC,wEAAuG;IAAC,oEAAgD;IAAC,4DAAI;IAC7J,yEAAuF;IAApF,sWAAgC;IAAqD,oEAAuC;IAAC,4DAAI;IACxI,4DAAK;IACT,4DAAK;;;IAX2D,0DAAwC;IAAxC,uNAAwC;IAEhG,0DAAiB;IAAjB,iFAAiB;IACjB,0DAA0B;IAA1B,0FAA0B;IAKvB,0DAAgD;IAAhD,4JAAgD;;;;IAvCvF,0EAAmC;IAC/B,yEAAoB;IAChB,yEAAkB;IACd,yEAAuB;IACnB,0EAAiB;IACb,0EAAmB;IACf,yEAAuB;IAAA,mEAAQ;IAAA,4DAAK;IACxC,4DAAM;IACN,0EAAiB;IACb,0EAAwB;IACpB,yEAAsE;IAClE,oEAAgC;IAAA,yEACpC;IAAA,4DAAI;IACR,4DAAM;IACV,4DAAM;IACV,4DAAM;IAEN,0EAA0B;IAAA,iGAAqC;IAAA,4DAAK;IACpE,2EAA8B;IAC1B,6EAAoC;IAChC,yEAAO;IACH,sEAAI;IACA,0EAAiB;IAAA,gEAAI;IAAA,4DAAK;IAC1B,sEAAI;IAAA,kEAAM;IAAA,4DAAK;IACf,sEAAI;IAAA,qEAAS;IAAA,4DAAK;IAClB,0EAAwB;IAAA,yEAAa;IAAA,4DAAK;IAC9C,4DAAK;IACT,4DAAQ;IACR,yEAAO;IACH,oHAaK;IACT,4DAAQ;IACZ,4DAAQ;IACZ,4DAAM;IAEV,4DAAM;IACV,4DAAM;IACV,4DAAM;IACV,4DAAM;;;IAxCiD,2DAA0C;IAA1C,6IAA0C;IAmB9C,2DAAU;IAAV,mFAAU;;ADjCtD,MAAM,gBAAgB;IAQ3B,YAAqB,cAA8B,EACzB,kBAAsC,EACtC,eAAiC;QAFtC,mBAAc,GAAd,cAAc,CAAgB;QACzB,uBAAkB,GAAlB,kBAAkB,CAAoB;QACtC,oBAAe,GAAf,eAAe,CAAkB;QARpD,YAAO,GAAc,EAAE,CAAC;QACxB,gBAAW,GAAe,EAAE;QAC5B,aAAQ,GAAY,IAAI,CAAC,CAAI,wBAAwB;IAMG,CAAC;IAGhE,WAAW;QACJ,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE;IACf,CAAC;IAEnB,QAAQ;QAEN,IAAI,CAAC,aAAa,EAAE,CAAC;QAErB,2DAA2D;QAC5D,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,kBAAkB,CAAC,WAAW;YAChE,IAAI,CACF,4DAAK,CAAC,GAAG,CAAC,+CAA8C;SACzD;aACA,SAAS,CAAC,GAAG,GAAE,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC;IACxC,CAAC;IAGD,aAAa;QACX,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QAErB,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE,CAAC,SAAS,CAAE,CAAC,IAAS,EAAC,EAAE;YAC1D,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;YAEtB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,qEAAoE;QAG1F,CAAC,CAAC;IACJ,CAAC;IAID,UAAU,CAAC,MAAe;QAExB,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,SAAS,EAAE,MAAM,CAAC,GAAG,EAAE,MAAM,CAAC,GAAG,CAAC;IAEvE,CAAC;IAGF,MAAM,CAAG,OAAe;QACrB,IAAI,OAAO,CAAC,MAAM,KAAK,CAAC,EAAC;YACvB,IAAI,CAAC,aAAa,EAAE,CAAC;YACrB,OAAO,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,WAAW;SAEvC;QAED,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,SAAS,EAAE,OAAO,CAAE,CAAC,SAAS,CAC1D,IAAI,GAAE;YACF,IAAI,CAAC,OAAO,GAAG,IAAI;QACvB,CAAC,CACE;IACL,CAAC;IAEF,cAAc,CAAE,MAAa;QAE9B,8DAA8D;QAC9D,kDAAI,CAAC,IAAI,CAAC;YACR,KAAK,EAAE,iBAAiB;YACxB,IAAI,EAAE,8BAA+B,MAAM,CAAC,MAAM,EAAE;YACpD,IAAI,EAAE,UAAU;YAChB,gBAAgB,EAAE,IAAI;YACtB,kBAAkB,EAAE,SAAS;YAC7B,iBAAiB,EAAE,MAAM;YACzB,iBAAiB,EAAE,YAAY;SAChC,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;YACjB,IAAI,MAAM,CAAC,WAAW,EAAE;gBACtB,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,SAAS,CACtD,IAAI,GAAE;oBACJ,IAAI,CAAC,aAAa,EAAE,CAAC;oBACrB,kDAAI,CAAC,IAAI,CAAC,SAAS,EAAE,MAAM,CAAC,MAAM,EAAC,SAAS,CAAC;gBAC/C,CAAC,CACF;gBACC,kDAAI,CAAC,IAAI,CACP,UAAU,EACV,GAAI,MAAM,CAAC,MAAO,8BAA8B,EAChD,SAAS,CACV;aACF;QACH,CAAC,CAAC;IACF,CAAC;;gFA3FU,gBAAgB;gGAAhB,gBAAgB;;QCf7B,yEAAsC;QAClC,yEAAoB;QAChB,yEAAkB;QACd,yEAAuB;QACnB,8EAAmH;QAAnC,mRAAS,qBAAwB,IAAC;QAAlH,4DAAmH;QAEvH,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,4GAQM;QACN,6GAkDM;;QA3DiC,0DAAc;QAAd,8EAAc;QASnC,0DAAe;QAAf,+EAAe;;;;;;;;;;;;;;;;;;;;ACT/B,OAAO;AACT,+GAA+G;AAExG,MAAM,aAAa;IAV1B;QAWC,WAAW;QAED,UAAK,GAAW,YAAY,CAAE;QAEzB,sBAAiB,GAAiB;YAChD,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;SAEhB,CAAC;QACiB,wBAAmB,GAAY,CAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC;QAE1E,sBAAiB,GAAc,UAAU,CAAC;QAE1C,UAAK,GAAY;YACtB,EAAE,eAAe,EAAC,CAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC,EAAC;SACtD;KAEA;;0EAjBY,aAAa;6FAAb,aAAa;QCd1B,yEAAkB;QACd,yEAAuB;QACnB,qEAAI;QAAA,uDAAW;QAAA,4DAAK;QACpB,yEAA6B;QACzB,uEACG;QACP,4DAAM;QAGV,4DAAM;QACV,4DAAM;;QARM,0DAAW;QAAX,0EAAW;QAEO,0DAA0B;QAA1B,uFAA0B;;;;;;;;;;;;;;ACDxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkE;AAEZ;AAChB;AAEY;;;;AAMlD,8CAA8C;AAC9C,MAAM,QAAQ,GAAG,0EAAW,CAAC,QAAQ,CAAC;AAQ/B,MAAM,cAAc;IA6EzB,YAAqB,IAAe,EAAU,MAAc,EAAS,MAAc;QACjF,oBAAoB;QADD,SAAI,GAAJ,IAAI,CAAW;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAS,WAAM,GAAN,MAAM,CAAQ;IAGnF,CAAC;IAtED,gEAAgE;IAClE,uBAAuB;IACvB,IAAI,KAAK;QACP,OAAO,YAAY,CAAC,OAAO,CAAE,OAAO,CAAC,IAAI,EAAE,CAAC;IAC9C,CAAC;IAID,iCAAiC;IACjC,IAAI,GAAG;QACL,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,IAAI,EAAE,CAAC;IAChC,CAAC;IACD,iCAAiC;IACjC,IAAI,OAAO;QACT,OAAO;YACL,OAAO,EAAE;gBACP,SAAS,EAAC,IAAI,CAAC,KAAK,CAAC,8CAA8C;aACnE;SACF;IACJ,CAAC;IACD,+BAA+B;IAC/B,IAAI,IAAI;QACJ,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI;IAC5B,CAAC;IACC,yBAAyB;IAEzB,mBAAmB,CAAE,KAAY,EAAE,IAAQ;QACzC,YAAY,CAAC,OAAO,CAAC,OAAO,EAAG,KAAK,CAAC,CAAC;QACtC,YAAY,CAAC,OAAO,CAAC,MAAM,EAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;IACtD,CAAC;IAMH,4DAA4D;IAC1D,YAAY;QAEV,0DAA0D;QAC1D,MAAM,CAAC,QAAQ,CAAC,EAAE,CAAC,UAAU,CAAC;YAC5B,SAAS,EAAE,2EAA2E;SACvF,CAAC,CAAC;QAEA,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAI,QAAS,cAAc,EAAC;YAC/C,OAAO,EAAE;gBACP,SAAS,EAAC,IAAI,CAAC,KAAK,CAAC,8CAA8C;aACnE;SACF,CAAC,CAAC,IAAI,CACL,0DAAG,CAAE,CAAC,IAAQ,EAAE,EAAE;YAClB,mDAAmD;YACnD,+FAA+F;YAChG,MAAM,EAAC,MAAM,EAAE,KAAK,EAAE,GAAG,GAAG,EAAE,EAAG,IAAI,EAAE,MAAM,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,SAAS,CAAC;YACtE,IAAI,CAAC,OAAO,GAAG,IAAI,6DAAO,CAAE,MAAM,EAAE,KAAK,EAAE,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE,MAAM,EAAE,GAAG,CAAE,CAAE;YAExE,8BAA8B;YAC9B,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,KAAK,EAAC,IAAI,CAAC,IAAI,CAAE,CAAC;YAE9C,OAAO,IAAI;QAEb,CAAC,CAAC;QACF,kEAAkE;QAClE,iEAAU,CAAE,KAAK,CAAC,EAAE,CAAC,+CAAE,CAAC,KAAK,CAAC,CAAC,CAChC,CAAC;IAEL,CAAC;IAQN;;SAEK;IAGL,oDAAoD;IAClD,+BAA+B;IAC/B,YAAY,CAAE,QAAsB;QAEnC;;;cAGM;QACN,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,QAAQ,WAAW,EAAE,QAAQ,CAAE,CAAC,IAAI,CACpD,0DAAG,CAAC,CAAE,IAAS,EAAC,EAAE;YAEhB,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,KAAK,EAAC,IAAI,CAAC,IAAI,CAAE,CAAC;QAGlD,CAAC,CAAC,CACJ,CAAC;IACT,CAAC;IAEH,sDAAsD;IAEtD,gBAAgB,CAAE,IAAgD;QAEhE;;WAEG;QACH,IAAI,mCACC,IAAI,KACP,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,GACxB;QAED,sFAAsF;QACtF,8BAA8B;QAE9B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,QAAQ,aAAc,IAAI,CAAC,GAAI,EAAE,EAAE,IAAI,EAAE;YAC/D,OAAO,EAAE;gBACP,SAAS,EAAC,IAAI,CAAC,KAAK,CAAC,8CAA8C;aACnE;SACF,CAAC;IAGL,CAAC;IAED,OAAO;IACP;;OAEG;IACA,KAAK,CAAE,QAAkB;QACxB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,QAAQ,QAAQ,EAAC,QAAQ,CAAC,CAAC,IAAI,CACtD,0DAAG,CAAC,CAAE,IAAS,EAAC,EAAE;YACb,OAAO,CAAC,GAAG,CAAE,WAAW,GAAE,YAAY,CAAC,CAAC;YAC3C,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,KAAK,EAAC,IAAI,CAAC,IAAI,CAAE,CAAC;QAClD,CAAC,CAAC,CACH,CAAC;IACH,CAAC;IAEJ,2DAA2D;IAC3D,cAAc;IACd,kBAAkB;IAClB,WAAW,CAAE,KAAa;QACpB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAE,GAAG,QAAQ,eAAe,EAAG,EAAC,KAAK,EAAC,CAAE,CAAC,IAAI,CACxD,0DAAG,CAAC,CAAE,IAAS,EAAC,EAAE;YAEhB,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,KAAK,EAAC,IAAI,CAAC,IAAI,CAAE,CAAC;QAGlD,CAAC,CAAC,CACP,CAAC;IACT,CAAC;IAEJ,qDAAqD;IAErD,QAAQ;IACR,MAAM;QACJ,2DAA2D;QAC3D,YAAY,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;QACjC,YAAY,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;QAEhC,uDAAuD;QACvD,MAAM,CAAC,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC,2BAA2B,EAAC,GAAE,EAAE;YACxD,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,GAAE,EAAE;gBAClB,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;YACtC,CAAC,CAAC;QAEJ,CAAC,CAAC;IAKJ,CAAC;IAED,cAAc,CAAE,QAAe,CAAC;QAE9B,MAAM,GAAG,GAAG,GAAG,QAAQ,mBAAmB,KAAK,EAAE,wCAAsC;QAEvF,yEAAyE;QACzE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAiB,GAAG,EAAE,IAAI,CAAC,OAAO,CAAC;aACtD,IAAI;QACH,2FAA2F;QAC3F,0DAAG,CAAC,IAAI,GAAE;YACP,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CACjC,IAAI,GAAE,CAAC,IAAI,6DAAO,CAAE,IAAI,CAAC,MAAM,EAAC,IAAI,CAAC,KAAK,EAAC,EAAE,EAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,IAAI,EAAC,IAAI,CAAC,MAAM,EAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YAE1F,OAAO;gBACL,KAAK,EAAC,IAAI,CAAC,KAAK;gBAChB,QAAQ;aACT,CAAC;QACJ,CAAC,CAAC,CACH;IACH,CAAC;IAED,0FAA0F;IAC1F,eAAe,CAAE,OAAe;QAG9B,MAAM,GAAG,GAAG,GAAG,QAAQ,aAAc,OAAO,CAAC,GAAI,EAAE,wCAAsC;QAEzF,yCAAyC;QACzC,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAE,GAAG,EAAE,IAAI,CAAC,OAAO,CAAC;IAC7C,CAAC;IAGD,kFAAkF;IAClF,cAAc,CAAE,OAAe;QAE7B,sFAAsF;QACtF,8BAA8B;QAE9B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,QAAQ,aAAa,OAAO,CAAC,GAAI,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC;IAGrF,CAAC;;4EAzNY,cAAc;iGAAd,cAAc,WAAd,cAAc,mBAFb,MAAM;;;;;;;;;;;;;ACnBpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6D;AACxB;;;AAGrC,MAAM,QAAQ,GAAG,qEAAW,CAAC,QAAQ;AAK9B,MAAM,sBAAsB;IAgBjC,YAAsB,IAAe;QAAf,SAAI,GAAJ,IAAI,CAAW;IAAI,CAAC;IAd1C,uBAAuB;IACzB,IAAI,KAAK;QACP,OAAO,YAAY,CAAC,OAAO,CAAE,OAAO,CAAC,IAAI,EAAE,CAAC;IAC9C,CAAC;IAED,iCAAiC;IACjC,IAAI,OAAO;QACT,OAAO;YACL,OAAO,EAAE;gBACP,SAAS,EAAC,IAAI,CAAC,KAAK,CAAC,8CAA8C;aACnE;SACF;IACJ,CAAC;IAIC,gBAAgB;QAEd,MAAM,GAAG,GAAG,GAAI,QAAS,aAAa,CAAC,uCAAsC;QAE7E,yCAAyC;QACzC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAE,GAAG,EAAG,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI;QAC5C,yFAAyF;QACzF,0DAAG,CAAE,CAAC,IAA2C,EAAE,EAAE,CAAC,IAAI,CAAC,UAAU,CAAE,CACxE,CAAC;IAEJ,CAAC;IAED,eAAe,CAAE,MAAc;QAE7B,MAAM,GAAG,GAAG,GAAI,QAAS,aAAa,CAAC,uCAAsC;QAE7E,mDAAmD;QACnD,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAE,GAAG,EAAG,EAAE,MAAM,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC;IAGxD,CAAC;IAED,oBAAoB,CAAE,GAAU,EAAE,MAAc;QAE9C,MAAM,GAAG,GAAG,GAAI,QAAS,eAAe,GAAG,EAAE,CAAC,uCAAsC;QAEpF,mDAAmD;QACnD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAE,GAAG,EAAG,EAAE,MAAM,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC;IAGvD,CAAC;IAED,kBAAkB,CAAE,GAAU;QAE5B,MAAM,GAAG,GAAG,GAAI,QAAS,eAAe,GAAG,EAAE,CAAC,uCAAsC;QAEpF,0CAA0C;QAC1C,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAE,GAAG,EAAG,IAAI,CAAC,OAAO,CAAC;IAG9C,CAAC;;4FA1DU,sBAAsB;yGAAtB,sBAAsB,WAAtB,sBAAsB,mBAFrB,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;ICmBI,qEAA6C;IACzC,wEAAuG;IAAA,uDAAwB;IAAA,4DAAI;IAAA,4DAAK;;;IAArI,0DAA8B;IAA9B,0FAA8B;IAAsE,0DAAwB;IAAxB,gGAAwB;;;IAT3I,qEAA0C;IACtC,uEAA4E;IACxE,+DAA8B;IAC9B,0EAAwB;IAAA,uDACrB;IAAA,2EAA6D;IAAA,uDAAwB;IAAA,4DAAO;IAC/F,4DAAO;IACX,4DAAI;IACJ,wEAA2C;IACvC,iHAC4I;IAEhJ,4DAAK;IACT,4DAAK;;;IAVM,0DAAsB;IAAtB,uEAAsB;IACD,0DACrB;IADqB,yFACrB;IAA6D,0DAAwB;IAAxB,uFAAwB;IAI5D,0DAAe;IAAf,oFAAe;;ACjB5D,MAAM,gBAAgB;IAM7B,mBAAmB;IAEjB,YAAoB,WAA0B,EAAU,cAA8B;QAAlE,gBAAW,GAAX,WAAW,CAAe;QAAU,mBAAc,GAAd,cAAc,CAAgB;QAErF,yCAAyC;QACxC,IAAI,CAAC,OAAO,GAAG,cAAc,CAAC,OAAO,CAAC;IAGxC,CAAC;IAED,QAAQ;IACR,CAAC;;gFAjBU,gBAAgB;gGAAhB,gBAAgB;QDX7B,2EAA4B;QAExB,yEAA4B;QAExB,yEAAyB;QACrB,wEAAoB;QAChB,wEAAyB;QACrB,uEAA4E;QAAA,oEAA4C;QACpH,0EAAwB;QAAA,uDAAmB;QAAA,4DAAO;QAAA,4DAAI;QAC1D,wEAA2C;QACvC,sEAAI;QAAA,wEAAmD;QAAA,mEAAO;QAAA,4DAAI;QAAA,4DAAK;QACvE,sEAAI;QAAA,yEAA4B;QAAA,sEAAU;QAAA,4DAAI;QAAA,4DAAK;QACnD,sEAAI;QAAA,yEAA4B;QAAA,iEAAK;QAAA,4DAAI;QAAA,4DAAK;QAC9C,sEAAI;QAAA,yEAAiC;QAAA,2EAAe;QAAA,4DAAI;QAAA,4DAAK;QAC7D,sEAAI;QAAA,yEAAuB;QAAA,kEAAM;QAAA,4DAAI;QAAA,4DAAK;QAC9C,4DAAK;QACT,4DAAK;QACL,qEAA6B;QAC7B,0EAA0B;QAAA,oEAAQ;QAAA,4DAAK;QAEvC,6GAYK;QAET,4DAAK;QACT,4DAAM;QAEV,4DAAM;QAEV,4DAAQ;;QAhC6F,0DAAyB;QAAzB,mJAAyB;QAC9E,0DAAmB;QAAnB,6FAAmB;QAY9B,2DAAmB;QAAnB,yFAAmB;;;;;;;;;;;;;;AElBxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuD;AAEvD,SAAS;AACkD;AACH;AAEsB;;;AAE9E,MAAM,MAAM,GAAW;IAErB,EAAE,IAAI,EAAC,EAAE,EAAE,UAAU,EAAC,YAAY,EAAG,SAAS,EAAE,MAAM,EAAE;IAExD,+BAA+B;IAC/B,EAAE,IAAI,EAAE,IAAI,EAAE,SAAS,EAAC,0FAAqB,EAAE;CAEhD;AAWM,MAAM,gBAAgB;;gFAAhB,gBAAgB;+FAAhB,gBAAgB;mGAPlB;YACP,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC;YAC5B,uEAAkB;YAClB,oEAAiB;SAClB,EACS,4DAAY;mIAEX,gBAAgB,4EALzB,uEAAkB;QAClB,oEAAiB,aAET,4DAAY;;;;;;;;;;;;;;;;;ACrBjB,MAAM,cAAc;IAH3B;QAKE;;WAEG;QAEI,SAAI,GAAG,EAAE,CAAE;KAuCnB;IArCC,UAAU;QAER,sHAAsH;QAEtH,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,CAAC;IAC7D,CAAC;;4EAbU,cAAc;iGAAd,cAAc,WAAd,cAAc,mBAFb,MAAM;;;;;;;;;;;;;;;;;;;ACH2B;AAGF;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;ACXpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main.js","sourcesContent":["import { Hospital } from './../../../models/hospital.model';\r\nimport { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { HospitalServiceService } from '../../../services/hospital-service.service';\r\nimport Swal from 'sweetalert2';\r\nimport { ModalImagenService } from '../../../services/modal-imagen.service';\r\nimport { delay } from 'rxjs/operators';\r\nimport { BusquedasService } from '../../../services/busquedas.service';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-hospitales',\r\n  templateUrl: './hospitales.component.html',\r\n  styles: [\r\n  ]\r\n})\r\nexport class HospitalesComponent implements OnInit,OnDestroy {\r\n\r\n  public hospitales: Hospital [] = [];\r\n  public cargando: boolean = true;    //para el logo de cargar\r\n  hospitalesTemp :Hospital []= [];\r\n  private imgSubs:Subscription;\r\n\r\n\r\n  constructor( private hospitalService:HospitalServiceService,\r\n    private modalImagenService: ModalImagenService,\r\n    private busquedaService:BusquedasService\r\n    ) { }\r\n\r\n  ngOnDestroy(){\r\n      this.imgSubs.unsubscribe()\r\n                 }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.cargarHospitales();\r\n    //para que se refresque actualice la imagen automaticamente\r\n    this.imgSubs = this.imgSubs = this.modalImagenService.nuevaImagen.\r\n    pipe(\r\n      delay(100)//retardamos un poco pa que de tiempo la carga\r\n    )\r\n    .subscribe(img=> this.cargarHospitales())\r\n  }\r\n\r\n  cargarHospitales(){\r\n    this.cargando = true;\r\n\r\n    this.hospitalService.cargarHospitales().subscribe( resp=>{\r\n\r\n      this.cargando = false;\r\n\r\n      this.hospitales = resp;//almacenamos en el nuestro array la respuesta que viene del backend\r\n\r\n\r\n    })\r\n  }\r\n\r\n  guardarCambios( hospital: Hospital ){\r\n\r\n    this.hospitalService.actualizarHospitales( hospital._id, hospital.nombre ).subscribe(\r\n      resp=>{\r\n        Swal.fire('Actualizado', hospital.nombre,'success')\r\n      }\r\n    )\r\n\r\n  }\r\n\r\n\r\neliminarHospital( hospital:Hospital ){\r\n\r\n//dialogo predefinido en swetAlert2 y adaptado a la aplicacion\r\n    Swal.fire({\r\n      title: '¿Borrar Hospital?',\r\n      text: `Esta a punto de eliminar a ${ hospital.nombre}`,\r\n      icon: 'question',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Si, borrar'\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        this.hospitalService.eliminarHospitales( hospital._id).subscribe(\r\n          resp=>{\r\n            this.cargarHospitales();\r\n            Swal.fire('Borrado', hospital.nombre,'success')\r\n          }\r\n        )\r\n          Swal.fire(\r\n            'Borrado!',\r\n            `${ hospital.nombre } fue eliminado correctamente`,\r\n            'success'\r\n          )\r\n        }\r\n      })\r\n    }\r\n\r\n\r\nasync abrirSwetAlert(){\r\n\r\n         const { value = '' } = await Swal.fire<string>({\r\n           title: 'Crear Hospital',\r\n           text: 'Ingrese el nombre del nuevo hospital',\r\n           input: 'text',\r\n           inputPlaceholder: 'Nombre del hospital',\r\n          showCancelButton:true,\r\n         });\r\n\r\n         if( value.trim().length > 0 ){\r\n            this.hospitalService.crearHospitales( value ).\r\n            subscribe( (resp: any )=>{\r\n               this.hospitales.push ( resp.hospital )//viene del backend\r\n            })\r\n         }\r\n\r\n  }\r\n\r\n  abrirModal( hospital:Hospital){\r\n    this.modalImagenService.abrirModal('hospitales',hospital._id, hospital.img);\r\n\r\n  }\r\n\r\n  buscar ( termino: string ){\r\n    if( termino.length === 0){\r\n      this.cargarHospitales();\r\n      return this.hospitales = this.hospitalesTemp\r\n\r\n    }\r\n    this.busquedaService.buscar('hospitales', termino ).subscribe(\r\n    resp=>\r\n        this.hospitales = resp\r\n      )\r\n\r\n\r\n\r\n  }\r\n}\r\n","<div class=\"row animated fadeIn fast\">\r\n    <div class=\"col-12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-body\">\r\n\r\n                <input type=\"text\" class=\"form-control\" placeholder=\"Buscar hospital\" (keyup)=\"buscar( txtTermino.value )\" #txtTermino>\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"row animated fadeIn fast\" *ngIf=\"cargando\">\r\n    <div class=\"col-12\">\r\n        <div class=\"alert alert-info text-center\" role=\"alert\">\r\n            <h4 class=\"alert-heading\">Cargando</h4>\r\n            <i class=\"fa fa-spin fa-refresh fa-2x\"></i>\r\n            <p class=\"mb-o\">Por favor espere</p>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"row\" *ngIf=\"!cargando\">\r\n    <div class=\"col-12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-body\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-8\">\r\n                        <h4 class=\"card-title\">Hospitales\r\n                            <!--({{ hospitales.length }})-->\r\n                        </h4>\r\n                        <h6 class=\"card-subtitle\">Hospitales registrados en la aplicacion</h6>\r\n                    </div>\r\n                    <div class=\"col\">\r\n                        <div class=\"text-right\">\r\n                            <button class=\"btn btn-primary\" (click)=\"abrirSwetAlert()\">\r\n                    <i class=\"fa fa-hospital-o\"></i>Crear hospital\r\n                  </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <div class=\"table-responsive\">\r\n                    <table class=\"table table-bordered\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th class=\"w-25\">Avatar</th>\r\n                                <th>Nombre</th>\r\n\r\n                                <th class=\"text-nowrap text-center\">Acciones</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr *ngFor=\"let hospital of hospitales\">\r\n                                <!--Nota: imagen es un pipe creado el primer argumento que recibe es\r\n                              hospital.img y el segundo es el tipo 'hospitales'\r\n                            -->\r\n                                <td class=\"text-center\">\r\n                                    <img (click)=\"abrirModal(hospital)\" class=\"img-avatar cursor\" [src]=\" hospital.img | imagen: 'hospitales' \" alt=\"hospital.nombre\">\r\n                                </td>\r\n                                <td>\r\n                                    <input type=\"text\" class=\"form-control\" placeholder=\"Nombre del hospital\" [(ngModel)]=\"hospital.nombre\">\r\n                                </td>\r\n\r\n                                <td class=\"text-nowrap w-15 text-center\">\r\n                                    <a (click)=\"guardarCambios(hospital)\" class=\"cursor\" data-toggle=\"tooltip\" data-original-title=\"Guardar cambios\"> <i class=\"fa fa-pencil text-inverse m-r-10\"></i> </a>\r\n                                    <a (click)=\"eliminarHospital(hospital)\" class=\"cursor\" data-toggle=\"tooltip\" data-original-title=\"Borrar\"> <i class=\"fa fa-close text-danger\"></i> </a>\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { environment } from '../../environments/environment';\r\n\r\nconst base_url = environment.base_url\r\n\r\n@Pipe({\r\n  name: 'imagen'\r\n})\r\nexport class ImagenPipe implements PipeTransform {\r\n\r\n  transform(img: string, tipo: 'usuarios' | 'medicos' | 'hospitales'): string {\r\n\r\n          //si no existe la imagen\r\n          if( !img ) {\r\n            return `${ base_url }/uploads/${tipo}/not-image`;\r\n         }\r\n //si viene de google el path viene con https\r\n         else if(img.includes('https')){\r\n              return img;\r\n         }\r\n//si viene de validacion por email\r\n         else if (img ) {\r\n             return `${ base_url }/uploads/${tipo}/${ img }`;\r\n           } else {\r\n             return `${ base_url }/uploads/${tipo}/not-image`;\r\n           }  }\r\n\r\n}\r\n","import { environment } from './../../environments/environment';\r\n\r\nconst   base_url = environment.base_url;\r\n\r\n\r\nexport class Usuario{\r\n\r\n      constructor(\r\n       public nombre :string,\r\n       public email:string,\r\n       public password?:string,\r\n       public img?:string,\r\n       public role?:'ADMIN_ROLE' | 'USER_ROLE',//tipos de role\r\n       public google?:boolean,\r\n       public uid?:string,\r\n      ){\r\n\r\n      }\r\n\r\n      //si la imagen existe muestrala y sino muestra la imagen por defecto\r\n    get imagenUrl(){\r\n\r\n      //si no existe la imagen\r\n      if( !this.img){\r\n        return `${ base_url }/uploads/usuarios/not-image`;\r\n      }\r\n       //si viene de google el path viene con https\r\n     else if(this.img.includes('https')){\r\n        return this.img;\r\n      }\r\n      //si viene de validacion por email\r\n     else if (this.img ) {\r\n          return `${ base_url }/uploads/usuarios/${ this.img }`;\r\n        } else {\r\n          return `${ base_url }/uploads/usuarios/not-image`;\r\n        }\r\n\r\n      }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { UsuarioService } from '../../services/usuario.service';\r\nimport { Usuario } from '../../models/usuario.model';\r\nimport { Router } from '@angular/router';\r\n\r\ndeclare const google: any;\r\n\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styles: [\r\n  ]\r\n})\r\n\r\nexport class HeaderComponent  {\r\n\r\n   public usuario : Usuario; //variable del tipo del modelo\r\n\r\n    button: any;\r\n\r\n  constructor( private usuarioService: UsuarioService,\r\n                  private router:Router) {\r\n\r\n        this.usuario = usuarioService.usuario;\r\n\r\n\r\n   }\r\n\r\n  //funcion para salir\r\n  logout(){\r\n      this.button = document.getElementById('signout_button');\r\n      this.button.onclick = () => {\r\n      google.accounts.id.disableAutoSelect();\r\n    }\r\n     this.usuarioService.logout();\r\n  }\r\n\r\n //funcion para busqueda global en todas las collections\r\n buscar (termino: string){\r\n\r\n  //si no escribe nada en el input de busqueda salir al dashboard\r\n  if( termino.length === 0 ){\r\n   return;\r\n  }\r\n    //console.log(termino);\r\n    this.router.navigateByUrl(`/dashboard/buscar/${ termino }`);\r\n }\r\n\r\n}\r\n","<!-- Topbar header - style you can find in pages.scss -->\r\n<!-- ============================================================== -->\r\n<header class=\"topbar\">\r\n    <nav class=\"navbar top-navbar navbar-expand-md navbar-light\">\r\n        <!-- ============================================================== -->\r\n        <!-- Logo -->\r\n        <!-- ============================================================== -->\r\n        <div class=\"navbar-header\">\r\n            <a class=\"navbar-brand\" href=\"index.html\">\r\n                <!-- Logo icon --><b>\r\n                            <!--You can put here icon as well // <i class=\"wi wi-sunset\"></i> //-->\r\n                            <!-- Dark Logo icon -->\r\n                            <img src=\"./assets/images/logo-icon.png\" alt=\"homepage\" class=\"dark-logo\" />\r\n                            <!-- Light Logo icon -->\r\n                            <img src=\"./assets/images/logo-light-icon.png\" alt=\"homepage\" class=\"light-logo\" />\r\n                        </b>\r\n                <!--End Logo icon -->\r\n                <!-- Logo text --><span>\r\n                         <!-- dark Logo text -->\r\n                         <img src=\"./assets/images/logo-text.png\" alt=\"homepage\" class=\"dark-logo\" />\r\n                         <!-- Light Logo text -->\r\n                         <img src=\"./assets/images/logo-light-text.png\" class=\"light-logo\" alt=\"homepage\" /></span> </a>\r\n        </div>\r\n        <!-- ============================================================== -->\r\n        <!-- End Logo -->\r\n        <!-- ============================================================== -->\r\n        <div class=\"navbar-collapse\">\r\n            <!-- ============================================================== -->\r\n            <!-- toggle and nav items -->\r\n            <!-- ============================================================== -->\r\n            <ul class=\"navbar-nav mr-auto\">\r\n                <!-- This is  -->\r\n                <li class=\"nav-item\"> <a class=\"nav-link nav-toggler hidden-md-up waves-effect waves-dark\" href=\"javascript:void(0)\"><i class=\"ti-menu\"></i></a> </li>\r\n                <li class=\"nav-item\"> <a class=\"nav-link sidebartoggler hidden-sm-down waves-effect waves-dark\" href=\"javascript:void(0)\"><i class=\"ti-menu\"></i></a> </li>\r\n                <li class=\"nav-item hidden-sm-down\"></li>\r\n            </ul>\r\n            <!-- ============================================================== -->\r\n            <!-- User profile and search -->\r\n            <!-- ============================================================== -->\r\n            <ul class=\"navbar-nav my-lg-0\">\r\n                <!-- ============================================================== -->\r\n                <!-- Search -->\r\n                <!-- ============================================================== -->\r\n                <li class=\"nav-item hidden-xs-down search-box\"> <a class=\"nav-link hidden-sm-down waves-effect waves-dark\" href=\"javascript:void(0)\"><i class=\"ti-search\"></i></a>\r\n                    <form class=\"app-search\" (submit)=\"buscar(txtTermino.value)\">\r\n                        <input type=\"text\" class=\"form-control\" placeholder=\"Buscar medico, hospital o usuario\" #txtTermino>\r\n                        <a class=\"srh-btn\"><i class=\"ti-close\"></i></a>\r\n                    </form>\r\n                </li>\r\n                <!-- ============================================================== -->\r\n                <!-- Comment -->\r\n                <!-- ============================================================== -->\r\n                <li class=\"nav-item dropdown\">\r\n                    <a class=\"nav-link dropdown-toggle waves-effect waves-dark\" href=\"\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\"> <i class=\"mdi mdi-message\"></i>\r\n                        <div class=\"notify\"> <span class=\"heartbit\"></span> <span class=\"point\"></span> </div>\r\n                    </a>\r\n                    <div class=\"dropdown-menu dropdown-menu-right mailbox animated fadeIn\">\r\n                        <ul>\r\n                            <li>\r\n                                <div class=\"drop-title\">Notifications</div>\r\n                            </li>\r\n                            <li>\r\n                                <div class=\"message-center\">\r\n                                    <!-- Message -->\r\n                                    <a href=\"#\">\r\n                                        <div class=\"btn btn-danger btn-circle\"><i class=\"fa fa-link\"></i></div>\r\n                                        <div class=\"mail-contnet\">\r\n                                            <h5>Luanch Admin</h5> <span class=\"mail-desc\">Just see the my new admin!</span> <span class=\"time\">9:30 AM</span> </div>\r\n                                    </a>\r\n                                    <!-- Message -->\r\n                                    <a href=\"#\">\r\n                                        <div class=\"btn btn-success btn-circle\"><i class=\"ti-calendar\"></i></div>\r\n                                        <div class=\"mail-contnet\">\r\n                                            <h5>Event today</h5> <span class=\"mail-desc\">Just a reminder that you have event</span> <span class=\"time\">9:10 AM</span> </div>\r\n                                    </a>\r\n                                    <!-- Message -->\r\n                                    <a href=\"#\">\r\n                                        <div class=\"btn btn-info btn-circle\"><i class=\"ti-settings\"></i></div>\r\n                                        <div class=\"mail-contnet\">\r\n                                            <h5>Settings</h5> <span class=\"mail-desc\">You can customize this template as you want</span> <span class=\"time\">9:08 AM</span> </div>\r\n                                    </a>\r\n                                    <!-- Message -->\r\n                                    <a href=\"#\">\r\n                                        <div class=\"btn btn-primary btn-circle\"><i class=\"ti-user\"></i></div>\r\n                                        <div class=\"mail-contnet\">\r\n                                            <h5>Pavan kumar</h5> <span class=\"mail-desc\">Just see the my admin!</span> <span class=\"time\">9:02 AM</span> </div>\r\n                                    </a>\r\n                                </div>\r\n                            </li>\r\n                            <li>\r\n                                <a class=\"nav-link text-center\" href=\"javascript:void(0);\"> <strong>Check all notifications</strong> <i class=\"fa fa-angle-right\"></i> </a>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </li>\r\n                <!-- ============================================================== -->\r\n                <!-- End Comment -->\r\n                <!-- ============================================================== -->\r\n                <!-- ============================================================== -->\r\n                <!-- Messages -->\r\n                <!-- ============================================================== -->\r\n                <li class=\"nav-item dropdown\">\r\n                    <a class=\"nav-link dropdown-toggle waves-effect waves-dark\" href=\"\" id=\"2\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\"> <i class=\"mdi mdi-email\"></i>\r\n                        <div class=\"notify\"> <span class=\"heartbit\"></span> <span class=\"point\"></span> </div>\r\n                    </a>\r\n                    <div class=\"dropdown-menu mailbox dropdown-menu-right animated fadeIn\" aria-labelledby=\"2\">\r\n                        <ul>\r\n                            <li>\r\n                                <div class=\"drop-title\">You have 4 new messages</div>\r\n                            </li>\r\n                            <li>\r\n                                <div class=\"message-center\">\r\n                                    <!-- Message -->\r\n                                    <a href=\"#\">\r\n                                        <div class=\"user-img\"> <img src=\"./assets/images/users/2.jpg\" alt=\"user\" class=\"img-circle\"> <span class=\"profile-status online pull-right\"></span> </div>\r\n                                        <div class=\"mail-contnet\">\r\n                                            <h5>Pavan kumar</h5> <span class=\"mail-desc\">Just see the my admin!</span> <span class=\"time\">9:30 AM</span> </div>\r\n                                    </a>\r\n                                    <!-- Message -->\r\n                                    <a href=\"#\">\r\n                                        <div class=\"user-img\"> <img src=\"./assets/images/users/2.jpg\" alt=\"user\" class=\"img-circle\"> <span class=\"profile-status busy pull-right\"></span> </div>\r\n                                        <div class=\"mail-contnet\">\r\n                                            <h5>Sonu Nigam</h5> <span class=\"mail-desc\">I've sung a song! See you at</span> <span class=\"time\">9:10 AM</span> </div>\r\n                                    </a>\r\n                                    <!-- Message -->\r\n                                    <a href=\"#\">\r\n                                        <div class=\"user-img\"> <img src=\"./assets/images/users/3.jpg\" alt=\"user\" class=\"img-circle\"> <span class=\"profile-status away pull-right\"></span> </div>\r\n                                        <div class=\"mail-contnet\">\r\n                                            <h5>Arijit Sinh</h5> <span class=\"mail-desc\">I am a singer!</span> <span class=\"time\">9:08 AM</span> </div>\r\n                                    </a>\r\n                                    <!-- Message -->\r\n                                    <a href=\"#\">\r\n                                        <div class=\"user-img\"> <img src=\"./assets/images/users/4.jpg\" alt=\"user\" class=\"img-circle\"> <span class=\"profile-status offline pull-right\"></span> </div>\r\n                                        <div class=\"mail-contnet\">\r\n                                            <h5>Pavan kumar</h5> <span class=\"mail-desc\">Just see the my admin!</span> <span class=\"time\">9:02 AM</span> </div>\r\n                                    </a>\r\n                                </div>\r\n                            </li>\r\n                            <li>\r\n                                <a class=\"nav-link text-center\" href=\"javascript:void(0);\"> <strong>See all e-Mails</strong> <i class=\"fa fa-angle-right\"></i> </a>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </li>\r\n                <!-- ============================================================== -->\r\n                <!-- End Messages -->\r\n                <!-- ============================================================== -->\r\n                <!-- ============================================================== -->\r\n\r\n                <!-- ============================================================== -->\r\n                <!-- End mega menu -->\r\n                <!-- ============================================================== -->\r\n                <!-- ============================================================== -->\r\n                <!-- Language -->\r\n                <!-- ============================================================== -->\r\n                <li class=\"nav-item dropdown\">\r\n                    <a class=\"nav-link dropdown-toggle waves-effect waves-dark\" href=\"\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\"> <i class=\"flag-icon flag-icon-us\"></i></a>\r\n                    <div class=\"dropdown-menu dropdown-menu-right animated fadeIn\"> <a class=\"dropdown-item\" href=\"#\"><i class=\"flag-icon flag-icon-in\"></i> India</a> <a class=\"dropdown-item\" href=\"#\"><i class=\"flag-icon flag-icon-fr\"></i> French</a> <a class=\"dropdown-item\" href=\"#\"><i class=\"flag-icon flag-icon-cn\"></i> China</a>                        <a class=\"dropdown-item\" href=\"#\"><i class=\"flag-icon flag-icon-de\"></i> Dutch</a> </div>\r\n                </li>\r\n                <!-- ============================================================== -->\r\n                <!-- Profile -->\r\n                <!-- ============================================================== -->\r\n                <li class=\"nav-item dropdown\">\r\n                    <a class=\"nav-link dropdown-toggle waves-effect waves-dark\" href=\"\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                        <img [src]=\"usuario.imagenUrl\" alt=\"user\" class=\"profile-pic\" /></a>\r\n                    <div class=\"dropdown-menu dropdown-menu-right animated flipInY\">\r\n                        <ul class=\"dropdown-user\">\r\n                            <li>\r\n                                <div class=\"dw-user-box\">\r\n                                    <!--nota: referrerpolicy=\"no-referrer\" class=\"profile-pic\" en unos de los comentarios decian que habia que poner esto\r\n                                  en la imagen para que se mostrara aunque a mi me funciono sin ello\r\n                                -->\r\n                                    <div class=\"u-img\"><img [src]=\"usuario.imagenUrl\" alt=\"user\" referrerpolicy=\"no-referrer\" class=\"profile-pic\"></div>\r\n                                    <div class=\"u-text\">\r\n                                        <h4>{{usuario.nombre}} </h4>\r\n                                        <p class=\"text-muted\">\r\n                                            <!--usamos un pipe para cortar el email en caso de que sea muy largo-->\r\n                                            {{usuario.email | slice:0:20 }}\r\n                                            <!--si es mayor de 20 pon tres puntitos-->\r\n                                            <!---->{{(usuario.email.length>20)?'...':'' }}\r\n\r\n                                        </p><a href=\"pages-profile.html\" class=\"btn btn-rounded btn-danger btn-sm\">View Profile</a></div>\r\n                                </div>\r\n                            </li>\r\n                            <li role=\"separator\" class=\"divider\"></li>\r\n                            <li><a routerLinkActive=\"active\" routerLink=\"./perfil\"><i class=\"ti-user\"></i> My Profile</a></li>\r\n                            <li><a href=\"#\"><i class=\"ti-wallet\"></i> My Balance</a></li>\r\n                            <li><a href=\"#\"><i class=\"ti-email\"></i> Inbox</a></li>\r\n                            <li role=\"separator\" class=\"divider\"></li>\r\n                            <li><a href=\"#\"><i class=\"ti-settings\"></i> Account Setting</a></li>\r\n                            <li role=\"separator\" class=\"divider\"></li>\r\n                            <li>\r\n                                <a (click)=\"logout()\" id=\"signout_button\" class=\"cursor g_id_signout\">\r\n                                    <i class=\"fa fa-power-off\"></i> Logout\r\n                                </a>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    </nav>\r\n</header>\r\n<!-- ============================================================== -->\r\n<!-- End Topbar header -->","import { Component, OnInit } from '@angular/core';\r\nimport { SettingdService } from '../services/settingd.service';\r\nimport { SidebarService } from '../services/sidebar.service';\r\n\r\n/*esta funcion esta <script src=\"./assets/js/custom.js\"></script> en el index\r\nen el custom.js se ha encapsulado toda la logica en la funcion customItemFunction() para\r\npoder ejecutarla cuando se cargue la pagina y asi poder mostrar el componente correctamente\r\nuna vez que se hace el login\r\n\r\n*/\r\ndeclare function customInitFunction();\r\n\r\n\r\n@Component({\r\n  selector: 'app-pages',\r\n  templateUrl: './pages.component.html',\r\n  styles: [\r\n  ]\r\n})\r\nexport class PagesComponent implements OnInit {\r\n\r\n\r\n\r\n  constructor( private SettingdService: SettingdService,\r\n              private sideService: SidebarService) { }\r\n\r\n  ngOnInit(): void {\r\n       customInitFunction();\r\n       this.sideService.cargarMenu();//iniciamos el menu con lo que viene del SidebarService\r\n\r\n}\r\n}\r\n","<div id=\"main-wrapper\">\r\n\r\n    <app-header></app-header>\r\n\r\n    <app-sidebar></app-sidebar>\r\n\r\n    <div class=\"page-wrapper\">\r\n\r\n        <div class=\"container-fluid\">\r\n\r\n            <app-breadcrumbs></app-breadcrumbs>\r\n\r\n\r\n            <!--Sistema de rutas -->\r\n\r\n            <router-outlet></router-outlet>\r\n\r\n            <!--<div class=\"row\">\r\n                <div class=\"col-12\">\r\n                    <div class=\"card\">\r\n                        <div class=\"card-body\">\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>-->\r\n        </div>\r\n        <!-- footer -->\r\n        <!-- ============================================================== -->\r\n        <footer class=\"footer\">\r\n            © 2022 Admin Pro by wrappixel.com\r\n        </footer>\r\n        <!-- ============================================================== -->\r\n        <!-- End footer -->\r\n    </div>\r\n</div>\r\n<app-modal-imagen></app-modal-imagen>","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  base_url:'http://localhost:3005/api'\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-progress',\r\n  templateUrl: './progress.component.html',\r\n  styleUrls: [ './progress.component.css',\r\n  ]\r\n})\r\nexport class ProgressComponent  {\r\n\r\n\r\n progreso1: number = 25;\r\n progreso2: number = 45;\r\n\r\n //para concatenar el valor del progreso a % y utilizarlo en el html para establecer un ancho\r\n get getProgreso1(){\r\n  return `${ this.progreso1}%`\r\n}\r\n//para concatenar el valor del progreso a % y utilizarlo en el html para establecer un ancho\r\nget getProgreso2(){\r\n  return `${ this.progreso2}%`\r\n}\r\n\r\n\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col-12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-body\">\r\n\r\n                <h4 class=\"card-title\">Default Progress bars {{progreso1}}</h4>\r\n\r\n                <!--[style.width]=\"getProgreso1\" se establece un ancho utilizando una propiedad de .ts-->\r\n                <div class=\"progress m-t-20 \">\r\n                    <div class=\"progress-bar bg-primary progress-bar-striped active \" style=\" height:15px;\" [style.width]=\"getProgreso1\" role=\"progressbar\">\r\n\r\n                    </div>\r\n                </div>\r\n\r\n                <!--[style.width]=\"getProgreso1\" se establece un ancho utilizando una propiedad de .ts-->\r\n\r\n                <div class=\"progress m-t-20 \">\r\n                    <div class=\"progress-bar bg-info progress-bar-striped active \" style=\" height:15px;\" [style.width]=\"getProgreso2\" role=\"progressbar\">\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"row\">\r\n    <div class=\"col-6\">\r\n        <div class=\"card\">\r\n            <div class=\"card-body\">\r\n\r\n                <!--(valorSalida) = \"progreso1 = $event\" : asignamos directamente en el @Output el valor que queremos\r\n                 [progreso]=\"45\" : Valor para el @input-->\r\n                <app-incrementador (valorSalida)=\"progreso1 = $event\" [progreso]=\"progreso1\"></app-incrementador>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-6\">\r\n        <div class=\"card\">\r\n            <div class=\"card-body\">\r\n\r\n                <!--(valorSalida) = \"progreso2 = $event\" : asignamos directamente en el @Output el valor que queremos\r\n                  btnClass=\"btn btn-info\" : utilizamos un @Input en un ngClass\r\n               -->\r\n                <app-incrementador (valorSalida)=\"progreso2 = $event\" [progreso]=\"progreso2\" [btnClass]=\"'btn-info'\"></app-incrementador>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Routes, RouterModule } from '@angular/router';\r\nimport { NgModule } from '@angular/core';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { DashboardComponent } from '../pages/dashboard/dashboard.component';\r\n\r\nconst routes: Routes = [\r\n\r\n // estas rutas tienen distinto template de las anteriores\r\n\r\n { path: 'login',component: LoginComponent },\r\n { path: 'register',component: RegisterComponent },\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AuthRoutingModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { environment } from '../../environments/environment';\r\n\r\nconst base_url = environment.base_url;\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FileUploadService {\r\n\r\n\r\n  constructor() { }\r\n\r\n  async actualizarFoto(\r\n    archivo:File,\r\n    tipo: 'usuarios'|'medicos'|'hospitales',\r\n    id:string\r\n  )\r\n  {\r\n\r\n    try {\r\n\r\n      const url = `${ base_url }/uploads/${ tipo }/${ id }`;\r\n\r\n      const formData = new FormData()//propio de javascript(mirar el body en postman)\r\n      formData.append('imagen', archivo)//se añaden las propiedades qe van en el body de la peticion\r\n\r\n      //fetch propio de javascript\r\n      const resp = await fetch( url,{\r\n        method: 'PUT',\r\n        headers:{\r\n          'x-token':localStorage.getItem('token')||''\r\n        },\r\n        body: formData\r\n      })\r\n\r\n      const data = await resp.json();//captamos la respuesta del backend\r\n      //si la data es ok\r\n       if (data.ok) {\r\n        return data.nombreArchivo;//esto viene del backend\r\n       } else {\r\n        console.log(data.msg);\r\n        return false;\r\n       }\r\n\r\n\r\n    } catch (error) {\r\n      console.log( error)\r\n      return false;\r\n    }\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { interval, Observable, Subscription } from 'rxjs';\r\nimport { filter, map, retry, take } from 'rxjs/operators';\r\n\r\n\r\n@Component({\r\n  selector: 'app-rxjs',\r\n  templateUrl: './rxjs.component.html',\r\n  styles: [\r\n  ]\r\n})\r\nexport class RxjsComponent implements OnDestroy {\r\n\r\n  //utilizamos una propiedad para poder destruir el observable\r\n  public intervalSubs: Subscription;\r\n\r\n  constructor() {\r\n\r\n   /* this.retornaObservable().pipe(\r\n      retry(1)//intentara ejecutar el observable  1 vez en caso de error\r\n    ).\r\n    subscribe(\r\n       valor => console.log ( 'valor ' , valor),//next del obervable\r\n       err => console.warn ( 'error', err ),//error del obervable\r\n       ()=>console.info ( \"Obd$ terminado \")//complete del obervable\r\n    );\r\n*/\r\n    this.intervalSubs =  this.retornaIntervalo().subscribe(\r\n      console.log\r\n     )\r\n  }\r\n\r\n //cuando salgo del componente se destruye el observable\r\n ngOnDestroy(): void {\r\n\r\n     this.intervalSubs.unsubscribe()\r\n }\r\n\r\n\r\nretornaIntervalo(){\r\n\r\n  //NOta:hay que tener en cuenta el orden de los operators\r\n\r\n   const interval$ = interval( 100 )\r\n\r\n   .pipe( //creacion de un intervalo donde el valor será cada periodo\r\n\r\n    take(10), //tomamos los 10 primeros\r\n\r\n    map( valor=> { return valor + 1 }), // indicamos que empieze por el 1\r\n\r\n    filter( valor =>( valor % 2 === 0) ? true: false ), // filtra los valores que son pares\r\n\r\n\r\n    );\r\n\r\n   return interval$\r\n}\r\n\r\n\r\n\r\n\r\n  retornaObservable(): Observable<number>{\r\n\r\n    let i = -1;\r\n\r\n\r\n    const obd$ = new Observable<number>( observe => {\r\n\r\n\r\n     const intervalo = setInterval (()=>{\r\n\r\n        i++;\r\n         observe.next ( i );//lo proximo que emite el observable\r\n\r\n         if( i === 4 ){\r\n\r\n          clearInterval ( intervalo );\r\n\r\n          observe.complete()//completa el obervable y finaliza\r\n         }\r\n\r\n         if( i === 2){\r\n          console.log( 'error en i ==2 ')\r\n          observe.error( \"llego al valor de 2 \"); // emite un error aqui\r\n         }\r\n\r\n      },1000)\r\n    });\r\n\r\n    return obd$\r\n\r\n  }\r\n\r\n\r\n}\r\n","<p>rxjs works!</p>\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-nopagesfound',\r\n  templateUrl: './nopagesfound.component.html',\r\n  styleUrls: [ './nopagesfound.component.css'\r\n  ]\r\n})\r\nexport class NopagesfoundComponent  {\r\n\r\n  year = new Date().getFullYear();\r\n\r\n\r\n}\r\n","<!-- ============================================================== -->\r\n<!-- Main wrapper - style you can find in pages.scss -->\r\n<!-- ============================================================== -->\r\n<section id=\"wrapper\" class=\"error-page\">\r\n    <div class=\"error-box\">\r\n        <div class=\"error-body text-center\">\r\n            <h1>404</h1>\r\n            <h3 class=\"text-uppercase\">Page Not Found !</h3>\r\n            <p class=\"text-muted m-t-30 m-b-30\">YOU SEEM TO BE TRYING TO FIND HIS WAY HOME</p>\r\n            <a href=\"index.html\" class=\"btn btn-info btn-rounded waves-effect waves-light m-b-40\">Back to home</a> </div>\r\n        <footer class=\"footer text-center\">© {{year}} Admin Pro.</footer>\r\n    </div>\r\n</section>\r\n<!-- ============================================================== -->\r\n<!-- End Wrapper -->\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ModalImagenService } from '../../services/modal-imagen.service';\r\nimport { FileUploadService } from '../../services/file-upload.service';\r\nimport Swal from 'sweetalert2';\r\nimport { UsuarioService } from '../../services/usuario.service';\r\n\r\n@Component({\r\n  selector: 'app-modal-imagen',\r\n  templateUrl: './modal-imagen.component.html',\r\n  styles: [\r\n  ]\r\n})\r\nexport class ModalImagenComponent implements OnInit {\r\n\r\n  public imagenSubir:File;\r\n  public imagenTemp:any;\r\n\r\n  constructor(public modalImagenService:ModalImagenService,\r\n               public fileUploadService:FileUploadService,\r\n               public usuarioService:UsuarioService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  cerrarModal(){\r\n    this.imagenTemp = null;\r\n    this.modalImagenService.cerrarModal();\r\n  }\r\n\r\n  ///esta funcion nos sirve para cargar la imagen previa antes de hacer el cambio y mostrarla en pantalla\r\n  cambiarImagen(file:File){\r\n\r\n    this.imagenSubir = file;//variable de tipo file\r\n\r\n    if ( !file)//si no hay imagen no la cargues\r\n    {\r\n      return this.imagenTemp = null;\r\n    }\r\n\r\n    const reader = new FileReader();//funcion propia de javascrit\r\n    reader.readAsDataURL( file );\r\n    reader.onloadend=()=>{\r\n      this.imagenTemp = reader.result\r\n    }\r\n  }\r\n\r\n  subirImagen(){\r\n    const id = this.modalImagenService.id;\r\n    const tipo = this.modalImagenService.tipo;\r\n\r\n    //le pasamos a la funcion actualizarFoto del servicio los argumentos que nesecita\r\n    this.fileUploadService.actualizarFoto( this.imagenSubir, tipo , id).\r\n\r\n    //si se va actualizar la imagen del usuario que esta activo en ese momento actualizala en todos lados automaticamente\r\n    then( img => {\r\n       if (id === this.usuarioService.uid) {\r\n        this.usuarioService.usuario.img = img\r\n\r\n       }\r\n      console.log(id);\r\n      console.log(this.usuarioService.uid);\r\n\r\n        //muestra un modal\r\n        Swal.fire('Guardado' , 'Imagen actualizada', 'success')//viene del sweetalert2\r\n        //emitimos la imagen en este observable para que se actualice automaticamente\r\n        this.modalImagenService.nuevaImagen.emit( img );\r\n\r\n        this.cerrarModal();\r\n     }).catch(err=>{\r\n\r\n      Swal.fire('Error' , err.error.msg, 'error')//viene del sweetalert2\r\n\r\n     })\r\n\r\n  }\r\n}\r\n","<div class=\"fotoModalImagen animated fadeIn fast\" [class.oculto]=\"modalImagenService.ocultarModal\">\r\n    <!-- style=\"display: block; hace visible el modal-->\r\n    <div id=\"responsive-modal\" class=\"modal fade show\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\" style=\"display: block;\">\r\n\r\n        <div class=\"modal-dialog\">\r\n            <div class=\"modal-content\">\r\n                <div class=\"modal-header\">\r\n                    <h4 class=\"modal-title\">Cargar imagen</h4>\r\n                    <button type=\"button\" (click)=\"cerrarModal()\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\">×</button>\r\n                </div>\r\n                <div class=\"modal-body\">\r\n                    <h3>Seleccione una imagen</h3>\r\n\r\n                    <div class=\"text-center\">\r\n                        <img *ngIf=\"!imagenTemp\" [src]=\"modalImagenService.img\" class=\"img-avatar\">\r\n                        <img *ngIf=\"imagenTemp\" [src]=\"imagenTemp\" class=\"img-avatar\">\r\n\r\n                    </div>\r\n                    <br>\r\n\r\n                    <!--$event.target.files[0] en el cosole.log del event que hay en la funcion cambiarImagen\r\n  se puede ver que en la primera posicion de files esta la imagen-->\r\n                    <input type=\"file\" (change)=\"cambiarImagen($event.target.files[0])\">\r\n                </div>\r\n                <div class=\"modal-footer\">\r\n                    <button type=\"button\" (click)=\"cerrarModal()\" class=\"btn btn-default waves-effect\" data-dismiss=\"modal\">Cancelar</button>\r\n                    <button type=\"button\" (click)=\"subirImagen()\" class=\"btn btn-danger waves-effect waves-light\">Actualizar foto</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { environment } from '../../environments/environment';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\nimport { Medico } from '../models/medicos.model';\r\n\r\nconst base_url = environment.base_url\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MedicosService {\r\n\r\n\r\n    //Para extraer el token\r\nget token():string{\r\n  return localStorage.getItem( 'token') || '';\r\n}\r\n\r\n\r\n  //para extraer los headers(token)\r\nget headers(){\r\n  return {\r\n    headers: {\r\n      'x-token':this.token //el this.token esta en la funcion get token()\r\n     }\r\n   }\r\n}\r\n\r\n  constructor( private http:HttpClient) { }\r\n\r\n  cargarMedicos(){\r\n\r\n    const url = `${ base_url}/medicos`//ruta definida en el backend(postman)\r\n\r\n    //retornamos la ruta y los headers(token)\r\n    return this.http.get( url ,this.headers)\r\n    .pipe(\r\n      //para crear una instancia del modelo de usuario que acceda a sus propiedades y sus metodos\r\n      map((resp: {ok: boolean, medicos: Medico[]} )=> resp.medicos)\r\n    )\r\n      }\r\n\r\n cargarMedicoPorID( id ){\r\n\r\n  const url = `${ base_url }/medicos/${ id }`;//ruta definida en el backend(postman)\r\n\r\n   //retornamos la ruta , la data y los headers(token)\r\n   return this.http.get( url , this.headers).pipe(\r\n    //para crear una instancia del modelo de usuario que acceda a sus propiedades y sus metodos\r\n    map((resp: {ok: boolean, medico: Medico} )=> resp.medico)\r\n  )\r\n\r\n }\r\n\r\n crearMedico( medico: { nombre:string, hospital:string } ){\r\n\r\n        const url = `${ base_url }/medicos`;//ruta definida en el backend(postman)\r\n\r\n        //retornamos la ruta , la data y los headers(token)\r\n        return this.http.post( url ,  medico , this.headers)\r\n\r\n\r\n      }\r\n\r\n\r\nactualizarMedico( medico: Medico){\r\n\r\n        const url = `${ base_url }/medicos/${ medico._id }`;//ruta definida en el backend(postman)\r\n\r\n        //retornamos la ruta , la data y los headers(token)\r\n        return this.http.put( url ,  medico , this.headers)\r\n\r\n\r\n      }\r\n\r\neliminarMedico( _id:string ){\r\n\r\n        const url = `${ base_url }/medicos/${_id}`;//ruta definida en el backend(postman)\r\n\r\n        //retornamos la ruta  y los headers(token)\r\n        return this.http.delete( url , this.headers)\r\n\r\n\r\n      }\r\n\r\n  }\r\n\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { SettingdService } from '../../services/settingd.service';\r\n\r\n@Component({\r\n  selector: 'app-account-setting',\r\n  templateUrl: './account-setting.component.html',\r\n  styles: [\r\n  ]\r\n})\r\nexport class AccountSettingComponent implements OnInit {\r\n\r\n  //Seleccionamos el elemento del DOM por su id\r\n\r\n  public linkTheme = document.querySelector( '#theme' );\r\n\r\n\r\n  public links: NodeListOf<Element> ;\r\n\r\n\r\n  constructor( private settingService:SettingdService) {\r\n   }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.settingService.checkCurrentTheme()\r\n  }\r\n\r\n\r\n  changeTheme( theme:string){\r\n\r\n    this.settingService.changeTheme( theme)\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col-4\">\r\n        <div class=\"card\">\r\n            <div class=\"card-body\">\r\n\r\n                <h4>Seleccion el tema</h4>\r\n                <div class=\"r-panel-body\">\r\n                    <ul id=\"themecolors\" class=\"m-t-20\">\r\n                        <li><b>Con el sidebar claro</b></li>\r\n                        <li><a (click)=\"changeTheme('default')\" data-theme=\"default\" class=\"selector default-theme working\">1</a></li>\r\n                        <li><a (click)=\"changeTheme('green')\" data-theme=\"green\" class=\"selector green-theme\">2</a></li>\r\n                        <li><a (click)=\"changeTheme('red')\" data-theme=\"red\" class=\"selector red-theme\">3</a></li>\r\n                        <li><a (click)=\"changeTheme('blue')\" data-theme=\"blue\" class=\"selector blue-theme\">4</a></li>\r\n                        <li><a (click)=\"changeTheme('purple')\" data-theme=\"purple\" class=\"selector purple-theme\">5</a></li>\r\n                        <li><a (click)=\"changeTheme('megna')\" data-theme=\"megna\" class=\"selector megna-theme\">6</a></li>\r\n\r\n                        <li class=\"d-block m-t-30\"><b>Con el sidebar oscuro</b></li>\r\n                        <li><a (click)=\"changeTheme('default-dark')\" data-theme=\"default-dark\" class=\"selector default-dark-theme\">1</a></li>\r\n                        <li><a (click)=\"changeTheme('green-dark')\" data-theme=\"green-dark\" class=\"selector green-dark-theme\">2</a></li>\r\n                        <li><a (click)=\"changeTheme('red-dark')\" data-theme=\"red-dark\" class=\"selector red-dark-theme\">3</a></li>\r\n                        <li><a (click)=\"changeTheme('blue-dark')\" data-theme=\"blue-dark\" class=\"selector blue-dark-theme\">4</a></li>\r\n                        <li><a (click)=\"changeTheme('purple-dark')\" data-theme=\"purple-dark\" class=\"selector purple-dark-theme\">5</a></li>\r\n                        <li><a (click)=\"changeTheme('megna-dark')\" data-theme=\"megna-dark\" class=\"selector megna-dark-theme\">6</a></li>\r\n                    </ul>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { BreadcrumbsComponent } from './breadcrumbs/breadcrumbs.component';\r\nimport { SidebarComponent } from './sidebar/sidebar.component';\r\nimport { HeaderComponent } from './header/header.component';\r\nimport { AppRoutingModule } from '../app-routing.module';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    BreadcrumbsComponent,\r\n    SidebarComponent,\r\n    HeaderComponent,\r\n\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    FormsModule\r\n  ],\r\n  exports:[\r\n    BreadcrumbsComponent,\r\n    SidebarComponent,\r\n    HeaderComponent,\r\n\r\n  ]\r\n})\r\nexport class SharedModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { UsuarioService } from '../../services/usuario.service';\r\nimport { Usuario } from '../../models/usuario.model';\r\nimport { FileUploadService } from '../../services/file-upload.service';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-perfil',\r\n  templateUrl: './perfil.component.html',\r\n  styles: [\r\n  ]\r\n})\r\nexport class PerfilComponent implements OnInit {\r\n\r\n  public perfilForm: FormGroup;\r\n  public usuario: Usuario;//viene del modelo de usuario\r\n  public imagenSubir:File;\r\n  public imagenTemp:any;\r\n\r\n  constructor( private fb: FormBuilder,\r\n    private usuarioService: UsuarioService,\r\n    private fileUploadService: FileUploadService\r\n    ) {\r\n\r\n      this.usuario = usuarioService.usuario;\r\n\r\n     }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.perfilForm = this.fb.group({\r\n        nombre:[ this.usuario.nombre , Validators.required],\r\n        email:[this.usuario.email , [ Validators.required, Validators.email ]]\r\n    })\r\n  }\r\n\r\n  actualizarPerfil(){\r\n\r\n    //se manda el valor de los campos del form como argumento\r\n    this.usuarioService.actualizarPerfil( this.perfilForm.value).subscribe(resp=>{\r\n\r\n      const { nombre, email } = this.perfilForm.value; //se destructura los campos del formulario\r\n\r\n      //se le asigna la destructuracion para que aparezca la actualizacion en todas partes automaticamente\r\n       this.usuario.nombre = nombre;\r\n       this.usuario.email = email;\r\n\r\n      //muestra un modal\r\n       Swal.fire('Guardado' , 'Cambios guardados', 'success')//viene del sweetalert2\r\n\r\n    },(err)=>{\r\n\r\n      Swal.fire('Error' , err.error.msg, 'error')//viene del sweetalert2\r\n\r\n    })\r\n\r\n  }\r\n\r\n\r\n  ///esta funcion nos sirve para cargar la imagen previa antes de hacer el cambio y mostrarla en pantalla\r\n  cambiarImagen(file:File){\r\n\r\n    this.imagenSubir = file;//variable de tipo file\r\n\r\n    if ( !file)//si no hay imagen no la cargues\r\n    {\r\n      return this.imagenTemp = null;\r\n    }\r\n\r\n    const reader = new FileReader();//funcion propia de javascrit\r\n    reader.readAsDataURL( file );\r\n    reader.onloadend=()=>{\r\n      this.imagenTemp = reader.result\r\n    }\r\n  }\r\n\r\n  subirImagen(){\r\n    //le pasamos a la funcion actualizarFoto del servicio los argumentos que nesecita\r\n    this.fileUploadService.actualizarFoto(this.imagenSubir,'usuarios',this.usuario.uid).\r\n    then( img => {\r\n      this.usuario.img = img\r\n        //muestra un modal\r\n        Swal.fire('Guardado' , 'Imagen actualizada', 'success')//viene del sweetalert2\r\n     }).catch(err=>{\r\n\r\n      Swal.fire('Error' , err.error.msg, 'error')//viene del sweetalert2\r\n\r\n     })\r\n\r\n  }\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col-md-6\">\r\n        <div class=\"card\">\r\n            <div class=\"card-body\">\r\n                <h4 class=\"card-title\">Mi perfil de usuario</h4>\r\n                <h6 class=\"card-subtitle\">Ajustes</h6>\r\n                <form class=\"form p-t-20\" [formGroup]=\"perfilForm\" (ngSubmit)=\"actualizarPerfil()\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"exampleInputuname\">User Name</label>\r\n                        <div class=\"input-group\">\r\n                            <div class=\"input-group-addon\"><i class=\"ti-user\"></i></div>\r\n                            <input type=\"text\" class=\"form-control\" id=\"exampleInputuname\" placeholder=\"Nombre del usuario\" formControlName=\"nombre\">\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"exampleInputEmail1\">Email address</label>\r\n                        <div class=\"input-group\">\r\n                            <div class=\"input-group-addon\"><i class=\"ti-email\"></i></div>\r\n                            <!-- [readOnly]=\"usuario.google\" solo muestralo si es true-->\r\n                            <input type=\"email\" class=\"form-control\" id=\"exampleInputEmail1\" placeholder=\"email\" formControlName=\"email\" [readOnly]=\"usuario.google\">\r\n                        </div>\r\n                    </div>\r\n\r\n                    <button type=\"submit\" [disabled]=\"perfilForm.invalid\" class=\"btn btn-block btn-success waves-effect waves-light m-r-10\">\r\n                    <i class=\"fa fa-save\"></i>\r\n                    Guardar cambios\r\n                  </button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-md-6\">\r\n        <div class=\"card\">\r\n            <div class=\"card-body\">\r\n                <h4 class=\"card-title\">Avatar</h4>\r\n                <h6 class=\"card-subtitle\">Imagen del usuario</h6>\r\n                <div class=\"text-center\">\r\n                    <img *ngIf=\"!imagenTemp\" [src]=\"usuario.imagenUrl\" class=\"img-avatar\">\r\n                    <img *ngIf=\"imagenTemp\" [src]=\"imagenTemp\" class=\"img-avatar\">\r\n\r\n                </div>\r\n                <br>\r\n\r\n                <!--$event.target.files[0] en el cosole.log del event que hay en la funcion cambiarImagen\r\nse puede ver que en la primera posicion de files esta la imagen-->\r\n                <input type=\"file\" (change)=\"cambiarImagen($event.target.files[0])\">\r\n\r\n                <br><br>\r\n\r\n                <button type=\"button\" [disabled]=\"!imagenSubir\" (click)=\"subirImagen()\" class=\"btn btn-block btn-success waves-effect waves-light m-r-10\">\r\n                  <i class=\"fa fa-save\"></i>\r\n                  Cambiar imagen\r\n                </button>\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","var map = {\n\t\"./af\": \"K/tc\",\n\t\"./af.js\": \"K/tc\",\n\t\"./ar\": \"jnO4\",\n\t\"./ar-dz\": \"o1bE\",\n\t\"./ar-dz.js\": \"o1bE\",\n\t\"./ar-kw\": \"Qj4J\",\n\t\"./ar-kw.js\": \"Qj4J\",\n\t\"./ar-ly\": \"HP3h\",\n\t\"./ar-ly.js\": \"HP3h\",\n\t\"./ar-ma\": \"CoRJ\",\n\t\"./ar-ma.js\": \"CoRJ\",\n\t\"./ar-sa\": \"gjCT\",\n\t\"./ar-sa.js\": \"gjCT\",\n\t\"./ar-tn\": \"bYM6\",\n\t\"./ar-tn.js\": \"bYM6\",\n\t\"./ar.js\": \"jnO4\",\n\t\"./az\": \"SFxW\",\n\t\"./az.js\": \"SFxW\",\n\t\"./be\": \"H8ED\",\n\t\"./be.js\": \"H8ED\",\n\t\"./bg\": \"hKrs\",\n\t\"./bg.js\": \"hKrs\",\n\t\"./bm\": \"p/rL\",\n\t\"./bm.js\": \"p/rL\",\n\t\"./bn\": \"kEOa\",\n\t\"./bn-bd\": \"loYQ\",\n\t\"./bn-bd.js\": \"loYQ\",\n\t\"./bn.js\": \"kEOa\",\n\t\"./bo\": \"0mo+\",\n\t\"./bo.js\": \"0mo+\",\n\t\"./br\": \"aIdf\",\n\t\"./br.js\": \"aIdf\",\n\t\"./bs\": \"JVSJ\",\n\t\"./bs.js\": \"JVSJ\",\n\t\"./ca\": \"1xZ4\",\n\t\"./ca.js\": \"1xZ4\",\n\t\"./cs\": \"PA2r\",\n\t\"./cs.js\": \"PA2r\",\n\t\"./cv\": \"A+xa\",\n\t\"./cv.js\": \"A+xa\",\n\t\"./cy\": \"l5ep\",\n\t\"./cy.js\": \"l5ep\",\n\t\"./da\": \"DxQv\",\n\t\"./da.js\": \"DxQv\",\n\t\"./de\": \"tGlX\",\n\t\"./de-at\": \"s+uk\",\n\t\"./de-at.js\": \"s+uk\",\n\t\"./de-ch\": \"u3GI\",\n\t\"./de-ch.js\": \"u3GI\",\n\t\"./de.js\": \"tGlX\",\n\t\"./dv\": \"WYrj\",\n\t\"./dv.js\": \"WYrj\",\n\t\"./el\": \"jUeY\",\n\t\"./el.js\": \"jUeY\",\n\t\"./en-au\": \"Dmvi\",\n\t\"./en-au.js\": \"Dmvi\",\n\t\"./en-ca\": \"OIYi\",\n\t\"./en-ca.js\": \"OIYi\",\n\t\"./en-gb\": \"Oaa7\",\n\t\"./en-gb.js\": \"Oaa7\",\n\t\"./en-ie\": \"4dOw\",\n\t\"./en-ie.js\": \"4dOw\",\n\t\"./en-il\": \"czMo\",\n\t\"./en-il.js\": \"czMo\",\n\t\"./en-in\": \"7C5Q\",\n\t\"./en-in.js\": \"7C5Q\",\n\t\"./en-nz\": \"b1Dy\",\n\t\"./en-nz.js\": \"b1Dy\",\n\t\"./en-sg\": \"t+mt\",\n\t\"./en-sg.js\": \"t+mt\",\n\t\"./eo\": \"Zduo\",\n\t\"./eo.js\": \"Zduo\",\n\t\"./es\": \"iYuL\",\n\t\"./es-do\": \"CjzT\",\n\t\"./es-do.js\": \"CjzT\",\n\t\"./es-mx\": \"tbfe\",\n\t\"./es-mx.js\": \"tbfe\",\n\t\"./es-us\": \"Vclq\",\n\t\"./es-us.js\": \"Vclq\",\n\t\"./es.js\": \"iYuL\",\n\t\"./et\": \"7BjC\",\n\t\"./et.js\": \"7BjC\",\n\t\"./eu\": \"D/JM\",\n\t\"./eu.js\": \"D/JM\",\n\t\"./fa\": \"jfSC\",\n\t\"./fa.js\": \"jfSC\",\n\t\"./fi\": \"gekB\",\n\t\"./fi.js\": \"gekB\",\n\t\"./fil\": \"1ppg\",\n\t\"./fil.js\": \"1ppg\",\n\t\"./fo\": \"ByF4\",\n\t\"./fo.js\": \"ByF4\",\n\t\"./fr\": \"nyYc\",\n\t\"./fr-ca\": \"2fjn\",\n\t\"./fr-ca.js\": \"2fjn\",\n\t\"./fr-ch\": \"Dkky\",\n\t\"./fr-ch.js\": \"Dkky\",\n\t\"./fr.js\": \"nyYc\",\n\t\"./fy\": \"cRix\",\n\t\"./fy.js\": \"cRix\",\n\t\"./ga\": \"USCx\",\n\t\"./ga.js\": \"USCx\",\n\t\"./gd\": \"9rRi\",\n\t\"./gd.js\": \"9rRi\",\n\t\"./gl\": \"iEDd\",\n\t\"./gl.js\": \"iEDd\",\n\t\"./gom-deva\": \"qvJo\",\n\t\"./gom-deva.js\": \"qvJo\",\n\t\"./gom-latn\": \"DKr+\",\n\t\"./gom-latn.js\": \"DKr+\",\n\t\"./gu\": \"4MV3\",\n\t\"./gu.js\": \"4MV3\",\n\t\"./he\": \"x6pH\",\n\t\"./he.js\": \"x6pH\",\n\t\"./hi\": \"3E1r\",\n\t\"./hi.js\": \"3E1r\",\n\t\"./hr\": \"S6ln\",\n\t\"./hr.js\": \"S6ln\",\n\t\"./hu\": \"WxRl\",\n\t\"./hu.js\": \"WxRl\",\n\t\"./hy-am\": \"1rYy\",\n\t\"./hy-am.js\": \"1rYy\",\n\t\"./id\": \"UDhR\",\n\t\"./id.js\": \"UDhR\",\n\t\"./is\": \"BVg3\",\n\t\"./is.js\": \"BVg3\",\n\t\"./it\": \"bpih\",\n\t\"./it-ch\": \"bxKX\",\n\t\"./it-ch.js\": \"bxKX\",\n\t\"./it.js\": \"bpih\",\n\t\"./ja\": \"B55N\",\n\t\"./ja.js\": \"B55N\",\n\t\"./jv\": \"tUCv\",\n\t\"./jv.js\": \"tUCv\",\n\t\"./ka\": \"IBtZ\",\n\t\"./ka.js\": \"IBtZ\",\n\t\"./kk\": \"bXm7\",\n\t\"./kk.js\": \"bXm7\",\n\t\"./km\": \"6B0Y\",\n\t\"./km.js\": \"6B0Y\",\n\t\"./kn\": \"PpIw\",\n\t\"./kn.js\": \"PpIw\",\n\t\"./ko\": \"Ivi+\",\n\t\"./ko.js\": \"Ivi+\",\n\t\"./ku\": \"JCF/\",\n\t\"./ku.js\": \"JCF/\",\n\t\"./ky\": \"lgnt\",\n\t\"./ky.js\": \"lgnt\",\n\t\"./lb\": \"RAwQ\",\n\t\"./lb.js\": \"RAwQ\",\n\t\"./lo\": \"sp3z\",\n\t\"./lo.js\": \"sp3z\",\n\t\"./lt\": \"JvlW\",\n\t\"./lt.js\": \"JvlW\",\n\t\"./lv\": \"uXwI\",\n\t\"./lv.js\": \"uXwI\",\n\t\"./me\": \"KTz0\",\n\t\"./me.js\": \"KTz0\",\n\t\"./mi\": \"aIsn\",\n\t\"./mi.js\": \"aIsn\",\n\t\"./mk\": \"aQkU\",\n\t\"./mk.js\": \"aQkU\",\n\t\"./ml\": \"AvvY\",\n\t\"./ml.js\": \"AvvY\",\n\t\"./mn\": \"lYtQ\",\n\t\"./mn.js\": \"lYtQ\",\n\t\"./mr\": \"Ob0Z\",\n\t\"./mr.js\": \"Ob0Z\",\n\t\"./ms\": \"6+QB\",\n\t\"./ms-my\": \"ZAMP\",\n\t\"./ms-my.js\": \"ZAMP\",\n\t\"./ms.js\": \"6+QB\",\n\t\"./mt\": \"G0Uy\",\n\t\"./mt.js\": \"G0Uy\",\n\t\"./my\": \"honF\",\n\t\"./my.js\": \"honF\",\n\t\"./nb\": \"bOMt\",\n\t\"./nb.js\": \"bOMt\",\n\t\"./ne\": \"OjkT\",\n\t\"./ne.js\": \"OjkT\",\n\t\"./nl\": \"+s0g\",\n\t\"./nl-be\": \"2ykv\",\n\t\"./nl-be.js\": \"2ykv\",\n\t\"./nl.js\": \"+s0g\",\n\t\"./nn\": \"uEye\",\n\t\"./nn.js\": \"uEye\",\n\t\"./oc-lnc\": \"Fnuy\",\n\t\"./oc-lnc.js\": \"Fnuy\",\n\t\"./pa-in\": \"8/+R\",\n\t\"./pa-in.js\": \"8/+R\",\n\t\"./pl\": \"jVdC\",\n\t\"./pl.js\": \"jVdC\",\n\t\"./pt\": \"8mBD\",\n\t\"./pt-br\": \"0tRk\",\n\t\"./pt-br.js\": \"0tRk\",\n\t\"./pt.js\": \"8mBD\",\n\t\"./ro\": \"lyxo\",\n\t\"./ro.js\": \"lyxo\",\n\t\"./ru\": \"lXzo\",\n\t\"./ru.js\": \"lXzo\",\n\t\"./sd\": \"Z4QM\",\n\t\"./sd.js\": \"Z4QM\",\n\t\"./se\": \"//9w\",\n\t\"./se.js\": \"//9w\",\n\t\"./si\": \"7aV9\",\n\t\"./si.js\": \"7aV9\",\n\t\"./sk\": \"e+ae\",\n\t\"./sk.js\": \"e+ae\",\n\t\"./sl\": \"gVVK\",\n\t\"./sl.js\": \"gVVK\",\n\t\"./sq\": \"yPMs\",\n\t\"./sq.js\": \"yPMs\",\n\t\"./sr\": \"zx6S\",\n\t\"./sr-cyrl\": \"E+lV\",\n\t\"./sr-cyrl.js\": \"E+lV\",\n\t\"./sr.js\": \"zx6S\",\n\t\"./ss\": \"Ur1D\",\n\t\"./ss.js\": \"Ur1D\",\n\t\"./sv\": \"X709\",\n\t\"./sv.js\": \"X709\",\n\t\"./sw\": \"dNwA\",\n\t\"./sw.js\": \"dNwA\",\n\t\"./ta\": \"PeUW\",\n\t\"./ta.js\": \"PeUW\",\n\t\"./te\": \"XLvN\",\n\t\"./te.js\": \"XLvN\",\n\t\"./tet\": \"V2x9\",\n\t\"./tet.js\": \"V2x9\",\n\t\"./tg\": \"Oxv6\",\n\t\"./tg.js\": \"Oxv6\",\n\t\"./th\": \"EOgW\",\n\t\"./th.js\": \"EOgW\",\n\t\"./tk\": \"Wv91\",\n\t\"./tk.js\": \"Wv91\",\n\t\"./tl-ph\": \"Dzi0\",\n\t\"./tl-ph.js\": \"Dzi0\",\n\t\"./tlh\": \"z3Vd\",\n\t\"./tlh.js\": \"z3Vd\",\n\t\"./tr\": \"DoHr\",\n\t\"./tr.js\": \"DoHr\",\n\t\"./tzl\": \"z1FC\",\n\t\"./tzl.js\": \"z1FC\",\n\t\"./tzm\": \"wQk9\",\n\t\"./tzm-latn\": \"tT3J\",\n\t\"./tzm-latn.js\": \"tT3J\",\n\t\"./tzm.js\": \"wQk9\",\n\t\"./ug-cn\": \"YRex\",\n\t\"./ug-cn.js\": \"YRex\",\n\t\"./uk\": \"raLr\",\n\t\"./uk.js\": \"raLr\",\n\t\"./ur\": \"UpQW\",\n\t\"./ur.js\": \"UpQW\",\n\t\"./uz\": \"Loxo\",\n\t\"./uz-latn\": \"AQ68\",\n\t\"./uz-latn.js\": \"AQ68\",\n\t\"./uz.js\": \"Loxo\",\n\t\"./vi\": \"KSF8\",\n\t\"./vi.js\": \"KSF8\",\n\t\"./x-pseudo\": \"/X5v\",\n\t\"./x-pseudo.js\": \"/X5v\",\n\t\"./yo\": \"fzPg\",\n\t\"./yo.js\": \"fzPg\",\n\t\"./zh-cn\": \"XDpg\",\n\t\"./zh-cn.js\": \"XDpg\",\n\t\"./zh-hk\": \"SatO\",\n\t\"./zh-hk.js\": \"SatO\",\n\t\"./zh-mo\": \"OmwH\",\n\t\"./zh-mo.js\": \"OmwH\",\n\t\"./zh-tw\": \"kOpN\",\n\t\"./zh-tw.js\": \"kOpN\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"RnhZ\";","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from '../../environments/environment';\r\nimport { map } from 'rxjs/operators';\r\nimport { Usuario } from '../models/usuario.model';\r\nimport { Hospital } from '../models/hospital.model';\r\nimport { Medico } from '../models/medicos.model';\r\n\r\nconst base_url = environment.base_url;\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BusquedasService {\r\n\r\n  constructor( private http: HttpClient) { }\r\n\r\n  get token():string{\r\n    return localStorage.getItem( 'token') || '';\r\n  }\r\n  //para extraer los headers(token)\r\nget headers(){\r\n  return {\r\n    headers: {\r\n      'x-token':this.token //el this.token esta en la funcion get token()\r\n     }\r\n   }\r\n}\r\n\r\nprivate transformarUsuarios( resultados: any[] ):Usuario[]{\r\n\r\n  return resultados.map(\r\n\r\n    user=> new Usuario( user.nombre,user.email,'',user.img, user.role,user.google)\r\n    );\r\n\r\n}\r\nprivate transformarHospitales( resultados: any[] ):Hospital[]{\r\n\r\n  return resultados\r\n\r\n}\r\n\r\nprivate transformarMedicos( resultados: any[] ):Medico[]{\r\n\r\n  return resultados\r\n\r\n}\r\n\r\nbusquedaGloblal( termino:string){\r\n  const url = `${ base_url }/todo/${ termino }`//ruta definida en el backend(postman)\r\n\r\n    return this.http.get( url, this.headers);\r\n\r\n}\r\n\r\n//busqueda especifica por medicos, usuarios u hospitales\r\nbuscar( tipo: 'usuarios'| 'medicos' | 'hospitales', termino: string){\r\n\r\n  const url = `${ base_url }/todo/coleccion/${ tipo }/${ termino }`//ruta definida en el backend(postman)\r\n\r\n  //retornamos la ruta y los headers(token)\r\n  return this.http.get<any[]>( url ,this.headers).pipe(\r\n    map((resp: any ) => {\r\n\r\n      switch (tipo) {\r\n        case 'usuarios':\r\n          return this.transformarUsuarios(resp.resultado)//resp.resultado viene del backend(ver postman)\r\n          break;\r\n          case 'hospitales':\r\n            return this.transformarHospitales(resp.resultado)//resp.resultado viene del backend(ver postman)\r\n            break;\r\n            case 'medicos':\r\n              return this.transformarMedicos(resp.resultado)//resp.resultado viene del backend(ver postman)\r\n              break;\r\n\r\n        default:\r\n          break;\r\n      }\r\n    })\r\n  )\r\n}\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'adminpro';\r\n}\r\n","<router-outlet></router-outlet>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styles: [\r\n  ]\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>dashboard works!</p>\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { UsuarioService } from '../../../services/usuario.service';\r\nimport { Usuario } from '../../../models/usuario.model';\r\nimport { BusquedasService } from '../../../services/busquedas.service';\r\nimport Swal from 'sweetalert2';\r\nimport { ModalImagenService } from '../../../services/modal-imagen.service';\r\nimport { delay } from 'rxjs/operators';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-usuarios',\r\n  templateUrl: './usuarios.component.html',\r\n  styles: [\r\n  ]\r\n})\r\nexport class UsuariosComponent implements OnInit,OnDestroy {\r\n\r\n  public totalUsuarios:number = 0;\r\n  public usuarios:Usuario [] = [];\r\n  public usuariosTemp:Usuario [] = [];\r\n\r\n  public desde:number = 0;//para la paginacion\r\n  public cargando: boolean = true;\r\n\r\n  public imgSubs:Subscription;\r\n\r\n  constructor(private usuariosService:UsuarioService,\r\n   private busquedaService:BusquedasService,\r\n   private modalImagenService: ModalImagenService\r\n   ) { }\r\n\r\n\r\n  ngOnDestroy(): void {\r\n    this.imgSubs.unsubscribe();\r\n\r\n}\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.cargarUsuarios();\r\n\r\n    //para que se refresque actualice la imagen automaticamente\r\n    this.imgSubs = this.imgSubs =  this.modalImagenService.nuevaImagen.\r\n    pipe(\r\n      delay(100)//retardamos un poco pa que de tiempo la carga\r\n    )\r\n    .subscribe(img=> this.cargarUsuarios())\r\n  }\r\n\r\n  cambiarPagina( valor:number){\r\n\r\n     this.desde += valor;\r\n\r\n     if ( this.desde < 0){\r\n          this.desde = 0;\r\n\r\n     }else if( this.desde >= this.totalUsuarios ){\r\n           this.desde -= valor\r\n     }\r\n\r\n     this.cargarUsuarios();\r\n  }\r\n\r\n  cargarUsuarios(){\r\n    //para el icono del loading\r\n         this.cargando = true;\r\n       //desestructuramos la respuesta\r\n       this.usuariosService.cargarUsuarios( this.desde ).subscribe\r\n       (({total,usuarios})=>{\r\n         this.totalUsuarios = total;\r\n         this.usuarios = usuarios;\r\n         this.usuariosTemp = usuarios;\r\n\r\n         this.cargando = false;\r\n\r\n       })\r\n  }\r\n\r\n  buscar ( termino: string ){\r\n    if( termino.length === 0){\r\n      return this.usuarios = this.usuariosTemp\r\n\r\n    }\r\n    this.busquedaService.buscar('usuarios', termino ).subscribe(\r\n    (resp : Usuario[])=>\r\n        this.usuarios = resp\r\n      )\r\n\r\n\r\n\r\n  }\r\n\r\n  eliminarUsuario( usuario:Usuario ){\r\n    //para no poder borrarse a si mismo\r\n    if ( usuario.uid === this.usuariosService.uid ) {\r\n      return Swal.fire( 'Error','No puede borrarse a si mismo ','error')\r\n    }\r\n\r\n//dialogo predefinido en swetAlert2 y adaptado a la aplicacion\r\n    Swal.fire({\r\n      title: '¿Borrar Usuario?',\r\n      text: `Esta a punto de eliminar a ${ usuario.nombre}`,\r\n      icon: 'question',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Si, borrar'\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        this.usuariosService.eliminarUsuario( usuario ).subscribe(resp=>{\r\n          this.cargarUsuarios();//para que se recargue la pagina y desaparezca el eliminado\r\n          Swal.fire(\r\n            'Borrado!',\r\n            `${ usuario.nombre } fue eliminado correctamente`,\r\n            'success'\r\n          )\r\n        });\r\n      }\r\n    })  }\r\n\r\n  cambiarRole(usuario:Usuario){\r\n       this.usuariosService.guardarUsuario( usuario ).subscribe(resp=>{\r\n\r\n       })\r\n    }\r\n\r\n//MODAL PARA CAMBIAR IMAGEN--------------------------------------------\r\n  abrirModal(usuario:Usuario){\r\n\r\n    this.modalImagenService.abrirModal('usuarios',usuario.uid,usuario.img);\r\n\r\n    }\r\n}\r\n","<div class=\"row animated fadeIn fast\">\r\n    <div class=\"col-12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-body\">\r\n                <input type=\"text\" class=\"form-control\" placeholder=\"Buscar usuario\" (keyup)=\"buscar( txtTermino.value )\" #txtTermino>\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"row animated fadeIn fast\" *ngIf=\"cargando\">\r\n    <div class=\"col-12\">\r\n        <div class=\"alert alert-info text-center\" role=\"alert\">\r\n            <h4 class=\"alert-heading\">Cargando</h4>\r\n            <i class=\"fa fa-spin fa-refresh fa-2x\"></i>\r\n            <p class=\"mb-o\">Por favor espere</p>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"row animated fadeIn fast\" *ngIf=\"!cargando\">\r\n    <div class=\"col-12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-body\">\r\n                <h4 class=\"card-title\">Total de usuarios\r\n                    <!--({{totalUsuarios}})>-->\r\n                </h4>\r\n\r\n                <!--<h4 *ngIf=\"txtTermino.value.length != 0\" class=\"card-title\">Busqueda ({{usuarios.length}}) </h4>\r\n-->\r\n                <h6 class=\"card-subtitle\">Usuarios registrados en la aplicacion</h6>\r\n                <div class=\"table-responsive\">\r\n                    <table class=\"table table-bordered\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th class=\"w-15\"></th>\r\n                                <th>Correo</th>\r\n                                <th>Nombre</th>\r\n                                <th>Role</th>\r\n                                <th>Auth</th>\r\n                                <th class=\"text-nowrap\">Action</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr *ngFor=\"let usuario of usuarios\">\r\n                                <td class=\"text-center\">\r\n                                    <img [src]=\" usuario.img | imagen: 'usuarios'\" (click)=\"abrirModal(usuario)\" class=\"avatar cursor\">\r\n                                </td>\r\n                                <td>{{usuario.email}}</td>\r\n                                <td>{{usuario.nombre}}</td>\r\n                                <td>\r\n                                    <select class=\"form-control w140\" [(ngModel)]=\"usuario.role\" (change)=\"cambiarRole(usuario)\">\r\n                                    <option value=\"ADMIN_ROLE\">Admin</option>\r\n                                    <option value=\"USER_ROLE\">User</option>\r\n\r\n                                  </select>\r\n                                </td>\r\n                                <td>\r\n                                    <span *ngIf=\"usuario.google\" class=\"label label-danger\">Google</span>\r\n                                    <span *ngIf=\"!usuario.google\" class=\"label label-info\">Email</span>\r\n\r\n                                </td>\r\n\r\n                                <td class=\"text-nowrap\">\r\n                                    <a data-toggle=\"tooltip\" data-original-title=\"Editar\">\r\n\r\n                                    </a>\r\n                                    <a data-toggle=\"tooltip\" class=\"cursor\" (click)=\"eliminarUsuario(usuario)\" data-original-title=\"Borrar\">\r\n                                        <i class=\"fa fa-close text-danger text-center\"></i> </a>\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                <div *ngIf=\"txtTermino.value.length === 0\">\r\n                    <button (click)=\"cambiarPagina(-5)\" class=\"btn btn-secondary\">Anteriores</button> &nbsp;\r\n                    <button (click)=\"cambiarPagina(5)\" class=\"btn btn-secondary\">Siguiente</button>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot, UrlTree, Router, CanLoad, Route, UrlSegment } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { UsuarioService } from '../services/usuario.service';\r\nimport { tap } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate , CanLoad{\r\n\r\n\r\n  constructor(private usuarioService: UsuarioService,\r\n    private router: Router){\r\n\r\n  }\r\n\r\n\r\n  canLoad(route: Route, segments: UrlSegment[]): boolean | UrlTree | Observable<boolean | UrlTree> | Promise<boolean | UrlTree> {\r\n    return this.usuarioService.validarToken().pipe(\r\n      tap( estaAutenticado => {\r\n        if( !estaAutenticado ){\r\n          this.router.navigateByUrl('/login');\r\n        }\r\n      })\r\n     );  }\r\n\r\n\r\n  //para proteger las rutas\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot) {\r\n\r\n       return this.usuarioService.validarToken().pipe(\r\n        tap( estaAutenticado => {\r\n          if( !estaAutenticado ){\r\n            this.router.navigateByUrl('/login');\r\n          }\r\n        })\r\n       );\r\n  }\r\n\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-grafica1',\r\n  templateUrl: './grafica1.component.html',\r\n  styles: [\r\n  ]\r\n})\r\n\r\nexport class Grafica1Component{\r\n\r\n  public labels1: string []= ['Download Sales', 'In-Store Sales', 'Mail-Order Sales'];\r\n  public labels2: string []= ['compras', 'In-Store Sales', 'Mail-Order Sales'];\r\n\r\n  public data1  = [\r\n    [800, 450, 100],\r\n\r\n  ];\r\n  public data2  = [\r\n    [900, 10, 200],\r\n\r\n  ];\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col-6\">\r\n        <app-dona [title]=\"'Ventas'\"></app-dona>\r\n    </div>\r\n    <div class=\"col-6\">\r\n        <app-dona [labels]=\"labels1\" [data]=\"data1\">\r\n        </app-dona>\r\n    </div>\r\n</div>\r\n<div class=\"row\">\r\n    <div class=\"col-6\">\r\n        <app-dona [data]=\"data2\" [labels]=\"labels2\"></app-dona>\r\n\r\n    </div>\r\n    <div class=\"col-6\">\r\n        <app-dona [data]=\"data2\"></app-dona>\r\n\r\n    </div>\r\n</div>\r\n","import { Injectable, EventEmitter } from '@angular/core';\r\nimport { environment } from '../../environments/environment';\r\n\r\n\r\nconst base_url = environment.base_url;\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ModalImagenService {\r\n\r\n  private _ocultarModal: boolean = true;\r\n  public  tipo: 'usuarios'| 'medicos' |'hospitales';\r\n  public id: string;\r\n  public img: string;\r\n\r\n  public nuevaImagen : EventEmitter <string> = new EventEmitter<string>();//observable para que se actualice la imagen automaticamente\r\n\r\n  get ocultarModal(){\r\n    return this._ocultarModal;\r\n  }\r\n\r\n   abrirModal(\r\n    tipo: 'usuarios'| 'medicos' |'hospitales',\r\n    id: string,\r\n    img: string = 'no-img'\r\n   ){\r\n\r\n     this._ocultarModal = false;\r\n     this.tipo = tipo;\r\n     this.id = id;\r\n    // this.img = img;\r\n\r\n     if (img.includes('https')) {\r\n         this.img = img;\r\n     } else {\r\n         this.img = `${ base_url }/uploads/${ tipo }/${ img }`\r\n     }\r\n  }\r\n   cerrarModal(){\r\n     this._ocultarModal = true\r\n  }\r\n\r\n\r\n  constructor() { }\r\n}\r\n","import { MedicosService } from './../../../services/medicos.service';\r\nimport { Hospital } from './../../../models/hospital.model';\r\nimport { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { HospitalServiceService } from '../../../services/hospital-service.service';\r\nimport { Medico } from '../../../models/medicos.model';\r\nimport Swal from 'sweetalert2';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ModalImagenService } from '../../../services/modal-imagen.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { delay } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-medico',\r\n  templateUrl: './medico.component.html',\r\n  styles: [\r\n  ]\r\n})\r\nexport class MedicoComponent implements OnInit,OnDestroy {\r\n\r\n  public medicoForm: FormGroup;\r\n  public hospitales : Hospital [] = [];//aqui se van almacenar los hospitales de cargarHospitales()\r\n  public hospitalSeleccionado : Hospital;\r\n  public medicoSeleccionado: Medico;\r\n\r\n  constructor( private fb: FormBuilder,\r\n    private hospitalService:HospitalServiceService,\r\n    private medicoService: MedicosService,\r\n    private router: Router,\r\n    private activateRoute: ActivatedRoute,\r\n    private modalImagenService:ModalImagenService) { }\r\n    private imgSubs: Subscription;\r\n\r\n   ngOnDestroy(){\r\n      this.imgSubs.unsubscribe()\r\n                 }\r\n\r\n\r\n\r\n  ngOnInit(): void {\r\n    //captamos el parametro del medico por id\r\n      this.activateRoute.params.subscribe( ({ id }) =>{\r\n\r\n          this.cargarMedico(id);\r\n\r\n       //para que se refresque actualice la imagen automaticamente cuando la cambiamos\r\n          this.imgSubs = this.imgSubs = this.modalImagenService.nuevaImagen.\r\n                   pipe(\r\n                     delay(100)//retardamos un poco pa que de tiempo la carga\r\n                   )\r\n                   .subscribe(img=> this.cargarMedico(id))\r\n\r\n      })\r\n\r\n   //------------------------------------------\r\n    this.medicoForm = this.fb.group({\r\n      nombre: ['', Validators.required ],\r\n      hospital: ['', Validators.required ],\r\n    });\r\n    //---------------------------\r\n    this.cargarHospitales();\r\n\r\n    //-----------------------------------------------\r\n    /*como es un formulario reactivo podemos crear un observable que detecte los cambios en este campo\r\n    **NOTA :\r\n    [value]=\"hospital._id\" determinado en el select del html como valor del campo por tanto:\r\n    ____this.medicoForm.get( 'hospital' ).valueChanges.subscribe( hospital_id) devuelve el id del hospital que esta en el select\r\n    ____ this.hospitales.find( h => h._id === hospital_id) devuelve el resultado del hospital al hacer match los dos id\r\n    */\r\n    this.medicoForm.get( 'hospital' ).valueChanges.subscribe( hospital_id => {\r\n\r\n       this.hospitalSeleccionado = this.hospitales.find( h => h._id === hospital_id);\r\n       //console.log(this.hospitalSeleccionado);\r\n\r\n    })\r\n\r\n\r\n    //----------HASTA AQUI EL ngOINIT-----------------------------------------\r\n\r\n  }\r\n\r\n  //-FUNCION QUE DEVUELVE UN MEDICO ESPECIFICO------------------------------------------\r\n  cargarMedico( id: string){\r\n\r\n    //si se va crear un medico nuevo va directo a la pantalla de crearlo sin tener en cuenta ningun id\r\n    if( id==='nuevo'){\r\n      return\r\n    }\r\n\r\n    this.medicoService.cargarMedicoPorID( id ).\r\n    //le damos un pequeño retraso para que le de tiempo de cargar toda la informacion correctamente\r\n       pipe(\r\n         delay(100)\r\n    ).subscribe( medico=>{\r\n\r\n      //si el id del medico no existe redirige a la pantalla de los medicos\r\n      if(!medico){\r\n        return this.router.navigateByUrl(`dashboard/medicos`)\r\n\r\n      }\r\n       //desestrucuramos de la respuesta el nombre del medico y el _id del hospital\r\n      const { nombre, hospital:{ _id} } = medico;\r\n\r\n      // console.log(nombre,_id);\r\n\r\n       this.medicoSeleccionado = medico;\r\n\r\n       /*le asignamos al formulario de medico los valores desestruturados para que carge\r\n       automaticamente estos valores al editar un medico\r\n        */\r\n       this.medicoForm.setValue({ nombre, hospital: _id})\r\n    })\r\n\r\n  }\r\n\r\n  //funcion que muestra los hospitales\r\n  cargarHospitales(){\r\n    this.hospitalService.cargarHospitales().subscribe( (hospitales: Hospital []) =>{\r\n     this.hospitales = hospitales;\r\n    })\r\n  }\r\n\r\n\r\n  abrirModal(medico:Medico){\r\n\r\n    this.modalImagenService.abrirModal('medicos', medico._id, medico.img)\r\n\r\n  }\r\n\r\n  guardarMedico(){\r\n\r\n    const { nombre } = this.medicoForm.value;\r\n\r\n    if ( this.medicoSeleccionado ) {\r\n      //si existe el medico seleccionado hay que actualizar\r\n\r\n      //desestructuramos el formulario y el id del medico seleccionado\r\n      const data = {\r\n        ...this.medicoForm.value,\r\n        _id: this.medicoSeleccionado._id\r\n\r\n      }\r\n      this.medicoService.actualizarMedico( data ).subscribe(resp=>{\r\n        Swal.fire(' Actualizado ', `${ nombre } actualizado correctamente`, 'success');\r\n\r\n      })\r\n\r\n    } else {\r\n      //si no existe el medico seleccionado hay que crearlo\r\n\r\n      this.medicoService.crearMedico( this.medicoForm.value ).subscribe( (resp: any)=>{\r\n         Swal.fire(' Creado ', `${ nombre } creado correctamente`, 'success');\r\n         this.router.navigateByUrl(`dashboard/medico/${resp.medico._id}`)\r\n       })\r\n    }\r\n\r\n\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col-md-6\">\r\n        <div class=\"card\">\r\n            <div class=\"card-body\">\r\n                <h4 class=\"card-title\">Medico</h4>\r\n                <h6 class=\"card-subtitle\">Actualizar informacion</h6>\r\n\r\n                <!--[formGroup]=\"medicoForm\" formulario que va acceder a los campos prefefinidos en\r\n                  este FormGroup de medicoComponent.ts-->\r\n\r\n                <form class=\"form p-t-20\" [formGroup]=\"medicoForm\" (submit)=\"guardarMedico()\">\r\n\r\n                    <!--*ngIf=\"medicoSeleccionado\" : si no hay medico creado no mostrar imagen-->\r\n                    <div class=\"form-group row\" *ngIf=\"medicoSeleccionado\">\r\n                        <label for=\"exampleInputuname\">Foto</label>\r\n\r\n                        <div class=\"input-group \">\r\n                            <img class=\"w140 cursor\" (click)=\"abrirModal(medicoSeleccionado)\" [src]=\"medicoSeleccionado.img | imagen:'medicos'\">\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group row\">\r\n                        <label for=\"exampleInputuname\">Nombre</label>\r\n                        <div class=\"input-group\">\r\n                            <div class=\"input-group-addon\"><i class=\"ti-user\"></i></div>\r\n\r\n                            <input type=\"text\" formControlName=\"nombre\" class=\"form-control\" id=\"exampleInputuname\" placeholder=\"Nombre del medico\">\r\n\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group row\">\r\n                        <label for=\"exampleInputEmail1\">Hospital</label>\r\n                        <div class=\"input-group\">\r\n                            <select class=\"form-control\" formControlName=\"hospital\" name=\"\" id=\"\">\r\n                              <option value=\"\">Seleccione hospital</option>\r\n                              <!-- *ngFor=\"let hospital of hospitales\" se cargar los hospitales en el select\r\n                              [value]=\"hospital._id\" este va ser el valor de este campo\r\n                            -->\r\n                              <option *ngFor=\"let hospital of hospitales\"\r\n                              [value]=\"hospital._id\">{{hospital.nombre}}</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    <div class=\"form-group row m-b-0\">\r\n\r\n\r\n                        <button type=\"submit\" [disabled]=\"medicoForm.invalid\" class=\"btn btn-success waves-effect waves-light m-r-10\">\r\n                          <i class=\"fa fa-save\"></i>\r\n                          Guardar cambios</button>\r\n                        <a routerLink=\"/dashboard/medicos\" class=\"btn btn-inverse waves-effect waves-light\">Volver</a>\r\n\r\n                    </div>\r\n                </form>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n    <div class=\"col-md-6 animated fadeIn fast\" *ngIf=\"hospitalSeleccionado\">\r\n        <div class=\"card\">\r\n            <div class=\"card-body\">\r\n                <h4 class=\"card-title\">Hospital</h4>\r\n                <h6 class=\"card-subtitle\">{{hospitalSeleccionado.nombre}}</h6>\r\n                <!--hospitalSeleccionado.img | imagen:'hospitales' al pipe imagen hay que mandarle el tipo en este caso hospitales-->\r\n                <img class=\"img-thumbnail\" [src]=\"hospitalSeleccionado.img | imagen:'hospitales'\">\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    LoginComponent,\r\n    RegisterComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule\r\n  ],\r\n  exports:[\r\n    LoginComponent,\r\n    RegisterComponent,\r\n  ]\r\n})\r\nexport class AuthModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\n//Modulos\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { PagesModule } from './pages/pages.module';\r\nimport { AuthModule } from './auth/auth.module';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { NopagesfoundComponent } from './nopagesfound/nopagesfound.component';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NopagesfoundComponent,\r\n\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    PagesModule,\r\n    AuthModule,\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport Swal from 'sweetalert2'\r\n\r\n\r\nimport { UsuarioService } from '../../services/usuario.service';\r\nimport { Router } from '@angular/router';\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['.//register.component.css'\r\n  ]\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n\r\n  //para ver si el formulario ha sido submit\r\n  public formSubmitted = false;\r\n\r\n  //definimos los campos del formulario y establecemos las validaciones\r\n  public registerForm = this.fb.group({\r\n    nombre: ['',[ Validators.required, Validators.minLength(3)]],\r\n    email: ['', [Validators.required, Validators.email]],\r\n    password: ['', Validators.required],\r\n    password2: ['', Validators.required],\r\n    terminos: [false, Validators.required],\r\n  },{\r\n    validators: this.passwordIguales( 'password', 'password2')\r\n  })\r\n\r\n  constructor( private fb: FormBuilder, private UsuarioService:UsuarioService,\r\n    private router:Router)\r\n   { }\r\n//------------------------------------------------------------------------------\r\n  crearUsuario(){\r\n\r\n    this.formSubmitted = true;\r\n    console.log( this.registerForm.value);\r\n\r\n     //si el formulario es invalido\r\n    if( this.registerForm.invalid){\r\n      return;\r\n    }\r\n    //si el formulario es valido nos subscibimos al servicio para crear el usuario\r\n    this.UsuarioService.crearUsuario( this.registerForm.value ).subscribe( resp =>{\r\n      console.log('usuario creado');\r\n      console.log( resp );\r\n      //cuando creeemos el usuario navegar al dashboard\r\n      this.router.navigateByUrl( '/')\r\n\r\n    },(err) =>{\r\n\r\n    //uso del swetAlert2 para mostrar el error en un modal\r\n\r\n    Swal.fire( 'Error',  err.error.msg, 'error')\r\n\r\n  })\r\n  }\r\n\r\n  campoNoValido( campo: string ): boolean{\r\n    /**si el campo no cumple las validaciones definidas en registerForm y se envia\r\n     * el formulario muestra el texto con el error en el html\r\n     */\r\n   if ( this.registerForm.get(campo).invalid && this.formSubmitted){\r\n    return true;\r\n   }else{\r\n    return false;\r\n   }\r\n  }\r\n  //-------------------------------------------------------------------------------\r\n  //verificacion de contraseñas\r\n  contrasenyasNoValidas(){\r\n\r\n    //extraemos los valores de las contraseñas\r\n    const pass1 = this.registerForm.get('password').value;\r\n    const pass2 = this.registerForm.get('password2').value;\r\n\r\n    //si las contraseñas son distintas y el formulario enviado mostrara el error\r\n    if ((pass1 !== pass2) && this.formSubmitted) {\r\n        return true;\r\n    } else {\r\n      return false;\r\n    }\r\n\r\n  }\r\n//--------------------------------------------------------------------------------\r\n //video 165 de udemy angular avanzado explica esto\r\npasswordIguales(pass1Name, pass2Name){\r\n\r\n        return( formGroup: FormGroup )=>{\r\n          const pass1Control =  formGroup.get( pass1Name );\r\n          const pass2Control =  formGroup.get( pass2Name );\r\n\r\n          if ( pass1Control.value === pass2Control.value ) {\r\n            pass2Control.setErrors( null)\r\n          }else{\r\n            pass2Control.setErrors({noEsIgual: true})\r\n          }\r\n\r\n        }\r\n  }\r\n//-----------------------------------------------------------------------\r\n  //validacion del check\r\n  aceptaTermino(){\r\n    return !this.registerForm.get('terminos').value && this.formSubmitted;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<section id=\"wrapper\" class=\"login-register login-sidebar\" style=\"background-image:url(../assets/images/background/login-register.jpg);\">\r\n    <div class=\"login-box card\">\r\n        <div class=\"card-body\">\r\n            <!--definimos el formulario , la info viene de register.component.ts-->\r\n            <form class=\"form-horizontal form-material\" id=\"loginform\" autocomplete=\"off\" [formGroup]=\"registerForm\" (ngSubmit)=\"crearUsuario()\">\r\n\r\n                <a href=\"javascript:void(0)\" class=\"text-center db\"><img src=\"../assets/images/logo-icon.png\" alt=\"Home\" /><br/><img src=\"../assets/images/logo-text.png\" alt=\"Home\" /></a>\r\n                <h3 class=\"box-title m-t-40 m-b-0\">Register Now</h3><small>Create your account and enjoy</small>\r\n                <div class=\"form-group m-t-20\">\r\n\r\n                    <!--formControlName=\"nombre\" le asigamos este campo de formulario a este input-->\r\n                    <div class=\"col-xs-12\">\r\n                        <input class=\"form-control\" type=\"text\" placeholder=\"Name\" formControlName=\"nombre\">\r\n                    </div>\r\n                </div>\r\n                <!--formControlName=\"email\" le asigamos este campo de formulario a este input-->\r\n                <div class=\"form-group \">\r\n                    <div class=\"col-xs-12\">\r\n                        <input class=\"form-control\" type=\"text\" placeholder=\"Email\" formControlName=\"email\">\r\n                    </div>\r\n                </div>\r\n                <!--formControlName=\"password\" le asigamos este campo de formulario a este input-->\r\n                <div class=\"form-group \">\r\n                    <div class=\"col-xs-12\">\r\n                        <input class=\"form-control\" type=\"password\" placeholder=\"Password\" formControlName=\"password\">\r\n                    </div>\r\n                </div>\r\n                <!--formControlName=\"password2\" le asigamos este campo de formulario a este input-->\r\n                <div class=\"form-group\">\r\n                    <div class=\"col-xs-12\">\r\n                        <input class=\"form-control\" type=\"password\" required=\"\" placeholder=\"Confirm Password\" formControlName=\"password2\">\r\n                    </div>\r\n                </div>\r\n                <!--formControlName=\"terminos\" le asigamos este campo de formulario a este input-->\r\n                <div class=\"form-group row\">\r\n                    <div class=\"col-md-12\">\r\n                        <div class=\"checkbox checkbox-primary p-t-0\">\r\n                            <input id=\"checkbox-signup\" type=\"checkbox\" formControlName=\"terminos\">\r\n                            <label for=\"checkbox-signup\"> I agree to all <a href=\"#\">Terms</a></label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <!--manejo de validacion del formulario-->\r\n                <div class=\"row\">\r\n                    <div class=\"col text-danger\">\r\n                        <p *ngIf=\"campoNoValido('nombre')\">El nombre es obligatorio</p>\r\n                        <p *ngIf=\"campoNoValido('email')\">El email es obligatorio y tiene que ser valido</p>\r\n                        <p *ngIf=\"contrasenyasNoValidas()\">Las contraseñas deben de ser iguales</p>\r\n\r\n                        <p *ngIf=\"aceptaTermino()\">Debe aceptar los terminos de uso</p>\r\n                    </div>\r\n\r\n                </div>\r\n                <div class=\"form-group text-center m-t-20\">\r\n                    <div class=\"col-xs-12\">\r\n                        <button class=\"btn btn-info btn-lg btn-block text-uppercase waves-effect waves-light\" type=\"submit\">Sign Up</button>\r\n                    </div>\r\n                </div>\r\n                <div class=\"form-group m-b-0\">\r\n                    <div class=\"col-sm-12 text-center\">\r\n                        <p>Already have an account? <a routerLink=\"/login\" class=\"text-info m-l-5\"><b>Sign In</b></a></p>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</section>","import { UsuarioService } from './../../services/usuario.service';\r\nimport { Component, AfterViewInit, ViewChild, ElementRef, NgZone } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Validators, FormBuilder } from '@angular/forms';\r\nimport Swal from 'sweetalert2';\r\n\r\ndeclare const google :any;\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: [ './login.component.css'\r\n  ]\r\n})\r\nexport class LoginComponent implements AfterViewInit {\r\n\r\n  @ViewChild( 'googleBtn') googleBtn: ElementRef;//Hace referncia al boton de google\r\n\r\n //para ver si el formulario ha sido submit\r\n\r\n     public formSubmitted = false;\r\n\r\n     //definimos los campos del formulario y establecemos las validaciones\r\n     public loginForm = this.fb.group({\r\n\r\n      /* va predefinido en el campo email lo que tenemos en el campo email del localStorage\r\n      o de lo contrario un string vacio: localStorage.getItem('email') || ''*/\r\n\r\n       email: [localStorage.getItem('email') || '',[Validators.required, Validators.email]],\r\n       password: ['', Validators.required],\r\n       remember:[false]\r\n\r\n     })\r\n\r\n  constructor( private router: Router,private fb:FormBuilder,\r\n               private usuarioService:UsuarioService, private ngZone:NgZone)\r\n               { }\r\n\r\n\r\n //AUTENTICACION CON GOOGLE\r\n //------------------------------------------------------------------------\r\n ngAfterViewInit():void{\r\n   this.googleInit();\r\n               }\r\n\r\n  googleInit(){\r\n    //Esto viene de google\r\n    google.accounts.id.initialize({\r\n      //aqui va el cliente_id que tenemos en los env.\r\n      client_id: \"1043557574365-qa8ia97sb1q75vn4eur405137gn2geft.apps.googleusercontent.com\",\r\n      callback: (response) => this.handleCredentialResponse(response)\r\n  });\r\n\r\n  google.accounts.id.renderButton(\r\n      this.googleBtn.nativeElement, {\r\n          theme: \"outline\",\r\n          size: \"large\"\r\n        }\r\n  )\r\n      }\r\n      //nos subscribimos al servivio para la autenticacion\r\n      handleCredentialResponse( response :any){\r\n           console.log(\"Encoded JWT ID token: \" + response.credential);\r\n          this.usuarioService.loginGoogle ( response.credential ).subscribe( resp=>{\r\n            //console.log( {login: resp })\r\n            this.ngZone.run(()=>{\r\n              this.router.navigateByUrl('/');\r\n            })\r\n          })\r\n  }\r\n\r\n\r\n   //------------------------------------------------------------------------\r\n//login normal con usuario y contraseña\r\n\r\n  login(){\r\n\r\n   this.usuarioService.login(this.loginForm.value).subscribe(resp=>{\r\n    /**si al hacer el login el remember es true guarda el\r\n     * email en el localStorage\r\n     * */\r\n      if ( this.loginForm.get( 'remember' ).value ) {\r\n        localStorage.setItem( 'email' , this.loginForm.get('email').value );\r\n      } else {\r\n        //en caso contrario borra la propiedad email almacenada en el localStorage\r\n        localStorage.removeItem('email');\r\n      }\r\n         // Navegar al Dashboard\r\n         this.router.navigateByUrl('/');\r\n\r\n    //si hay algun error\r\n  },(err)=>{\r\n    Swal.fire('Error',err.error.msg, 'error');\r\n\r\n  });\r\n\r\n  }\r\n}\r\n","<!-- ============================================================== -->\r\n<!-- Main wrapper - style you can find in pages.scss -->\r\n<!-- ============================================================== -->\r\n<section id=\"wrapper\" class=\"login-register login-sidebar text-center\" style=\"background-image:url(../assets/images/background/fondo-hospital.jpg)\">\r\n    <div class=\"login-box card\">\r\n        <div class=\"card-body\">\r\n            <!--definimos el formulario , la info viene de login.component.ts-->\r\n            <form class=\"form-horizontal form-material\" id=\"loginform\" autocomplete=\"off\" [formGroup]=\"loginForm\" (ngSubmit)=\"login()\">\r\n\r\n                <a href=\"javascript:void(0)\" class=\"text-center db\"><img src=\"../assets/images/logo-icon.png\" alt=\"Home\" /><br/><img src=\"../assets/images/logo-text.png\" alt=\"Home\" /></a>\r\n                <div class=\"form-group m-t-40\">\r\n                    <div class=\"col-xs-12\">\r\n                        <input class=\"form-control\" type=\"email\" placeholder=\"Email\" formControlName=\"email\">\r\n                    </div>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <div class=\"col-xs-12\">\r\n                        <input class=\"form-control\" type=\"password\" placeholder=\"Password\" formControlName=\"password\">\r\n                    </div>\r\n                </div>\r\n                <div class=\"form-group row\">\r\n                    <div class=\"col-md-12\">\r\n                        <div class=\"checkbox checkbox-primary pull-left p-t-0\">\r\n                            <input id=\"checkbox-signup\" type=\"checkbox\" class=\"filled-in chk-col-light-blue\" formControlName=\"remember\">\r\n                            <label for=\"checkbox-signup\"> Remember me </label>\r\n                        </div>\r\n                        <a href=\"javascript:void(0)\" id=\"to-recover\" class=\"text-dark pull-right\"><i class=\"fa fa-lock m-r-5\"></i> Forgot pwd?</a> </div>\r\n                </div>\r\n                <div class=\"form-group text-center m-t-20\">\r\n                    <div class=\"col-xs-12\">\r\n                        <button class=\"btn btn-info btn-lg btn-block text-uppercase btn-rounded\" type=\"submit\">Log In</button>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-xs-12 col-sm-12 col-md-12 m-t-10 text-center\">\r\n                        <div class=\"social\">\r\n                            <div #googleBtn id=\"buttonDiv\"></div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"form-group m-b-0\">\r\n                    <div class=\"col-sm-12 text-center\">\r\n                        Don't have an account? <a routerLink=\"/register\" class=\"text-primary m-l-5\"><b>Sign Up</b></a>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n            <form class=\"form-horizontal\" id=\"recoverform\" action=\"index.html\">\r\n                <div class=\"form-group \">\r\n                    <div class=\"col-xs-12\">\r\n                        <h3>Recover Password</h3>\r\n                        <p class=\"text-muted\">Enter your Email and instructions will be sent to you! </p>\r\n                    </div>\r\n                </div>\r\n                <div class=\"form-group \">\r\n                    <div class=\"col-xs-12\">\r\n                        <input class=\"form-control\" type=\"text\" required=\"\" placeholder=\"Email\">\r\n                    </div>\r\n                </div>\r\n                <div class=\"form-group text-center m-t-20\">\r\n                    <div class=\"col-xs-12\">\r\n                        <button class=\"btn btn-primary btn-lg btn-block text-uppercase waves-effect waves-light\" type=\"submit\">Reset</button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</section>\r\n<!-- ============================================================== -->\r\n<!-- End Wrapper -->","export const environment = {\r\n  production: true,\r\n  //cambiar el url de los servicios de prueba:\r\n   base_url:'https://gestion-medicos-hospitales.onrender.com/api'\r\n\r\n};\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SettingdService {\r\n\r\n  //Seleccionamos el elemento del DOM por su id\r\n\r\n  private linkTheme = document.querySelector ( '#theme' );\r\n\r\n  constructor() {\r\n\r\n    //localStorage.getItem('theme') : extrae lo que hay almacenado en el localStorage (account-settings.ts )\r\n    //si no hay nada utiliza la url que pasamos por defecto\r\n\r\n    const url = localStorage.getItem('theme') || './assets/css/colors/default-dark.css' ;\r\n\r\n    //puro javascript cambiamos del elemento seleccionamos el href por la url con el color que queremos\r\n    this.linkTheme.setAttribute( 'href', url)\r\n\r\n  }\r\n\r\n\r\n\r\n  changeTheme( theme:string){\r\n\r\n    //la url utilizara el color que le pasemos por parametro\r\n    const url = `./assets/css/colors/${ theme }.css `\r\n\r\n    //puro javascript cambiamos del elemento seleccionamos el href por la url con el color que queremos\r\n    this.linkTheme.setAttribute( 'href', url )\r\n\r\n    //alamacenamos el color en el localStorage para que siga una vez recargada la pagina ( pages.components.ts)\r\n   localStorage.setItem ( 'theme', url )\r\n\r\n   //funcion para poner un check al color elegido\r\n  this.checkCurrentTheme();\r\n   }\r\n\r\n\r\n\r\n\r\n\r\n//Para poner un check en el color seleccionado\r\n  checkCurrentTheme(){\r\n\r\n      //puro javascript: seleccionamos todos los elementos con la clase 'selector'\r\n       const links = document.querySelectorAll('.selector')\r\n\r\n       //en cada elemento del link ( los que tienen la clase selector)\r\n         links.forEach ( elem =>{\r\n\r\n             //eliminamos la clase working para que no aparezcan duplicados\r\n              elem.classList.remove('working')\r\n\r\n              //obtenemos el color que se encuentra en este atributo del DOM de cada elem\r\n               const btnTheme = elem.getAttribute('data-theme')\r\n\r\n               //obtenemos la url con el color de cada elem\r\n              const btnThemeUrl = `./assets/css/colors/${ btnTheme }.css `\r\n               //obtenemos el href con el color que tiene la pagina en ese instante\r\n                const currentTheme = this.linkTheme.getAttribute ('href')\r\n\r\n               //si el color que tiene la pagina es igual al color del elemento entonces añade la clase working( check )\r\n               if( btnThemeUrl === currentTheme ){\r\n                 elem.classList.add('working')\r\n               }\r\n    })\r\n}\r\n}\r\n","import { PipesModule } from './../pipes/pipes.module';\r\n//Modulos\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AppRoutingModule } from '../app-routing.module';\r\n import { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\n\r\n\r\nimport { ComponentsModule } from '../components/components.module';\r\nimport { SharedModule } from '../shared/shared.module';\r\n\r\n//Componentes\r\nimport { ProgressComponent } from './progress/progress.component';\r\nimport { Grafica1Component } from './grafica1/grafica1.component';\r\nimport { PagesComponent } from './pages.component';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { AccountSettingComponent } from './account-setting/account-setting.component';\r\nimport { RxjsComponent } from './rxjs/rxjs.component';\r\nimport { PerfilComponent } from './perfil/perfil.component';\r\nimport { UsuariosComponent } from './mantenimientos/usuarios/usuarios.component';\r\nimport { HospitalesComponent } from './mantenimientos/hospitales/hospitales.component';\r\nimport { MedicosComponent } from './mantenimientos/medicos/medicos.component';\r\nimport { MedicoComponent } from './mantenimientos/medicos/medico.component';\r\nimport { BusquedasComponent } from './busquedas/busquedas.component';\r\n\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ProgressComponent,\r\n    Grafica1Component,\r\n    PagesComponent,\r\n    DashboardComponent,\r\n    AccountSettingComponent,\r\n    RxjsComponent,\r\n    PerfilComponent,\r\n    UsuariosComponent,\r\n    HospitalesComponent,\r\n    MedicosComponent,\r\n    MedicoComponent,\r\n    BusquedasComponent,\r\n\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    SharedModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    ComponentsModule,\r\n    ReactiveFormsModule,\r\n    PipesModule\r\n  ],\r\n  exports:[\r\n    ProgressComponent,\r\n    Grafica1Component,\r\n    PagesComponent,\r\n    DashboardComponent,\r\n    AccountSettingComponent,\r\n    ProgressComponent,\r\n    RxjsComponent\r\n  ]\r\n})\r\nexport class PagesModule { }\r\n","import { Component,Input,Output,EventEmitter,OnInit} from '@angular/core';\r\nimport { connectableObservableDescriptor } from 'rxjs/internal/observable/ConnectableObservable';\r\n\r\n@Component({\r\n  selector: 'app-incrementador',\r\n  templateUrl: './incrementador.component.html',\r\n  styles: [\r\n  ]\r\n})\r\nexport class IncrementadorComponent implements OnInit {\r\n\r\n @Input() progreso: number = 45 ;\r\n @Input() btnClass: string = 'btn-primary' ;\r\n\r\n @Output() valorSalida: EventEmitter<number> = new EventEmitter();\r\n\r\n\r\n\r\n\r\n  cambiarValor( valor:number){\r\n\r\n    if ( this.progreso >= 100 && this.progreso >= 0){\r\n      this.valorSalida.emit ( 100 );\r\n      return this.progreso = 100;\r\n    }\r\n\r\n    if ( this.progreso <= 0 && this.progreso < 0){\r\n      this.valorSalida.emit ( 0 );\r\n      return this.progreso = 0\r\n    }\r\n\r\n\r\n    this.progreso = this.progreso + valor;\r\n    this.valorSalida.emit ( this.progreso );\r\n\r\n  }\r\n\r\n  //controlamos que el valor que escribimos este entre 0 y 100\r\n  onChange(valor:number){\r\n\r\n    if( valor >= 100){\r\n      this.progreso = 100;\r\n    }else if( valor <= 0 ){\r\n      this.progreso = 0;\r\n    }else{\r\n      this.progreso = valor\r\n    }\r\n\r\n    this.valorSalida.emit ( this.progreso )\r\n  }\r\n\r\n  ngOnInit(): void {\r\n      this.btnClass = `btn  ${ this.btnClass }`\r\n  }\r\n\r\n}\r\n","<div class=\"input-group\">\r\n    <span class=\"input-group-btn\">\r\n   <button [ngClass]=\"btnClass\" (click)=\"cambiarValor(-5)\" type=\"button\">\r\n     <i class=\"fa fa-minus\"></i>\r\n   </button>\r\n</span>\r\n\r\n    <!--[ngClass]=\"{'is-invalid': progreso > 100 || progreso < 0}\": is-invalid es una clase\r\n  predefinida de boostrap que remarca en rojo las condiciones que le pongamos\r\n\r\n  (ngModelChange)=\"onChange($event)\" : (ngModelChange): cuando se produzca cambios en el input, es decir cuando\r\n  escribamos en el se dispara la funcion y el argumento es lo que esta escribiendo\r\n-->\r\n    <input type=\"number\" class=\"form-control\" [ngClass]=\"{'is-invalid': progreso > 100 || progreso < 0}\" placeholder=\"Progreso\" min=\"0\" max=\"100\" (ngModelChange)=\"onChange($event)\" [(ngModel)]=\"progreso\">\r\n\r\n    <span class=\"input-group-btn\">\r\n    <button [ngClass]=\"btnClass\" (click)=\"cambiarValor(+5)\" type=\"button\">\r\n      <i class=\"fa fa-plus\"></i>\r\n    </button>\r\n</span>\r\n</div>\r\n","<div class=\"row animated fadeIn fast\">\r\n    <div class=\"col-4\">\r\n        <div class=\"card\">\r\n            <div class=\"card-body\">\r\n                <h3>Usuarios</h3>\r\n                <div *ngIf=\"usuarios.length === 0\" class=\"alert alert-info animated fadeIn fast\">\r\n                    <p class=\"mb-0\">\r\n                        No hay usuarios con ese termino\r\n                    </p>\r\n                </div>\r\n                <div *ngIf=\"usuarios.length > 0\" class=\"table-responsive\">\r\n                    <table class=\"table\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Foto</th>\r\n                                <th>Nombre</th>\r\n\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr *ngFor=\"let usuario of usuarios\" class=\"animated fadeIn fast\">\r\n                                <td>\r\n                                    <img class=\"avatar \" [src]=\"usuario.img | imagen:'usuarios'\">\r\n                                </td>\r\n                                <td>{{usuario.nombre}}</td>\r\n\r\n                            </tr>\r\n\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-4\">\r\n        <div class=\"card\">\r\n            <div class=\"card-body\">\r\n                <h3>Médicos</h3>\r\n                <div *ngIf=\"medicos.length === 0\" class=\"alert alert-info animated fadeIn fast\">\r\n                    <p class=\"mb-0\">\r\n                        No hay médicos con ese nombre\r\n                    </p>\r\n                </div>\r\n                <div *ngIf=\"medicos.length > 0\" class=\"table-responsive\">\r\n                    <table class=\"table\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Foto</th>\r\n                                <th>Nombre</th>\r\n\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr *ngFor=\"let medico of medicos\" class=\"animated fadeIn fast\">\r\n                                <td>\r\n                                    <img class=\"avatar \" [src]=\"medico.img | imagen:'medicos'\">\r\n\r\n                                </td>\r\n                                <td>\r\n                                    <a [routerLink]=\"['/dashboard/medico', medico._id]\">{{medico.nombre}}</a>\r\n                                </td>\r\n\r\n                            </tr>\r\n\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-4\">\r\n        <div class=\"card\">\r\n            <div class=\"card-body\">\r\n                <h3>Hospitales</h3>\r\n                <div *ngIf=\"hospitales.length === 0\" class=\"alert alert-info animated fadeIn fast\">\r\n                    <p class=\"mb-0\">\r\n                        No hay hospitales con ese termino\r\n                    </p>\r\n                </div>\r\n                <div class=\"table-responsive\" *ngIf=\"hospitales.length > 0\">\r\n                    <table class=\"table\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Foto</th>\r\n                                <th>Nombre</th>\r\n\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr *ngFor=\"let hospital of hospitales \" class=\"animated fadeIn fast\">\r\n                                <td>\r\n                                    <img class=\"avatar \" [src]=\"hospital.img | imagen:'hospitales'\">\r\n\r\n                                </td>\r\n                                <td>{{hospital.nombre}}</td>\r\n\r\n                            </tr>\r\n\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { BusquedasService } from './../../services/busquedas.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Usuario } from '../../models/usuario.model';\r\nimport { Medico } from '../../models/medicos.model';\r\nimport { Hospital } from '../../models/hospital.model';\r\n\r\n@Component({\r\n  selector: 'app-busquedas',\r\n  templateUrl: './busquedas.component.html',\r\n  styles: [\r\n  ]\r\n})\r\nexport class BusquedasComponent implements OnInit {\r\n\r\n  public usuarios: Usuario[]=[];\r\n  public medicos: Medico[]=[];\r\n  public hospitales: Hospital[]=[];\r\n\r\n\r\n  constructor( private activateRoute:ActivatedRoute,\r\n                  private busqudasService: BusquedasService) { }\r\n\r\n  ngOnInit(): void {\r\n    //captamos el parametro de la url y se lo mandamos a la funcion\r\n    this.activateRoute.params.subscribe(({ termino })=>{\r\n      this.busquedaGlobal( termino )\r\n          })\r\n  }\r\n\r\n\r\n   busquedaGlobal( termino: string){\r\n\r\n       this.busqudasService.busquedaGloblal( termino ).subscribe( (resp:any)=>{\r\n           this.usuarios = resp.usuarios;\r\n           this.medicos = resp.medicos;\r\n           this.hospitales = resp.hospitales\r\n      })\r\n   }\r\n\r\n\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ImagenPipe } from './imagen.pipe';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [ ImagenPipe ],\r\n  exports: [ ImagenPipe ],\r\n\r\n})\r\nexport class PipesModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { IncrementadorComponent } from './incrementador/incrementador.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { DonaComponent } from './dona/dona.component';\r\nimport { ChartsModule } from 'ng2-charts';\r\nimport { ModalImagenComponent } from './modal-imagen/modal-imagen.component';\r\n\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    IncrementadorComponent,\r\n    DonaComponent,\r\n    ModalImagenComponent,\r\n\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ChartsModule\r\n  ],\r\n  exports:[\r\n    IncrementadorComponent,\r\n    DonaComponent,\r\n    ModalImagenComponent\r\n  ]\r\n})\r\nexport class ComponentsModule { }\r\n","import { Routes, RouterModule } from '@angular/router';\r\nimport { NgModule } from '@angular/core';\r\n\r\n//componentes\r\nimport { PagesComponent } from './pages.component';\r\n\r\nimport { AdminGuard } from '../guards/admin.guard';\r\nimport { AuthGuard } from '../guards/auth.guard';\r\n\r\n\r\nconst routes: Routes = [\r\n  { path: 'dashboard',\r\n  component: PagesComponent,\r\n  canActivate: [ AuthGuard ],//para proteger las rutas\r\n  canLoad: [AuthGuard],\r\n  loadChildren: ()=> import('./child-routes.module').then( m => m.ChildRoutesModule )//carga de forma perezosa\r\n},\r\n\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class PagesRoutingModule {}\r\n","import { filter, map } from 'rxjs/operators';\r\nimport { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { ActivationEnd, Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-breadcrumbs',\r\n  templateUrl: './breadcrumbs.component.html',\r\n  styles: [\r\n  ]\r\n})\r\nexport class BreadcrumbsComponent implements OnDestroy {\r\n\r\n  public titulo: string ;\r\n  public tituloSubs$: Subscription ;\r\n\r\n  constructor( private router: Router) {\r\n      this.tituloSubs$ = this.getParametroRuta().\r\n                              subscribe ( data =>{ //nos subscribimos a la data que viene del map\r\n\r\n                                 console.log ( data )\r\n\r\n                                 this.titulo = data.titulo //!!ya tenemos el parametro de la ruta\r\n                                 document.title = `AdminPro - ${data.titulo}`// para el titulo que aparece en la ventana\r\n\r\n                                   /**Nota : se puede desestructurar la data asi:\r\n                                 *\r\n                                 *  subscribe ( ({ titulo }) =>{ //\r\n                                      this.titulo = titulo\r\n\r\n                                }\r\n                                  */\r\n                              }\r\n\r\n\r\n        );\r\n   }\r\n\r\n\r\n\r\n   getParametroRuta(){\r\n\r\n    // this.router.events : es un observable en el podemos acceder al parametro de la ruta establecido en ( pages.routing.ts)\r\n   return this.router.events.\r\n             pipe(\r\n               filter( event => event instanceof ActivationEnd),// filtramos para coger los ActivationEnd donde esta el parametro que queremos obtener ( pertence al router )\r\n               filter( ( event: ActivationEnd ) => event.snapshot.firstChild === null ), //nos salen dos ActivationEnd ( filtramos para coger el padre)\r\n               map( ( event: ActivationEnd ) => event.snapshot.data ), //tomamos la data\r\n             )\r\n\r\n   }\r\n\r\n  ngOnDestroy(): void {\r\n\r\n    this.tituloSubs$.unsubscribe();\r\n\r\n  }\r\n\r\n}\r\n","<!-- ============================================================== -->\r\n<!-- Bread crumb and right sidebar toggle -->\r\n<!-- ============================================================== -->\r\n<div class=\"row page-titles\">\r\n    <div class=\"col-md-5 align-self-center\">\r\n        <h3 class=\"text-themecolor\">{{ titulo }}</h3>\r\n    </div>\r\n    <div class=\"col-md-7 align-self-center\">\r\n        <ol class=\"breadcrumb\">\r\n            <li class=\"breadcrumb-item\">\r\n                <a href=\"javascript:void(0)\">Home</a>\r\n            </li>\r\n            <li class=\"breadcrumb-item\">pages</li>\r\n            <li class=\"breadcrumb-item active\">{{ titulo }}</li>\r\n        </ol>\r\n    </div>\r\n\r\n</div>\r\n<!-- ============================================================== -->\r\n<!-- End Bread crumb and right sidebar toggle -->","import { MedicosService } from './../../../services/medicos.service';\r\nimport { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Medico } from '../../../models/medicos.model';\r\nimport { ModalImagenService } from '../../../services/modal-imagen.service';\r\nimport { delay } from 'rxjs/operators';\r\nimport { BusquedasService } from '../../../services/busquedas.service';\r\nimport { Subscription } from 'rxjs';\r\nimport Swal from 'sweetalert2';\r\nimport { Hospital } from '../../../models/hospital.model';\r\n\r\n@Component({\r\n  selector: 'app-medicos',\r\n  templateUrl: './medicos.component.html',\r\n  styles: [\r\n  ]\r\n})\r\nexport class MedicosComponent implements OnInit ,OnDestroy{\r\n\r\n  public medicos: Medico [] = [];\r\n  public medicosTemp : Medico [] = []\r\n  public cargando: boolean = true;    //para el logo de cargar\r\n  private imgSubs: Subscription;\r\n\r\n\r\n  constructor( private medicosService: MedicosService,\r\n                    private modalImagenService: ModalImagenService,\r\n                    private busquedaService: BusquedasService) { }\r\n\r\n\r\n  ngOnDestroy(){\r\n         this.imgSubs.unsubscribe()\r\n                    }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.cargarMedicos();\r\n\r\n    //para que se refresque actualice la imagen automaticamente\r\n   this.imgSubs = this.imgSubs = this.modalImagenService.nuevaImagen.\r\n    pipe(\r\n      delay(100)//retardamos un poco pa que de tiempo la carga\r\n    )\r\n    .subscribe(img=> this.cargarMedicos())\r\n  }\r\n\r\n\r\n  cargarMedicos(){\r\n    this.cargando = true;\r\n\r\n    this.medicosService.cargarMedicos().subscribe( (resp: any)=>{\r\n      this.cargando = false;\r\n\r\n      this.medicos = resp;//almacenamos en el nuestro array la respuesta que viene del backend\r\n\r\n\r\n    })\r\n  }\r\n\r\n\r\n\r\n  abrirModal(medico : Medico){\r\n\r\n    this.modalImagenService.abrirModal('medicos', medico._id, medico.img)\r\n\r\n  }\r\n\r\n\r\n buscar ( termino: string ){\r\n    if( termino.length === 0){\r\n      this.cargarMedicos();\r\n      return this.medicos = this.medicosTemp\r\n\r\n    }\r\n\r\n    this.busquedaService.buscar('medicos', termino ).subscribe(\r\n    resp=>{\r\n        this.medicos = resp\r\n    }\r\n      )\r\n  }\r\n\r\n eliminarMedico( medico:Medico){\r\n\r\n//dialogo predefinido en swetAlert2 y adaptado a la aplicacion\r\nSwal.fire({\r\n  title: '¿Borrar Medico?',\r\n  text: `Esta a punto de eliminar a ${ medico.nombre}`,\r\n  icon: 'question',\r\n  showCancelButton: true,\r\n  confirmButtonColor: '#3085d6',\r\n  cancelButtonColor: '#d33',\r\n  confirmButtonText: 'Si, borrar'\r\n}).then((result) => {\r\n  if (result.isConfirmed) {\r\n    this.medicosService.eliminarMedico(medico._id).subscribe(\r\n      resp=>{\r\n        this.cargarMedicos();\r\n        Swal.fire('Borrado', medico.nombre,'success')\r\n      }\r\n    )\r\n      Swal.fire(\r\n        'Borrado!',\r\n        `${ medico.nombre } fue eliminado correctamente`,\r\n        'success'\r\n      )\r\n    }\r\n  })\r\n  }\r\n}\r\n","<!--ESTO ES UNA PLANTILLA PARA LOS MANTENIMIENTOS-->\r\n<div class=\"row animated fadeIn fast\">\r\n    <div class=\"col-12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-body\">\r\n                <input type=\"text\" class=\"form-control\" placeholder=\"Buscar medico\" #txtTermino (keyup)=\"buscar(txtTermino.value)\">\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"row animated fadeIn fast\" *ngIf=\"cargando\">\r\n    <div class=\"col-12\">\r\n        <div class=\"alert alert-info text-center\" role=\"alert\">\r\n            <h4 class=\"alert-heading\">Cargando</h4>\r\n            <i class=\"fa fa-spin fa-refresh fa-2x\"></i>\r\n            <p class=\"mb-o\">Por favor espere</p>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"row\" *ngIf=\"!cargando\">\r\n    <div class=\"col-12\">\r\n        <div class=\"card\">\r\n            <div class=\"card-body\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-8\">\r\n                        <h4 class=\"card-title\">Medicos </h4>\r\n                    </div>\r\n                    <div class=\"col\">\r\n                        <div class=\"text-right\">\r\n                            <a class=\"btn btn-primary\" [routerLink]=\"['/dashboard/medico/nuevo']\">\r\n                                <i class=\"fa fa-hospital-o\"></i>Crear medico\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <h6 class=\"card-subtitle\">Medicos registrados en la aplicacion </h6>\r\n                <div class=\"table-responsive\">\r\n                    <table class=\"table table-bordered\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th class=\"w-15\">Foto</th>\r\n                                <th>Nombre</th>\r\n                                <th>Hospital </th>\r\n                                <th class=\"text-center\">Editar/Borrar</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr *ngFor=\"let medico of medicos\">\r\n                                <td class=\"text-center\">\r\n                                    <img (click)=\"abrirModal(medico)\" class=\"avatar cursor\" [src]=\" medico.img | imagen: 'medicos' \" alt=\"medico.nombre\">\r\n                                </td>\r\n                                <td>{{medico.nombre}}</td>\r\n                                <td>{{medico.hospital.nombre}}</td>\r\n\r\n\r\n\r\n                                <td class=\"text-nowrap text-center\">\r\n                                    <a [routerLink]=\"['/dashboard/medico', medico._id]\" data-toggle=\"tooltip\" data-original-title=\"Editar\"> <i class=\"fa fa-pencil text-inverse m-r-10\"></i> </a>\r\n                                    <a (click)=\"eliminarMedico(medico)\" data-toggle=\"tooltip\" data-original-title=\"Borrar\"> <i class=\"fa fa-close text-danger\"></i> </a>\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { ChartType } from 'chart.js';\r\nimport { MultiDataSet, Label, Color } from 'ng2-charts';\r\n\r\n@Component({\r\n  selector: 'app-dona',\r\n  templateUrl: './dona.component.html',\r\n  styles: [\r\n  ]\r\n})\r\n\r\n  //NOTA:\r\n//para las graficas de ng2-charts utilizarlas mejor de este enlace https://github.com/valor-software/ng2-charts\r\n\r\nexport class DonaComponent {\r\n // Doughnut\r\n\r\n  @Input() title: string = \"sin titulo\" ;\r\n\r\n @Input('data') doughnutChartData: MultiDataSet = [\r\n  [350, 450, 100],\r\n\r\n];\r\n @Input( 'labels') doughnutChartLabels: Label[] = ['label1', 'label2', 'label3'];\r\n\r\npublic doughnutChartType: ChartType = 'doughnut';\r\n\r\npublic color: Color[] = [\r\n  { backgroundColor:[ '#6857E6', '#009fee', '#f02059']}\r\n]\r\n\r\n}\r\n","<div class=\"card\">\r\n    <div class=\"card-body\">\r\n        <h3>{{ title }}</h3>\r\n        <div style=\"display: block;\">\r\n            <canvas baseChart [data]=\"doughnutChartData\" [labels]=\"doughnutChartLabels\" [chartType]=\"doughnutChartType\" [colors]=\"color\">\r\n      </canvas>\r\n        </div>\r\n\r\n\r\n    </div>\r\n</div>","import { RegisterForm } from './../interfaces/register-form-interface';\r\nimport { Injectable, ElementRef, ViewChild, NgZone, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from '../../environments/environment.prod';\r\nimport { LoginForm } from '../interfaces/login-form-interfaces';\r\nimport { tap, map, catchError } from 'rxjs/operators';\r\nimport { Observable, of } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\nimport { Usuario } from '../models/usuario.model';\r\nimport { CargarUsuario } from '../interfaces/cargar-usuarios.interfaces';\r\n\r\n//declare const gapi: any;\r\ndeclare const google: any;\r\n\r\n//viene de ../../environments/environment.prod\r\nconst base_url = environment.base_url;\r\n\r\n\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UsuarioService{\r\n\r\n  /**nota: cuando defimos   public usuario: Usuario lo que hacemos es crear una constante\r\n   * de tipo Usuario si queremos una instancia de tipo Usuario que acceda a todos sus propiedades y metodos\r\n   * hay que utilizar el new\r\n   */\r\n\r\n  public auth2:any;\r\n  public usuario: Usuario;\r\n\r\n  //--------------------------------------------------------------\r\n//Para extraer el token\r\nget token():string{\r\n  return localStorage.getItem( 'token') || '';\r\n}\r\n\r\n\r\n\r\n//para extraer el uid del usuario\r\nget uid():string{\r\n  return this.usuario.uid || '';\r\n}\r\n//para extraer los headers(token)\r\nget headers(){\r\n  return {\r\n    headers: {\r\n      'x-token':this.token //el this.token esta en la funcion get token()\r\n     }\r\n   }\r\n}\r\n//extraemos el role del usuario\r\nget role():'ADMIN_ROLE' | 'USER_ROLE'{\r\n    return this.usuario.role\r\n}\r\n  //guardar en localStorage\r\n\r\n  guardarLocalStorage( token:string, menu:any ){\r\n    localStorage.setItem('token' , token);\r\n    localStorage.setItem('menu' , JSON.stringify(menu));\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n//----------------------------------------------------------\r\n  validarToken(): Observable <boolean>{\r\n\r\n    //inicamos esto aqui por el error que me daba en el logout\r\n    google.accounts.id.initialize({\r\n      client_id: \"1043557574365-qa8ia97sb1q75vn4eur405137gn2geft.apps.googleusercontent.com\"\r\n    });\r\n\r\n       return this.http.get(`${ base_url }/login/renew`,{\r\n         headers: {\r\n           'x-token':this.token //el this.token esta en la funcion get token()\r\n          }\r\n        }).pipe(\r\n          map( (resp:any) => {\r\n          //nota: el  resp.usuarioBD viene del backend-server\r\n          //nota: a la imagen le ponemos = '' para que mno aparezca el error si viene vacia por undefined\r\n         const {nombre, email, img = '' , role, google ,uid } = resp.usuarioBD;\r\n         this.usuario = new Usuario( nombre, email, '', img, role, google ,uid ) ;\r\n\r\n          //guardamos en el localStorage\r\n          this.guardarLocalStorage(resp.token,resp.menu );\r\n\r\n            return true\r\n\r\n          }),\r\n          //ver video de angular avanzado( proteger rutas de mi aplicacion )\r\n          catchError( error => of(false))\r\n        );\r\n\r\n     }\r\n\r\n\r\n  constructor( private http:HttpClient, private router: Router,private ngZone: NgZone) {\r\n    //this.googleInit();\r\n\r\n  }\r\n\r\n/**NOTA: con el pipe tap desencadenamos un efecto secundario para\r\n *  guardar el token en localStorage\r\n * */\r\n\r\n\r\n//--------------------------------------------------\r\n  //RegisterForm es una interface\r\n  crearUsuario( formData: RegisterForm ){\r\n\r\n   /**Nota:\r\n    * primer argumento de la peticion http ${base_url}/usuario es la url\r\n    * y el segundo argumento es lo que queremos mandar\r\n    *  */\r\n   return this.http.post(`${base_url}/usuarios`, formData ).pipe(\r\n            tap(( resp: any)=>{\r\n\r\n              this.guardarLocalStorage(resp.token,resp.menu );\r\n\r\n\r\n            })\r\n         );\r\n  }\r\n\r\n//----------------------------------------------------\r\n\r\nactualizarPerfil( data:{ email:string,nombre:string, role:string }){\r\n\r\n  /**como el role es required indicamos que la data sera lo que viene como argumento\r\n   * como el role predefinido el usuario\r\n   */\r\n  data = {\r\n    ...data,\r\n    role: this.usuario.role\r\n  }\r\n\r\n  //actualizacion: se pasa la url completa con el uid y la data que viene como argumento\r\n  //nota: se especifica el token\r\n\r\n  return this.http.put(`${base_url}/usuarios/${ this.uid }`, data ,{\r\n    headers: {\r\n      'x-token':this.token //el this.token esta en la funcion get token()\r\n     }\r\n   })\r\n\r\n\r\n}\r\n\r\n//LOGIN\r\n/**Nota: en el post como primer argumento es la ruta y como segundo los datos\r\n *\r\n */\r\n   login( formData:LoginForm ){\r\n    return this.http.post(`${base_url}/login`,formData).pipe(\r\n      tap(( resp: any)=>{\r\n           console.log( 'que traes'+ localStorage);\r\n        this.guardarLocalStorage(resp.token,resp.menu );\r\n      })\r\n    );\r\n   }\r\n\r\n//---------------------------------------------------------\r\n//LOGIN GOOGLE\r\n//LOGIN CON GOOGLE\r\nloginGoogle( token: string ){\r\n      return this.http.post( `${base_url}/login/google` , {token} ).pipe(\r\n                tap(( resp: any)=>{\r\n\r\n                  this.guardarLocalStorage(resp.token,resp.menu );\r\n\r\n\r\n                })\r\n          );\r\n   }\r\n\r\n//---------------------------------------------------\r\n\r\n//LOGOUT\r\nlogout(){\r\n  //elimina el token del usuario y el menu que esta conectado\r\n  localStorage.removeItem('token');\r\n  localStorage.removeItem('menu');\r\n\r\n  //para limpiar el recuadro de google y navegar al login\r\n  google.accounts.id.revoke('reyesblanco1988@gmail.com',()=>{\r\n    this.ngZone.run(()=>{\r\n      this.router.navigateByUrl('/login');\r\n    })\r\n\r\n  })\r\n\r\n\r\n\r\n\r\n}\r\n\r\ncargarUsuarios( desde:number = 0){\r\n\r\n  const url = `${base_url}/usuarios?desde=${desde}`//ruta definida en el backend(postman)\r\n\r\n  //retornamos la ruta y los headers(token) <CargarUsuario> es una interfaz\r\n  return this.http.get<CargarUsuario>( url ,this.headers)\r\n  .pipe(\r\n    //para crear una instancia del modelo de usuario que acceda a sus propiedades y sus metodos\r\n    map(resp=>{\r\n       const usuarios = resp.usuarios.map(\r\n        user=> new Usuario( user.nombre,user.email,'',user.img, user.role,user.google,user.uid))\r\n\r\n      return {\r\n        total:resp.total,\r\n        usuarios\r\n      };\r\n    })\r\n  )\r\n}\r\n\r\n//para eliminar---------------------------------------------------------------------------\r\neliminarUsuario( usuario:Usuario ){\r\n\r\n\r\n  const url = `${base_url}/usuarios/${ usuario.uid }`//ruta definida en el backend(postman)\r\n\r\n  //retornamos la ruta y los headers(token)\r\n  return this.http.delete( url ,this.headers)\r\n}\r\n\r\n\r\n//para cambiar role---------------------------------------------------------------\r\nguardarUsuario( usuario:Usuario){\r\n\r\n  //actualizacion: se pasa la url completa con el uid y la data que viene como argumento\r\n  //nota: se especifica el token\r\n\r\n  return this.http.put(`${base_url}/usuarios/${usuario.uid }`, usuario ,this.headers)\r\n\r\n\r\n}\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from '../../environments/environment';\r\nimport { map } from 'rxjs/operators';\r\nimport { Hospital } from '../models/hospital.model';\r\n\r\nconst base_url = environment.base_url\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class HospitalServiceService {\r\n\r\n  //Para extraer el token\r\nget token():string{\r\n  return localStorage.getItem( 'token') || '';\r\n}\r\n\r\n//para extraer los headers(token)\r\nget headers(){\r\n  return {\r\n    headers: {\r\n      'x-token':this.token //el this.token esta en la funcion get token()\r\n     }\r\n   }\r\n}\r\n\r\n  constructor(  private http:HttpClient) { }\r\n\r\n  cargarHospitales(){\r\n\r\n    const url = `${ base_url }/hospitales`;//ruta definida en el backend(postman)\r\n\r\n    //retornamos la ruta y los headers(token)\r\n    return this.http.get( url , this.headers).pipe(\r\n      //{ok: boolean, hospitales: Hospital[]}  esto es lo que viene en la respuesta del backend\r\n      map( (resp: {ok: boolean, hospitales: Hospital[]} )=> resp.hospitales )\r\n    );\r\n\r\n  }\r\n\r\n  crearHospitales( nombre: string){\r\n\r\n    const url = `${ base_url }/hospitales`;//ruta definida en el backend(postman)\r\n\r\n    //retornamos la ruta , la data y los headers(token)\r\n    return this.http.post( url , { nombre }, this.headers)\r\n\r\n\r\n  }\r\n\r\n  actualizarHospitales( _id:string, nombre: string){\r\n\r\n    const url = `${ base_url }/hospitales/${_id}`;//ruta definida en el backend(postman)\r\n\r\n    //retornamos la ruta , la data y los headers(token)\r\n    return this.http.put( url , { nombre }, this.headers)\r\n\r\n\r\n  }\r\n\r\n  eliminarHospitales( _id:string ){\r\n\r\n    const url = `${ base_url }/hospitales/${_id}`;//ruta definida en el backend(postman)\r\n\r\n    //retornamos la ruta  y los headers(token)\r\n    return this.http.delete( url , this.headers)\r\n\r\n\r\n  }\r\n\r\n\r\n}\r\n\r\n","<aside class=\"left-sidebar\">\r\n    <!-- Sidebar scroll-->\r\n    <div class=\"scroll-sidebar\">\r\n        <!-- Sidebar navigation-->\r\n        <nav class=\"sidebar-nav\">\r\n            <ul id=\"sidebarnav\">\r\n                <li class=\"user-profile\">\r\n                    <a class=\"has-arrow waves-effect waves-dark\" href=\"#\" aria-expanded=\"false\"><img [src]=\"usuario.imagenUrl\" alt=\"user\" />\r\n                        <span class=\"hide-menu\">{{usuario.nombre}} </span></a>\r\n                    <ul aria-expanded=\"false\" class=\"collapse\">\r\n                        <li><a routerLinkActive=\"active\" routerLink=\"./perfil\">Perfil </a></li>\r\n                        <li><a href=\"javascript:void()\">My Balance</a></li>\r\n                        <li><a href=\"javascript:void()\">Inbox</a></li>\r\n                        <li><a routerLink=\"account-settings\">Account Setting</a></li>\r\n                        <li><a routerLink=\"/login\">Logout</a></li>\r\n                    </ul>\r\n                </li>\r\n                <li class=\"nav-devider\"></li>\r\n                <li class=\"nav-small-cap\">PERSONAL</li>\r\n\r\n                <li *ngFor=\"let item of sideService.menu\">\r\n                    <a class=\"has-arrow waves-effect waves-dark\" href=\"#\" aria-expanded=\"false\">\r\n                        <i class=\"{{item.icono}}\"></i>\r\n                        <span class=\"hide-menu\">{{ item.titulo }}\r\n                           <span class=\"label label-rouded label-themecolor pull-right\">{{ item.submenu.length}}</span>\r\n                        </span>\r\n                    </a>\r\n                    <ul aria-expanded=\"false\" class=\"collapse\">\r\n                        <li *ngFor=\"let subMenuItem of item.submenu\">\r\n                            <a [routerLink]=\"subMenuItem.url\" routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{ exact:true }\">{{ subMenuItem.titulo}} </a></li>\r\n\r\n                    </ul>\r\n                </li>\r\n\r\n            </ul>\r\n        </nav>\r\n        <!-- End Sidebar navigation -->\r\n    </div>\r\n    <!-- End Sidebar scroll-->\r\n</aside>","import { Component, OnInit } from '@angular/core';\r\nimport { SidebarService } from '../../services/sidebar.service';\r\nimport { UsuarioService } from '../../services/usuario.service';\r\nimport { Usuario } from '../../models/usuario.model';\r\n\r\n@Component({\r\n  selector: 'app-sidebar',\r\n  templateUrl: './sidebar.component.html',\r\n  styles: [\r\n  ]\r\n})\r\nexport class SidebarComponent implements OnInit {\r\n\r\n  public usuario : Usuario; //variable del tipo del modelo\r\n\r\n\r\n\r\n//  menuItem:any[];\r\n\r\n  constructor( public sideService:SidebarService, private usuarioService: UsuarioService) {\r\n\r\n   // this.menuItem = this.sideService.menu;\r\n    this.usuario = usuarioService.usuario;\r\n\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","import { DashboardComponent } from './pages/dashboard/dashboard.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { Routes , RouterModule} from '@angular/router';\r\n\r\n//Modulos\r\nimport { PagesRoutingModule } from './pages/pages.routing';\r\nimport { AuthRoutingModule } from './auth/auth.routing';\r\n\r\nimport { NopagesfoundComponent } from './nopagesfound/nopagesfound.component';\r\n\r\nconst routes: Routes = [\r\n\r\n  { path:'', redirectTo:'/dashboard' , pathMatch: 'full' },\r\n\r\n  //cuando no encuentra la pagina\r\n  { path: '**', component:NopagesfoundComponent }\r\n\r\n]\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forRoot(routes),\r\n    PagesRoutingModule,\r\n    AuthRoutingModule\r\n  ],\r\n  exports:[ RouterModule ]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SidebarService {\r\n\r\n  /**NOTA: el tratamiento del menu esta en el backend y se graba desde ahi en el localStorage con el objetivo\r\n   * de mostrar opciones del menu en dependencia del role del usuario\r\n   */\r\n\r\n  public menu = [] ;\r\n\r\n  cargarMenu(){\r\n\r\n    //el menu se carga de la informacion que hay en el localStorage y como viene string se parsea para meterlo en el array\r\n\r\n    this.menu = JSON.parse(localStorage.getItem('menu')) || [];\r\n  }\r\n\r\n /* menu:any [] = [\r\n    {\r\n      titulo: 'Dashboard',\r\n      icono: 'mdi mdi-gauge',\r\n      submenu : [\r\n        { titulo: 'Main', url: '/'},\r\n        { titulo: 'ProgressBar', url: 'progress'},\r\n        { titulo: 'Graficas', url: 'grafica1'},\r\n        { titulo: 'Promesas', url: 'promesas'},\r\n        { titulo: 'Rxjs', url: 'rxjs'},\r\n\r\n\r\n      ]\r\n\r\n    },\r\n    {\r\n      titulo: 'Mantenimientos',\r\n      icono: 'mdi mdi-folder-lock-open',\r\n      submenu : [\r\n        { titulo: 'Usuarios', url: 'usuarios'},\r\n        { titulo: 'Hospitales', url: 'hospitales'},\r\n        { titulo: 'Medicos', url: 'medicos'}\r\n\r\n\r\n      ]\r\n\r\n    }\r\n  ]\r\n\r\n  constructor() { }*/\r\n}\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}