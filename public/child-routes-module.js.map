{"version":3,"sources":["./src/app/pages/child-routes.module.ts","./src/app/guards/admin.guard.ts"],"names":[],"mappings":";;;;;;;;;;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAmD;AAGnD,aAAa;AACwD;AACH;AACA;AACoB;AACtF,oEAAoE;AACd;AAEM;AACqB;AACM;AACT;AACF;AACP;AAGd;;;AAEvD,MAAM,WAAW,GAAU;IAExB,iEAAiE;IAClE,yCAAyC;IAEvC,EAAE,IAAI,EAAE,kBAAkB,EAAC,SAAS,EAAE,kGAAuB,EAAE,IAAI,EAAE,EAAE,MAAM,EAAE,kBAAkB,EAAC,EAAC;IACnG,EAAE,IAAI,EAAE,WAAW,EAAC,SAAS,EAAE,iFAAkB,EAAG,IAAI,EAAE,EAAE,MAAM,EAAE,WAAW,EAAC,EAAC;IACjF,EAAE,IAAI,EAAE,iBAAiB,EAAC,SAAS,EAAE,kFAAkB,EAAE,IAAI,EAAE,EAAE,MAAM,EAAE,WAAW,EAAC,EAAC;IACtF,EAAE,IAAI,EAAE,UAAU,EAAC,SAAS,EAAE,8EAAiB,EAAE,IAAI,EAAE,EAAE,MAAM,EAAE,aAAa,EAAC,EAAC;IAChF,EAAE,IAAI,EAAE,UAAU,EAAC,SAAS,EAAE,8EAAiB,EAAE,IAAI,EAAE,EAAE,MAAM,EAAE,UAAU,EAAC,EAAC;IAC7E,gFAAgF;IAChF,EAAE,IAAI,EAAE,MAAM,EAAC,SAAS,EAAE,kEAAa,EAAE,IAAI,EAAE,EAAE,MAAM,EAAE,MAAM,EAAC,EAAC;IACjE,EAAE,IAAI,EAAE,QAAQ,EAAC,SAAS,EAAE,wEAAe,EAAE,IAAI,EAAE,EAAE,MAAM,EAAE,mBAAmB,EAAC,EAAC;IAG/E,gBAAgB;IAChB,EAAE,IAAI,EAAE,YAAY,EAAC,SAAS,EAAE,mGAAmB,EAAE,IAAI,EAAE,EAAE,MAAM,EAAE,0BAA0B,EAAC,EAAC;IACjG,EAAE,IAAI,EAAE,SAAS,EAAC,SAAS,EAAE,0FAAgB,EAAE,IAAI,EAAE,EAAE,MAAM,EAAE,2BAA2B,EAAC,EAAC;IAC5F,EAAE,IAAI,EAAE,YAAY,EAAC,SAAS,EAAE,yFAAe,EAAE,IAAI,EAAE,EAAE,MAAM,EAAE,2BAA2B,EAAC,EAAC;IAE9F,oJAAoJ;IACpJ,EAAE,IAAI,EAAE,UAAU,EAAC,WAAW,EAAC,CAAE,8DAAU,CAAE,EAAE,SAAS,EAAE,6FAAiB,EAAE,IAAI,EAAE,EAAE,MAAM,EAAE,4BAA4B,EAAC,EAAC;CACjI;AAQM,MAAM,iBAAiB;;kFAAjB,iBAAiB;iGAAjB,iBAAiB;qGAHnB,CAAC,6DAAY,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,EACnC,6DAAY;oIAEX,iBAAiB,wFAFlB,6DAAY;;;;;;;;;;;;;;;;;;;;;AC7CjB,MAAM,UAAU;IAErB,YAAqB,cAA6B,EAC7B,MAAa;QADb,mBAAc,GAAd,cAAc,CAAe;QAC7B,WAAM,GAAN,MAAM,CAAO;IAElC,CAAC;IACD,WAAW,CACT,KAA6B,EAC7B,KAA0B;QAExB,iGAAiG;QAEjG,uEAAuE;QACvE,IAAK,IAAI,CAAC,cAAc,CAAC,IAAI,KAAK,YAAY,EAAC;YAC7C,OAAO,IAAI,CAAC;SAEb;aAAI;YACH,0CAA0C;YAC1C,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,YAAY,CAAC;YACtC,OAAO,KAAK,CAAC;SACf;IACL,CAAC;;oEArBU,UAAU;6FAAV,UAAU,WAAV,UAAU,mBAFT,MAAM","file":"child-routes-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n\nimport { AdminGuard } from '../guards/admin.guard';\n\n\n//componentes\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { ProgressComponent } from './progress/progress.component';\nimport { Grafica1Component } from './grafica1/grafica1.component';\nimport { AccountSettingComponent } from './account-setting/account-setting.component';\n//import { PromesasComponent } from './promesas/promesas.component';\nimport { RxjsComponent } from './rxjs/rxjs.component';\n\nimport { PerfilComponent } from './perfil/perfil.component';\nimport { UsuariosComponent } from './mantenimientos/usuarios/usuarios.component';\nimport { HospitalesComponent } from './mantenimientos/hospitales/hospitales.component';\nimport { MedicosComponent } from './mantenimientos/medicos/medicos.component';\nimport { MedicoComponent } from './mantenimientos/medicos/medico.component';\nimport { BusquedasComponent } from './busquedas/busquedas.component';\n\n\nimport { Routes, RouterModule } from '@angular/router';\n\nconst childRoutes: Routes =[\n\n   //data: { titulo: 'Dashboard'} : especificamos parametros de ruta\n  //estas rutas comparten el mismo template\n\n    { path: 'account-settings',component: AccountSettingComponent, data: { titulo: 'Account-settings'}},\n    { path: 'dashboard',component: DashboardComponent , data: { titulo: 'Dashboard'}},\n    { path: 'buscar/:termino',component: BusquedasComponent, data: { titulo: 'Busquedas'}},\n    { path: 'progress',component: ProgressComponent ,data: { titulo: 'ProgressBar'}},\n    { path: 'grafica1',component: Grafica1Component ,data: { titulo: 'Grafica1'}},\n    //{ path: 'promesas',component: PromesasComponent, data: { titulo: 'Promesas'}},\n    { path: 'rxjs',component: RxjsComponent ,data: { titulo: 'Rxjs'}},\n    { path: 'perfil',component: PerfilComponent ,data: { titulo: 'Perfil de usuario'}},\n\n\n       //Mantenimientos\n       { path: 'hospitales',component: HospitalesComponent ,data: { titulo: ' Mantenimiento Hopitales'}},\n       { path: 'medicos',component: MedicosComponent ,data: { titulo: 'Mantenimiento de Medicos '}},\n       { path: 'medico/:id',component: MedicoComponent ,data: { titulo: 'Mantenimiento de Medicos '}},\n\n       //Rutas de admin protegida en AdminGuard  para que el usuario que no sea administrador no acceda a traves de la url directamente al usuarioComponent\n       { path: 'usuarios',canActivate:[ AdminGuard ], component: UsuariosComponent ,data: { titulo: 'Mantenimiento de Usuarios '}},\n]\n\n\n@NgModule({\n  declarations: [],\n  imports: [RouterModule.forChild(childRoutes)],\n  exports: [RouterModule]\n})\nexport class ChildRoutesModule { }\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { UsuarioService } from '../services/usuario.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AdminGuard implements CanActivate {\r\n\r\n  constructor( private usuarioService:UsuarioService,\r\n               private router:Router){\r\n\r\n  }\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): boolean{\r\n\r\n      //NOTA: esta restriccion en la ruta se establece en pages.routing aplicandose a UsuariosComponent\r\n\r\n      //si el role del usuario es ADMIN_ROLE  dejalo acceder a todas la rutas\r\n      if ( this.usuarioService.role === 'ADMIN_ROLE'){\r\n        return true;\r\n\r\n      }else{\r\n        //si no es ADMIN_ROLE mandalo al dashboard\r\n        this.router.navigateByUrl('/dashboard')\r\n         return false;\r\n      }\r\n  }\r\n\r\n}\r\n"],"sourceRoot":"webpack:///"}